{"./":{"url":"./","title":"Introduction","keywords":"","body":"介绍 长春市深蓝软件开发平台-开发文档 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-01 07:58:13 "},"readme.html":{"url":"readme.html","title":"前言","keywords":"","body":"介绍 长春市深蓝软件开发平台-开发文档 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-01 07:58:13 "},"kai-fa-ji-chu-zhi-shi.html":{"url":"kai-fa-ji-chu-zhi-shi.html","title":"开发基础知识","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-01-28 15:39:59 "},"part1/1.html":{"url":"part1/1.html","title":"JavaScript常见对象及方法","keywords":"","body":"JavaScript常见对象及方法 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part1/1/stringzi-fu-chuan-dui-xiang.html":{"url":"part1/1/stringzi-fu-chuan-dui-xiang.html","title":"String-字符串对象","keywords":"","body":"String-字符串对象 学习文档：https://www.w3school.com.cn/js/jsref_obj_string.asp 常用方法： charAt(pos) 作用：获取指定位置的字符； 说明：参数pos为数值类型，从0开始； 示例代码： var char = “hello”.chartAt(3); //char为l; indexOf(searchString) 作用：获取指定字符串第一次出现的位置; 说明：参数为字符串；返回值为数值，从0开始。如果不存在指定的字符，返回-1； 示例代码： var index = “hello”.indexOf(“el”); Split(separator) 作用：用指定的字符分割字符串； 说明：参数为字符串，返回分割后的字符数组； 示例代码： var arr = “hello,world,js”.split(“,”); //arr--->[\"hello\",\"world\",\"js\"]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 16:13:02 "},"part1/1/mathshu-xue-dui-xiang.html":{"url":"part1/1/mathshu-xue-dui-xiang.html","title":"Math-数学对象","keywords":"","body":"Math-数学对象 学习文档：https://www.w3school.com.cn/jsref/jsref_obj_math.asp Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 16:13:49 "},"part1/2.html":{"url":"part1/2.html","title":"SQL","keywords":"","body":"SQL SQL操作JSON 1、 JSON转SQL数据操作语句 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part1/3.html":{"url":"part1/3.html","title":"MongoDB应用","keywords":"","body":"MongoDB应用 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part1/4.html":{"url":"part1/4.html","title":"MongoDB数据库数据类型","keywords":"","body":"MongoDB数据库数据类型 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part1/quan-ju-dui-8c61-app.html":{"url":"part1/quan-ju-dui-8c61-app.html","title":"全局对象-app","keywords":"","body":"全局对象-app 说明：在程序的任何地方都可以访问到app这个全局的应用程序对象。 属性：CurrentApp 类型：对象； 说明：当前应用对象； 属性和方法： 属性：SecurityContext 类型：对象； 说明：在程序的任何地方都可以访问到app. SecurityContext这个全局的安全上下文对象。 属性：CurrentTheme 类型：字符串； 说明：应用主题名称，默认值：'dbtheme'； 方法：Platform() 说明：获取运行的平台类型，返回值为字符串，\"Mobile\"表示手机端，\"Windows_PC\"表示PC端。 可以通过这个方法的返回值判断当前应用运行的平台，然后进行相应的操作。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-24 08:18:19 "},"part1/chang-yong-shu-xing-3001-fang-fa.html":{"url":"part1/chang-yong-shu-xing-3001-fang-fa.html","title":"常用属性、方法","keywords":"","body":"平台常用属性/方法 判断横屏还是竖屏 代码： app.ScreenMode()； 说明：返回值为0-纵向， 1-横向； App蓝牙打印 代码： //1、蓝牙打印机连接设置： Dbsoft.Printing.printSetup(cb) //2、打印内容： //1)、打印html内容： Dbsoft.Printing.printHtmlByBT(content,w,h); //2)、打印文本内容： Dbsoft.Printing.printDataByBT(text) 说明：1、打印设置参数cb为回调函数，function(){}; 2、1)、content为html字符串，w-页面宽度，例：”300”，h-页面高度，例:”300”； 2)、text-纯文本字符串，换行使用\\n换行符； 打印PDF文档 代码： Dbsoft.Printer.PrintPDF(url,fName,dataJSON) 说明：参数说明：url，字符串，PDF文档地址；fName：字符串，文档名称；dataJSON，JSON字符串，结构{\"Printer\":\"打印机名称\",\"Width\":\"宽度，单位为mm\",\"Height\":\"高度，单位为mm \",“FromPage\":\"起始页码\",\"ToPage\":\"结束页码\",\"ScaleMode\":\"缩放比例，默认为0，按照纸张大小缩放；1-原PDF尺寸打印\"} 砚台PC安装插件方法 代码： Dbsoft.System.LoadAssembly(assemblyName) 说明：assemblyName:字符串，插件名字；(首次安装插件后，需要重启应用)； 下载文件方法 代码： //参数tasks类型为JSON字符串，格式：{\"Tasks\":[{\"Url\":\"\",\"FileName\":\"\"}]} Dbsoft.System.DownloadFiles(tasks); 说明：Url：文件的绝对路径，FileName:保存文件时，为文件命名； 获取砚台运行的客户端操作系统 代码： app.OSType( ) 说明：返回值类型为字符串，“windows”-Windows系统；“android”-安卓系统；“ios”-iOS系统； 本地存储数据读取 代码： DBFX.Dbsoft.System.loadConfiguration(Name); 说明：加载本地数据，Name字符串，数据字段名称，返回值：返回值 json字符串。备注：返回空字符串代表加载失败; 本地数据存储 代码： DBFX.Dbsoft.System.saveConfiguration(Name, JsonString); 说明：保存本地数据；Name 字符串，数据字段名称，JsonString Json字符串，返回值：返回值 1-保存成功，0- 保存失败； 控件滚动到窗口的可视区域内 代码： Control.ScrollIntoView(mode); 说明：Control为控件对象；mode为滚动参数，mode为Boolean类型时，1.如果为true，元素的顶端将和其所在滚动区的可视区域的顶端对齐。2.如果为false，元素的底端将和其所在滚动区的可视区域的底端对齐。mode为Object型参数时，结构：{behavior: \"auto\" | \"instant\" | \"smooth\",block: \"start\" | \"end\"}； 获取设备码 代码： PC: app.EnvironVariables.MAC APP:app.EnvironVariables.DeviceId 说明： 清缓存 代码： Dbsoft.System.clearWebCache() 说明：清除砚台缓存; 判断当前运行环境（正式版or测试版） 代码： var host = window.location.host; 说明：测试版：host == \"inkstone.dbazure.cn\"； 生成网页页地址的短链接服务 代码： 服务地址：https://lc.dbazure.cn/svcbus/svcbus.ashx 服务资源：DB.FX.Storage.MongoDBService 存储服务：DBAzure 数据库：DB_ShortUri 存储过程：SP_GetShortUrl 参数：长连接字符串 说明：微信扫码加载界面时，拼接的地址过长，导致生成二维码复杂，不易扫描识别，所以使用短链接生成二维码；调用存储过程，参数传入长链接字符串，存储过程的返回值为生成的短链接； 视频会话 代码： //参数说明： //uid：字符串，\"\"； //appid：字符串，AgoraRTC平台appid，\"4df747ae375d4933ab9065506f63b08d\"； //roomNum：字符串，视频会话房间号； //title：字符串，会话界面显示的标题，默认为roomNum； //iconImage:会话界面在对方未接通时显示图片地址； Dbsoft.System.Advance.makeVideoCall(uid,appid,roomNum,title,iconImage)； 说明： 加载主题样式 代码： DBFX.Theme.LoadTheme(name,mode); 说明：在启动项里调用此方法加载定制主题样式；name:字符串，主题名；mode:数值，0-App端，1-PC端； 阻止App页面触发左侧滑动事件回退页面 代码： thisForm.CanTouchBak=1； 说明：页面布局了支持左右滑动的控件时，手指从左向右滑动时会触发回退页面的操作，可设置页面表单对象的CanTouchBak为1，阻止回退操作发生； 查看、浏览图片 代码： DBFX.Web.Controls.Image.ShowByFullScreen (imgurl)； 说明：imgurl-字符串类型，图片地址； 设置App界面横屏显示 代码： Dbsoft.System.Advance.setScreenOrientation(mode) 说明：参数mode为字符串类型，“0”-竖屏显示；“1”-横屏显示；默认竖屏显示； 拨打电话 代码： DBFX.Dbsoft.System.call(phoneNum); 说明：phoneNum字符串类型，电话号码; 隐藏PC页面头部标题栏 代码： Form.HasTitleBar= false； 说明：Form指代当前界面的表单对象； 隐藏APP页面头部导航栏 代码： Form.IsHideHeader = true; 说明：Form指代当前界面的表单对象； 文字转语音 代码： Dbsoft.System.TextToSpeech(message, 1); 说明：message:播放的语音字符串； 阻止事件冒泡 代码： window.event.cancelBubble = true 说明：实际应用：ListView模板中的按钮控件点击事件执行时不触发ItemClick事件，在按钮点击事件里加上这段代码。 验证规则是否通过 代码： Validate( ) 说明：返回值为true时，说明验证通过，返回值为false是，说明验证未通过；可以通过thisForm对象调用，验证表单上所有设置了验证规则的控件是否通过验证；可以通过Panel对象调用，验证Panel内所有设置了验证规则的子控件是否通过验证；可以通过控件对象调用，验证控件的验证规则是否通过；未设置验证规则的控件，默认返回true。 加载动画显示与关闭方法 代码： //1、加载动画显示： DBFX.Web.Controls.LoadingPanel.Show(message); //2、加载动画关闭： DBFX.Web.Controls.LoadingPanel.Close() ; 说明：参数message为提示信息； 加载网页资源 代码： 操作步骤： 1、创建新的页面资源，布局一个“富文本显示框”控件，并为“富文本显示框”控件命名； 2、在需要执行加载网页资源的事件委托里，执行“加载表单”，“加载表单”设置“UI资源”项为步骤1创建的页面资源地址； 3、在步骤2的“加载表单”的“调用成功”里面进行“变量赋值”操作： uiview.FormControls.自定义富文本显示框名.Value = “” 说明：width:显示网页资源的宽度；height：显示网页资源的高度；src:显示的网页资源地址； PC打印调用 代码： //调用步骤： //1、获取文档对象： var pdoc =Dbsoft.Printer.CreatePrintDocument(“”)； //2、文档对象写入HTML资源： pdoc.WriteHtmlData(htmlData); //3、展示打印预览界面： pdoc.ShowDialog() //或者直接打印 pdoc.Print() 参数htmlData说明： //HTML页面标签样式转换成字符串； //示例： ”跳转1跳转2跳转3” 说明：清除砚台缓存; PC图片预览+上传 代码： var imageJson = DBFX.Dbsoft.System.UploadImages(imageJSON) //参数imageJSON格式： {“Title”:””, “Action”:””, “ImageTypes”:[{“Text”:”图片名称，不允许重名”,”ImageUrl”:”图片地址”,”Width”:”图片宽度”,”Height”:”图片高度”}]} 说明：参数说明：imageJson类型--json字符串,Title：上传图片的界面标题；Action：上传地址；ImageTypes：预览图片集合；返回值imageJson和参数imageJSON格式一致； 发送短信 代码： DBFX.ExInterfaces.SMS.SendMsg(phone,msg,button,func); 说明：参数说明： phone:字符串，接收信息的电话号码；msg：字符串，普通的短信直接为信息内容字符串，发送验证码时信息格式为：”提示信息:{0}”；示例：”欢迎注册……您的注册验证码:{0}”；button:对象，触发发送验证码的按钮对象；func:回调函数，参数为发送的验证码，示例：function(vcode){button.SendCode=vcode;}；发送普通短信时， button参数传undefined； 数据二层分组 代码： var grpdata=DBFX.Data.Grouping(itemSource,[“分组列1”，”分组列2”],”分组集合属性名”)； 示例： var students=[{Name:”张三”,Sex:”男”,Class:”a”},{Name:”张三”,Sex:”男”,Class:”a”},{Name:”张三”,Sex:”男”,Class:”a”},{Name:”白素贞”,Sex:”女”,Class:”a”},{Name:”小青”,Sex:”女”,Class:”B”},{Name:”许仙”,Sex:”男”,Class:”B”}]； var gstudents=DBFX.Data.Grouping(students,[“Sex”],”Students”); //按性别分组，返回对象 [{Sex:”男”,Students:[{….}]},{Sex:”女”,Students:[{….}]}] PC图片浏览下载打印 代码： DBFX.Dbsoft.System.ShowPictures( imagejson); //imagejson格式: { “Title”:”xxx资质图片”, “ImageFolder”:”xxx资质图片”, “Images”:[{“Text”:””,”ImageUrl”:””,”Width”:”100”,”Height”:”333”}]} 说明：参数说明：imagejson——json字符串Title—标题； ImageFolder—下载时保存的文件夹名； Text—当前图片名（所有图片名不要重名，否则下载时会被覆盖）； ImageUrl—图片的URL地址； Width—图片显示宽度； Height—图片显示高度； App选择照片上传 代码： //callback：回调函数； //UploadUrl：上传地址，” https://wfs.dbazure.cn/wfs.ashx?AppId=\"+app.EnvironVariables.CurrentApp_AppId+\"&UId=&OwnerId=”； //MsgBody：消息体； DBFX.Dbsoft.System.Advance.PickerImage.start(callback,UploadUrl,MsgBody); //回调函数参数为上传成功后的回调，可以进行分析、处理； //示例： function (dataObj) { var ImgUrl = eval(“(“ + dataObj + “)”); cmd.Sender.FormContext.Form.FormControls[“PhotoUrl”].ImageUrl = eval(ImgUrl.serverResponseMessage)[0].Url; } 说明： App拍照上传 代码： DBFX.Dbsoft.System.Advance.CameraAdvance.start(callback,UploadUrl,MsgBody) //callback：回调函数； //UploadUrl：上传地址，” https://wfs.dbazure.cn/wfs.ashx?AppId=\"+app.EnvironVariables.CurrentApp_AppId+\"&UId=&OwnerId=”； //MsgBody：消息体； 回调函数参数为上传成功后的回调，可以进行分析、处理； //回调函数示例： function (dataObj) { var ImgUrl = eval(“(“ + dataObj + “)”); cmd.Sender.FormContext.Form.FormControls[“PhotoUrl”].ImageUrl = eval(ImgUrl.serverResponseMessage)[0].Url; } 说明： 关闭窗口 代码： @thisForm.Close() 说明： 下载应用 代码： window.location.href @”http://lc.dbazure.cn/app”（PC）版 @”http://lc.dbazure.cn/Apps/9525c3d20cbd43b887029ce1d174c1be/download.html”（APP版） @”http://m.dbazure.net” 说明： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 17:05:55 "},"part2/":{"url":"part2/","title":"控件使用说明","keywords":"","body":"控件使用说明 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/kong-jian-gong-gong-shu-xing.html":{"url":"part2/kong-jian-gong-gong-shu-xing.html","title":"控件公共属性","keywords":"","body":"控件公共属性 Enabled--控件可用性设置,true-可用;false-不可用； 类型：布尔； 值：true/false； 示例代码： control.Enabled=true; Visibled--控件可见性设置,true-可见;false-不可见;需要设置控件的“显示方式”才有效； 类型：布尔； 值：true/false； 示例代码： control. Visibled =true; ReadOnly--控件只读性设置,true-只读;false-可编写； 类型：布尔； 值：true/false； 示例代码： control. ReadOnly =true; BackgroundColor--背景色设置 类型：字符串； 值：十六进制颜色值、RGB颜色字符串、RGBA颜色字符串、特定颜色字符串； 示例代码： control. BackgroundColor=\"#ddd666\"; BackgroundImageUrl--背景图片设置 类型：字符串； 值： 示例代码： Color--前景色（字体）颜色设置 类型：字符串； 值：十六进制颜色值、RGB颜色字符串、RGBA颜色字符串、特定颜色字符串； 示例代码： control.Color = \"#ddd666\"; Display--控件显示方式 类型：字符串； 值：“block”/ “inline-block”/ “none”； 示例代码： control.Display = \"block\"; Width--控件宽度 类型-字符串； 值：数值+单位或者百分比； 示例代码： control.Width = \"100px\"; control.Width = \"50%\"; Height--控件高度 值：数值+单位或者百分比； 示例代码： control.Height = \"100px\"; control.Height = \"50%\"; ComputedHeight--获取计算高度 类型-字符串，只读属性； 值：数值+\"px\"; 说明：控件渲染到界面后才能获取到值； ComputedWidth--获取计算宽度 类型：字符串，只读属性； 值：数值+'px'; 说明：控件渲染到界面后才能获取到值； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/shi-56fe28-kong-4ef629-gong-gong-yang-shi-she-ji.html":{"url":"part2/shi-56fe28-kong-4ef629-gong-gong-yang-shi-she-ji.html","title":"视图(控件)公共样式设计","keywords":"","body":"视图（控件）公共属性设置 布局设置 漂浮位置Float； 属性设置：下拉框； 可选值：未设置、靠左、靠右； 说明：一行有极少的空间可供浮动控件，控件会跳至下一行，直到某一行拥有足够的空间为止。 显示方式Display 属性设置：下拉框； 可选值：未设置、内联块、区块、弹性盒； 说明：通过属性Visibled控制控件的显示与否，一定要为控件设置显示方式！ 定位方式Position 属性设置：下拉框； 可选值：未设置、相对布局、绝对布局、静态布局、固定布局； 说明：子控件绝对布局，父容器相对布局； 层叠顺序 属性类型：数值； 说明：可以有负值，仅对定位（绝对布局、固定布局）控件有效；如果为正数，则离用户更近，为负数则表示离用户更远。 停靠方式 属性设置：下拉框； 可选值：未设置、靠上、靠左、靠右、靠下、填充、靠上； 说明：只有控件被放置在“控件停靠面板”中，设置此属性才会有效果； 圆角弧度 属性类型：字符串 值：数值+单位或者百分数； 说明：设置控件四个角的圆角弧度值； 透明度Opacity 属性类型：数值； 取值范围：0.0-1.0； 说明：从 0.0 （完全透明）到 1.0（完全不透明）。 左Left 上Top 右Right 下Bottom 高Height 宽Width 最大高宽Max 最小高宽Min 外边界设置Margin 属性类型：字符串； 值：5px-上、下、左、右；5px 10px-上下、左右;5px 10px 5px-上、左右、下;5px 10px 5px 20px-上、右、下、左; 说明：可以有 1 到 4 个值，多个值用空格分隔；设置为百分比时，参照父容器的宽度的百分比值； 内边界设置Padding 同’外边界设置‘； 水平对齐方式 属性设置：下拉框； 可选值：未设置、靠左对齐、居中对齐、靠右对齐、拉伸适应； 说明：设置容器中子控件的水平位置； 纵向对齐方式 属性设置：下拉框； 可选值：未设置、顶部对齐、居中对齐、底部对齐、拉伸适应； 说明：设置容器中子控件的水平位置； 颜色外观 背景图片 选择图片按钮、清除图片按钮 通过点击相应按钮进入相应的界面设置背景BackgroundImageUrl； 1、设置背景图片：url(“图片地址”); 2、设置渐变色：linear-gradient（）; 示例： //设置背景图片或者背景渐变色 1、url(“xxx.png”)； 2、linear-gradient(120deg, #155799, #159957)； 背景尺寸 字符串,像素值、百分比、cover、contain 示例：1、100px 100px;2、100% 100%；3、contain; 说明：1、像素: 设置背景图像的宽度和高度，中间用空格分隔。如果只设置一个值，则第二个值会被设置为 “auto”。2、百分比:以父元素的百分比来设置背景图像的宽度和高度。3、cover：把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。背景图像的某些部分也许无法显示在背景定位区域中。4、contain：把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域。 背景颜色（颜色选择器）----设置控件背景显示颜色 前景颜色（颜色选择器）----设置控件内文字颜色 边框颜色（颜色选择器）----设置控件边框颜色 边线宽度 字符串 数值+px 示例：2px设置控件边框线宽边线类型字符串 可选值：none(无边框)、hidden(与none相同)、dotted(点状边框)、dashed(虚线)、solid(实线)、double(双线)、inherit(继承自父元素) 示例：solid 说明：dotted和dashed在大多数浏览器中呈现为实线 阴影 一组按顺序填写的阴影描述词组，用空格分隔。 语法(注意顺序)：h-shadow(水平阴影的位置，必需)v-shadow(垂直阴影的位置，必需)blur(模糊距离，可选)spread(阴影尺寸，可选)color(阴影颜色，可选)inset(将外部阴影改为内部阴影) 示例：10px 10px 5px #666 说明：h-shadow和v-shadow必需，水平和垂直阴影的位置，允许负值；其余可选。每个阴影由 2-4 个长度值、可选的颜色值以及可选的 inset 关键词来规定。省略长度的值是 0。 字体设置 字体 下拉框 可选值：未设置、宋体、楷体、黑体、仿宋 选择风格 下拉框 可选值：未设置、正常、斜体、粗体 字体大小 字符串 例：16px； 说明：设置字体显示大小 字体修饰 □下划线 □删除线 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 15:37:12 "},"part2/chang-gui-kong-jian.html":{"url":"part2/chang-gui-kong-jian.html","title":"常规控件","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/huan-xing-biao-ji-breakline.html":{"url":"part2/huan-xing-biao-ji-breakline.html","title":"换行标记 BreakLine","keywords":"","body":"换行标记 BreakLine 作用：开发平台，页面布局控件时，作为布局参考线辅助布局，独占一行； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/wen-ben-biao-qian-label.html":{"url":"part2/wen-ben-biao-qian-label.html","title":"文本标签 Label","keywords":"","body":"文本标签 Label 作用：文本显示 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 文本 类型：字符串； 值： 说明：默认显示的文本； 文本显示行数 类型：数值； 值：默认：空； 说明：为指定宽高的文本标签设置显示行数，显示不完全的内容以省略号代替。PC端设置数字后只会显示一行； 图片选择 类型：按钮； 值：选择图片、清除图片； 说明：设置显示图片地址； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 数据格式 类型：字符串； 说明：设置显示文本的格式； 1、控制显示的小数位数：##0.00； 2、日期时间：yyyy-MM-dd HH:mm:ss； 3、日期：yyyy-MM-dd； 4、时间：hh:mm:ss； 5、货币：C 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 事件处理程序 Click 调用时机：用户点击控件时； 说明： 备注： 属性、方法 Text-属性，设置或获取控件显示的字符串； 说明：字符串类型； 示例： Label.Text = '姓名' Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/wen-ben-xian-shi-kuai-textblock.html":{"url":"part2/wen-ben-xian-shi-kuai-textblock.html","title":"文本显示块 TextBlock","keywords":"","body":"文本显示块 TextBlock 作用：显示多行文本； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 文本 类型：字符串； 值： 说明：默认显示的文本； 文本显示行数 类型：数值； 值：默认：空； 说明：为指定宽高的文本标签设置显示行数，显示不完全的内容以省略号代替。PC端设置数字后只会显示一行； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 属性、方法 Text-属性，设置或获取控件显示的字符串； 说明：字符串类型； 示例： TextBlock.Text = '这时一段文字' Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/wen-ben-shu-ru-kuang-textbox.html":{"url":"part2/wen-ben-shu-ru-kuang-textbox.html","title":"文本输入框 TextBox","keywords":"","body":"文本输入框 TextBox 作用：接收用户输入的字符串； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 文本长度 类型：字符串； 值： 说明：默认显示的文本； 图片选择 类型：按钮； 值：选择图片、清除图片； 说明：设置显示图片地址； 文本类型 类型：下拉选； 默认值：文本； 可选值：文本、数值、邮箱、电话； 说明：App端设置后可以控制弹出的软键盘类型，但部分系统会在设置后只会弹出文本输入键盘； 自动选定文本 类型：单选框； 说明：勾选后，会在文本框被激活时选中文本框中的所有文本； 文本内容 类型：字符串； 说明：设置输入框默认显示字符串； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 验证规则 类型：（下拉选项）； 说明：设置用户输入内容的验证规则； 可选值:不能为空、必须为数值、必须为整数、必须为日期、身份证、移动电话号； 输入提示 类型：字符串； 说明：设置输入框提示文字； 错误提示 类型：字符串； 说明：设置用户输入错误后的提示信息； 快捷键 类型：字符； 示例：y; 说明：设置激活该输入框的快捷键,使用时使用alt+此快捷键组合使用； Tab键序 类型：数值； 示例：5； 说明：设置使用Tab键切换顺序，每个页面需设置不同的顺序级，如A页面为101、102…，那么B页面设置为201、202…； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 可用性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可用，否则不可用； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可用；this指向当前控件对象； 事件处理程序 ValueChanged 调用时机：文本输入框内值变化； 说明：文本框失去焦点且文本框内值发生变化时，会执行此事件； 备注： Keypress 调用时机：键盘按键按下； 说明：如果想在点击回车时做处理，可以在此事件中判断event.keyCode == 13; 备注：中文输入法时，只有直接按下数字键时有效。英文输入法时，对所有可输入字符按键有效。这个事件中获取文本框的值是键盘按下前的文本框值。 KeyDown 调用时机：每次按键按下时； 说明： 备注：此事件中获取的Text为当前按键按下之前的文本框内容； KeyUp 调用时机：每次按键抬起时； 说明： 备注：此事件中获取的Text为当前按键按下之后的文本框内容； 属性、方法 Value-属性，获取/设置文本框值； 说明：字符串类型； 示例： TextBox.Value = '姓名' TipText-获取/设置文本输入框提示文字； 说明：字符串类型； 示例： TextBox.TipText = '请输入您的账号' focus-方法，激活（获取焦点）文本输入框； 说明： 示例： TextBoxObj.TextBox.focus(); //TextBoxObj为文本输入框控件对象 blur-方法，文本输入框失去焦点； 说明： 示例： TextBoxObj.TextBox.blur(); //TextBoxObj为文本输入框控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/mi-ma-shu-ru-kuang-passwordbox.html":{"url":"part2/mi-ma-shu-ru-kuang-passwordbox.html","title":"密码输入框 PasswordBox","keywords":"","body":"密码输入框 PasswordBox 作用：用于输入比较隐秘的文本，不会直接显示输入的字符，会以圆点代替字符。 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 文本内容 类型：字符串； 说明：设置输入框默认显示字符串； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 验证规则 类型：（下拉选项）； 说明：设置用户输入内容的验证规则； 可选值:不能为空、必须为数值、必须为整数、必须为日期、身份证、移动电话号； 输入提示 类型：字符串； 说明：设置输入框提示文字； 错误提示 类型：字符串； 说明：设置用户输入错误后的提示信息； 快捷键 类型：字符； 示例：y; 说明：设置激活该输入框的快捷键,使用时使用alt+此快捷键组合使用； Tab键序 类型：数值； 示例：5； 说明：设置使用Tab键切换顺序，每个页面需设置不同的顺序级，如A页面为101、102…，那么B页面设置为201、202…； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 可用性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可用，否则不可用； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可用；this指向当前控件对象； 事件处理程序 ValueChanged 调用时机：文本输入框内值变化； 说明：文本框失去焦点且文本框内值发生变化时，会执行此事件； 备注： Keypress 调用时机：键盘按键按下； 说明：如果想在点击回车时做处理，可以在此事件中判断event.keyCode == 13; 备注：中文输入法时，只有直接按下数字键时有效。英文输入法时，对所有可输入字符按键有效。这个事件中获取文本框的值是键盘按下前的文本框值。 KeyDown 调用时机：每次按键按下时； 说明： 备注：此事件中获取的Text为当前按键按下之前的文本框内容； KeyUp 调用时机：每次按键抬起时； 说明： 备注：此事件中获取的Text为当前按键按下之后的文本框内容； 属性、方法 Text-属性，获取/设置文本框值； 说明：字符串类型； 示例： PasswordBox.Text = '姓名' TipText-获取/设置文本输入框提示文字； 说明：字符串类型； 示例： PasswordBox.TipText = '请输入您的账号' focus-方法，激活（获取焦点）文本输入框； 说明： 示例： PasswordBox.TextBox.focus(); //PasswordBox为文本输入框控件对象 blur-方法，文本输入框失去焦点； 说明： 示例： PasswordBox.TextBox.blur(); //PasswordBox为文本输入框控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/duo-xing-wen-ben-kuang-textarea.html":{"url":"part2/duo-xing-wen-ben-kuang-textarea.html","title":"多行文本框 TextArea","keywords":"","body":"多行文本框 TextArea 作用：显示或输入多行文本，文本会自动换行。 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 文本内容 类型：字符串； 说明：设置输入框默认显示字符串； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 验证规则 类型：（下拉选项）； 说明：设置用户输入内容的验证规则； 可选值:不能为空、必须为数值、必须为整数、必须为日期、身份证、移动电话号； 输入提示 类型：字符串； 说明：设置输入框提示文字； 错误提示 类型：字符串； 说明：设置用户输入错误后的提示信息； 快捷键 类型：字符； 示例：y; 说明：设置激活该输入框的快捷键,使用时使用alt+此快捷键组合使用； Tab键序 类型：数值； 示例：5； 说明：设置使用Tab键切换顺序，每个页面需设置不同的顺序级，如A页面为101、102…，那么B页面设置为201、202…； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 可用性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可用，否则不可用； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可用；this指向当前控件对象； 事件处理程序 ValueChanged 调用时机：文本输入框内值变化； 说明：文本框失去焦点且文本框内值发生变化时，会执行此事件； 备注： Keypress 调用时机：键盘按键按下； 说明：如果想在点击回车时做处理，可以在此事件中判断event.keyCode == 13; 备注：中文输入法时，只有直接按下数字键时有效。英文输入法时，对所有可输入字符按键有效。这个事件中获取文本框的值是键盘按下前的文本框值。 KeyDown 调用时机：每次按键按下时； 说明： 备注：此事件中获取的Text为当前按键按下之前的文本框内容； KeyUp 调用时机：每次按键抬起时； 说明： 备注：此事件中获取的Text为当前按键按下之后的文本框内容； 属性、方法 Text-属性，获取/设置文本框值； 说明：字符串类型； 示例： TextArea.Text = '姓名' TipText-获取/设置文本输入框提示文字； 说明：字符串类型； 示例： TextArea.TipText = '请输入您的账号' focus-方法，激活（获取焦点）文本输入框； 说明： 示例： TextBoxObj.TextArea.focus(); //TextBoxObj为文本输入框控件对象 blur-方法，文本输入框失去焦点； 说明： 示例： TextBoxObj.TextArea.blur(); //TextBoxObj为文本输入框控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/fu-xuan-kuang-checkedbox.html":{"url":"part2/fu-xuan-kuang-checkedbox.html","title":"复选框 CheckedBox","keywords":"","body":"复选框 CheckedBox 作用：用于多选操作； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 事件处理程序 ValueChanged 调用时机：勾选或者取消勾选选项时； 说明： 备注： Keypress 属性、方法 Value-属性，获取/设置选中状态； 说明：布尔(Boolean)类型；true-选中；false-未选中。 示例： CheckedBox.Value = false;//CheckedBox为控件对象 Text-获取/设置显示文本； 说明：字符串类型，选项的显示文本； 示例： CheckedBox.Text = '是';//CheckedBox为控件对象； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/dan-xuan-lie-biao-radiobuttonlist.html":{"url":"part2/dan-xuan-lie-biao-radiobuttonlist.html","title":"单选列表RadioButtonList","keywords":"","body":"单选列表RadioButtonList 作用：用于单选场景； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 项目成员 类型：字符串； 值： 说明：符合变量命名规则；项目成员作为数据上下文DataContext的一个属性，会在界面加载时自动赋值给控件，这个属性的值为数组类型；如果值所在的位置为嵌套格式，可以写成a.b这样的结构； 示例： DataContext = {a:{b:[]}};//这样的嵌套结构，项目成员可写成a.b; 选项 类型：按钮； 说明：点击弹出设置界面，在界面里显式的创建标题和值。设置示例见下图： 默认选项 类型：字符串； 说明：设置默认选中的标题，需为单选列表中设置的标题或值； 显示属性 类型：字符串； 示例：name 说明：可以填写数据源中对象的字段名，这个字段的值就会作为显示文本显示在可选项中。默认值：Text； 取值属性 类型：字符串； 示例：_id； 说明：可以填写数据源中对象的字段名，这个字段的值就会作为选中项的值。默认值：Value； 事件处理程序 ValueChanged 调用时机：勾选或者取消勾选选项时； 说明： 备注： 属性、方法 Value-属性，获取/设置选中的值 说明：Value类型为字符串，选中项的值。 示例： RadioButtonList.Value = '男';//RadioButtonList为控件对象 ItemSource-获取/设置数据源 说明：数据源的值类型为数组；如果通过“下拉选项”按钮显式的设置标题和值，那么“显示属性”和“取值”应设置默认值或为空；如果通过数据源方式设定下拉选项，“显示属性”和“取值”应设置为数据源中对象的字段名；如果两种方式都设置了，那么会取数据源ItemSource设置的数据。 示例： //设置数据源-选项 RadioButtonList.ItemSource = [{“_id”:”1”,”name”:”jack”}, {“_id”:”2”,”name”:”rose”}, {“_id”:”3”,”name”:”emma”}, {“_id”:”4”,”name”:”evva”}]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/an-niu-button.html":{"url":"part2/an-niu-button.html","title":"按钮 Button","keywords":"","body":"按钮 Button 作用：可点击执行点击事件，执行事件里的代码； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 按钮文本 类型：字符串； 值： 说明：按钮显示文本内容，默认值Button； 按钮图标 类型：按钮； 值：选择图片、清除图片； 说明：设置按钮显示图片地址； 快捷键 类型：字符； 示例：y; 说明：设置激活该输入框的快捷键,使用时使用alt+此快捷键组合使用； Tab键序 类型：数值； 示例：5； 说明：设置使用Tab键切换顺序，每个页面需设置不同的顺序级，如A页面为101、102…，那么B页面设置为201、202…； 可用：设置控件是否可用； 可见：设置控件是否显示； 可用性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可用，否则不可用； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可用；this指向当前控件对象； 事件处理程序 Click 调用时机：用户点击控件时； 说明： 备注： 属性、方法 Text-属性，获取/设置按钮显示文本； 说明：字符串类型； 示例： Button.Value = '确定' Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/tu-pian-kuang-image.html":{"url":"part2/tu-pian-kuang-image.html","title":"图片框 Image","keywords":"","body":"图片框 Image 作用：展示图片； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 图片选择 类型：按钮； 值：选择图片、清除图片； 说明：设置显示图片地址； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 查看大图 类型：单选框； 说明：默认不选中；选中后，用户可以点击显示图片查看大图； 事件处理程序 Click 调用时机：用户点击控件时； 说明： 备注： 属性、方法 Value-属性，获取/设置显示图片地址； 说明：字符串类型； 示例： Image.Value = 'https://timgsa.baidu.com/ mtuDQK9Gl0.jpg'; ImageUrl-获取控件显示图片的地址； 说明：字符串类型； 示例： Image.ImageUrl = 'https://timgsa.baidu.com/ mtuDQK9Gl0.jpg'; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/xia-la-lie-biao-kuang-combobox.html":{"url":"part2/xia-la-lie-biao-kuang-combobox.html","title":"下拉列表框 ComboBox","keywords":"","body":"下拉列表框 ComboBox 作用：用于可选项固定的单选场景； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 项目成员 类型：字符串； 值： 说明：符合变量命名规则；项目成员作为数据上下文DataContext的一个属性，会在界面加载时自动赋值给控件，这个属性的值为数组类型；如果值所在的位置为嵌套格式，可以写成a.b这样的结构； 示例： DataContext = {a:{b:[]}};//这样的嵌套结构，项目成员可写成a.b; 选项 类型：按钮； 说明：点击弹出设置界面，在界面里显式的创建标题和值。设置示例见下图： 默认选项 类型：字符串； 说明：设置默认选中的标题，需为单选列表中设置的标题或值； 显示属性 类型：字符串； 示例：name 说明：可以填写数据源中对象的字段名，这个字段的值就会作为显示文本显示在可选项中。默认值：Text； 取值属性 类型：字符串； 示例：_id； 说明：可以填写数据源中对象的字段名，这个字段的值就会作为选中项的值。默认值：Value； 事件处理程序 ValueChanged 调用时机：选择某个下拉选项时； 说明：可以在此事件中动态的获取选中项的标题和值； 属性、方法 Value-属性，获取/设置选中的值 说明：Value类型为字符串，选中项的值。 示例： ComboBox.Value = '男';//ComboBox为控件对象 ItemSource-获取/设置数据源 说明：数据源的值类型为数组；如果通过“下拉选项”按钮显式的设置标题和值，那么“显示属性”和“取值”应设置默认值或为空；如果通过数据源方式设定下拉选项，“显示属性”和“取值”应设置为数据源中对象的字段名；如果两种方式都设置了，那么会取数据源ItemSource设置的数据。 示例： //设置数据源-选项 ComboBox.ItemSource = [{\"_id\":\"1\",\"name\":\"jack\"}, {\"_id\":\"2\",\"name\":\"rose\"}, {\"_id\":\"3\",\"name\":\"emma\"}, {\"_id\":\"4\",\"name\":\"evva\"}]; SelectedIndex-属性，获取/设置某项作为默认选中项 说明：类型为数值，从0开始。 示例： ComboBox.SelectedIndex = 0;//ComboBox为控件对象 SelectedText-获取选中选项的文本 说明：字符串。 示例： var title = ComboBox.SelectedText;//ComboBox为控件对象 SelectedValue-属性，获取选中选项的值 说明： 示例： var value = ComboBox.SelectedValue;//ComboBox为控件对象 SelectedItem-获取选中项对象 说明：字符串，选中项Item对象的属性DataContext，保存着选中项的数据上下文对象。 示例： var Item= ComboBox. SelectedItem;//ComboBox为控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/shu-zhi-shu-ru-yu-numberdomain.html":{"url":"part2/shu-zhi-shu-ru-yu-numberdomain.html","title":"数值输入域 NumberDomain","keywords":"","body":"数值输入域 NumberDomain 作用：接收用户输入的数值； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 数值 类型：字符串； 值： 说明：设置默认数值； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 最大数值 类型：数值； 说明：设置最大输入数值，默认最大值：1000； 最小数值 类型：数值； 说明：设置最小输入数值，默认最小值：0； 数值增(减)量 类型：数值； 说明：设置数值增量，默认值：1； 左侧图片 类型：按钮； 值：选择图片、清除图片； 说明：设置左侧（减）显示图片地址； 右侧图片 类型：按钮； 值：选择图片、清除图片； 说明：设置右侧（加）显示图片地址； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 模式 类型：数值； 说明：默认：1；模式0：左侧图片和右侧图片永远可见；模式1:数值小于等于最小值时，左侧图片和数值显示框不可见，数值大于等于最大值时，右侧图片不可见； 事件处理程序 ValueChanged 调用时机：文本输入框内值变化； 说明：文本框失去焦点且文本框内值发生变化时，会执行此事件； 备注： DataInput 调用时机： 说明： 备注： 属性、方法 Value-属性，获取/设置数值； 说明：数值； 示例： NumberDomain.Value = 5；//NumberDomain为数值输入域控件对象 Max-设置最大值； 说明：数值，设置数值域最大值，默认最大值10000； 示例： TextBox.Max = 30；//NumberDomain为数值输入域控件对象 Min-设置最小值； 说明：数值，设置数值域最小值，默认最小值0； 示例： NumberDomain.Min= 10; //NumberDomain为数值输入域控件对象 InputMode-获取数值改变模式； 说明：数值类型：0-数值增加；1-数值减小；2-通过输入框输入； 示例： var mode = NumberDomain.InputMode; //NumberDomain为数值输入域控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/ri-qi-xuan-ze-kong-jian-datepicker-pc.html":{"url":"part2/ri-qi-xuan-ze-kong-jian-datepicker-pc.html","title":"日期选择控件 DatePicker（PC）","keywords":"","body":"日期选择控件 DatePicker（PC） 作用：显示日期、输入日期； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 选取模式 类型：数值； 值： 说明：0：日期 ，1：日期+时间，默认为0； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 可用性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可用，否则不可用； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可用；this指向当前控件对象； 事件处理程序 ValueChanged 调用时机：选择日期时,通过Value设置值时； Keypress 调用时机：输入日期框内，英文输入法下按下键盘按键 说明： 备注： 属性、方法 Value-属性，获取/设置选择的日期对象； 说明：日期Date对象； 示例： var value = DatePicker.Value；//DatePicker为控件对象，获取的日期类型为日期对象Date； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/ri-qi-shi-jian-xuan-ze-kuang-datetimepicker-app.html":{"url":"part2/ri-qi-shi-jian-xuan-ze-kuang-datetimepicker-app.html","title":"日期时间选择框 DateTimePicker（APP）","keywords":"","body":"日期时间选择框 DateTimePicker（APP） 作用：显示日期、输入日期； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 控件样式 类型：下拉框； 值： 说明：可选值：日期、时间、日期和时间； 字体样式 类型：下拉框； 值： 说明： 标题字体大小 类型：字符串； 说明： 标题字体颜色 类型：颜色选择器； 说明： 时间显示字体大小 类型： 说明： 时间显示字体颜色 类型：颜色选择器； 说明： 头部背景颜色 类型：颜色选择器 说明： 事件处理程序 ValueChanged 调用时机：选择日期时,通过Value设置值时； 属性、方法 Value-属性，获取/设置选择的日期对象； 说明：日期Date对象； 示例： var value = DateTimePicker.Value；//DatePicker为控件对象，获取的日期类型为日期对象Date； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/tu-pian-shang-chuan-kong-jian-imageuploadbox.html":{"url":"part2/tu-pian-shang-chuan-kong-jian-imageuploadbox.html","title":"图片上传控件 ImageUploadBox","keywords":"","body":"图片上传控件 ImageUploadBox 作用：上传图片； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 上传路径URL 类型：字符串； 值：https://wfs.dbazure.cn/wfs.ashx?OwnerId=组标识&AppId=应用标识&Uid=用户标识（请求参数AppId、Uid、OwnerId必填至少一项，图片会保存在…/用户标识/组标识/应用标识路径下。） 说明：必填！ 图片分辨率 类型：字符串； 值：示例：158，64 说明：设置上传图片宽和高的数值，用逗号,分隔； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 可用性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可用，否则不可用； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可用；this指向当前控件对象； 事件处理程序 ValueChanged 调用时机： 说明： 备注： 属性、方法 Action-属性，获取/设置图片上传地址； 说明：字符串类型； 示例： ImageUploadBox.Action = 'https://wfs.dbazure.cn/wfs.ashx?OwnerId=123&AppId=456&Uid=userabc' PictureSize-设置图片分辨率； 说明：字符串类型；宽高值，中间以半角逗号分割； 示例： ImageUploadBox. PictureSize = '1200,300'; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/yan-se-xuan-ze-qi-colorpicker-pc-duan-ff09.html":{"url":"part2/yan-se-xuan-ze-qi-colorpicker-pc-duan-ff09.html","title":"颜色选择器 ColorPicker（PC端）","keywords":"","body":"颜色选择器 ColorPicker（PC端） 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 可用性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可用，否则不可用； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可用；this指向当前控件对象； 事件处理程序 ValueChanged 属性、方法 Value-属性，获取选中的颜色值； 说明：字符串类型,获取的值为标识颜色的字符串，示例“#ff5566”； 示例： var color = ColorPicker.Value; //ColorPicker为控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/fu-wen-ben-bian-ji-qi-richtextbox.html":{"url":"part2/fu-wen-ben-bian-ji-qi-richtextbox.html","title":"富文本编辑器 RichTextBox","keywords":"","body":"富文本编辑器 RichTextBox 作用：编辑富文本文档； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 图片选取地址 类型：字符串； 值：默认值：wfs/wfs.ashxAppId=%currentapp_appid%&Uid=%uid%&filter=jpg|png|gif 说明：必填！ 模式选择 类型：下拉选项； 值：可选值：简单模式、高级模式、移动模式、聊天模式 说明： 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 可用性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可用，否则不可用； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可用；this指向当前控件对象； 事件处理程序 ValueChanged 调用时机： 说明： 备注： 属性、方法 Value-属性，获取/设置富文本内容； 说明：字符串类型； 示例： RichTextBox.Value = '富文本' Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/fu-wen-ben-xian-shi-kuang-ritchtextblock.html":{"url":"part2/fu-wen-ben-xian-shi-kuang-ritchtextblock.html","title":"富文本显示框 RitchTextBlock","keywords":"","body":"富文本显示框 RitchTextBlock 作用：显示HTML字符串； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 属性、方法 Value-属性，获取/设置富文本显示内容； 说明：字符串类型； 示例： RitchTextBlock.Value = '富文本'; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/tiao-makong-jian-barcodecontrol.html":{"url":"part2/tiao-makong-jian-barcodecontrol.html","title":"条码控件 BarCodeControl","keywords":"","body":"条码控件 BarCodeControl 作用：显示条码、二维码； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 条码内容 类型：字符串； 值：示例：'hello world' 说明：保存在二维码中的字符串； 条码类型 类型：下拉选项； 值：可选值：QCode、Code 39、Code 93、Code 128(条形码) 说明： 条码宽度 类型：字符串； 值：默认值：300px 数值+px 条码类型 类型：字符串； 值：默认值：300px 数值+px 说明： 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可见性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可见，否则不可见； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可见；this指向当前控件对象； 也可直接发送请求生成二维码： 示例：https://lc.dbazure.cn/svcbus/barcode.ashx?CodeType=条码类型&QRScale=4&QRV=5&Data=保存的数据&W=300&H=300 参数说明： 1、CodeType：条码类型；二维码---QRCode，Code 39-CODE39，Code 93-CODE93，Code 128-CODE128； 2、QRScale：4 3、QRV：5 4、Data：字符串；保存的数据 5、W：数值；条码宽度； 6、H：数值；条码高度； 事件处理程序 ValueChanged 调用时机： 说明： 备注： 属性、方法 Text-属性，获取/设置二维码存储内容； 说明：字符串类型； 示例： BarCodeControl.Value = 'hello world' Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/biao-dan-ji-shi-qi-formtimer.html":{"url":"part2/biao-dan-ji-shi-qi-formtimer.html","title":"表单计时器 FormTimer","keywords":"","body":"表单计时器 FormTimer 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 时间间隔 类型：数值； 值：默认值-1； 说明：单位毫秒(ms)； 事件处理程序 TimerTick 调用时机：每个时间间隔后 说明： 备注： 属性、方法 Start-方法，开启计时器； 说明： 示例： FormTimer.Start(); Stop-方法，停止计时器； 说明： 示例： FormTimer.Stop(); Interval-属性，设置时间间隔； 说明： 示例： FormTimer.Interval = 3000； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/kai-guan-kong-jian-switch-app.html":{"url":"part2/kai-guan-kong-jian-switch-app.html","title":"开关控件 Switch（App）","keywords":"","body":"开关控件 Switch 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 事件处理程序 ValueChanged 调用时机：值改变时； 说明： 备注： 属性、方法 Value-属性，获取/设置开关控件的值； 说明：取值范围为数值0和1；0-开关关闭样式，1-开关开启样式； 示例： var value = Switch.Value; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/xiao-xi-jian-ting-qi-notificationwatcher.html":{"url":"part2/xiao-xi-jian-ting-qi-notificationwatcher.html","title":"消息监听器 NotificationWatcher","keywords":"","body":"消息监听器 NotificationWatcher 作用：用于监听推送平台消息发出的消息推送，在监听到消息时做业务处理； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 消息类型 类型：字符串； 值： 说明：用于处理消息的标记，监听某一类型的消息（平台消息推送中的消息Id），自定义； AppId 类型：字符串； 说明：应用标识； 事件处理程序 WatcherOnLoad 调用时机：监听器加载后 说明： 备注： WatcherOnMsg 调用时机：监听到消息时； 说明：在此事件里，通过thisControl. MsgObject获取到消息对象； 备注： WatcherUnLoad 调用时机：监听器卸载时 说明： 备注： 属性、方法 MsgObject-属性，消息对象； 说明：监听到的消息对象 示例： var message = NotificationWatcher.MsgObject;//NotificationWatcher为控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/wu-xing-ping-fen-scorepanel-app.html":{"url":"part2/wu-xing-ping-fen-scorepanel-app.html","title":"五星评分 ScorePanel（APP）","keywords":"","body":"五星评分 ScorePanel 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 数量 类型：数值； 值：默认5； 说明：星星数量； 分数 类型：数值； 值：默认：10； 说明：满分数值； 颜色 类型：颜色选择器； 说明：星星填充色； 默认分数 类型：数值； 值：默认值0； 说明：设置默认分数； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 事件处理程序 ScoreClick 调用时机：用户点击控件选择分数时； 说明： 备注： 属性、方法 Value-属性，设置或获取控件当前分值； 说明：数值； 示例： var score = ScorePanel.Value; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/zi-mu-kong-jian-messagescrollbox.html":{"url":"part2/zi-mu-kong-jian-messagescrollbox.html","title":"字幕控件 MessageScrollBox","keywords":"","body":"字幕控件 MessageScrollBox 作用：滚动显示消息； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 滚动方向 类型：下拉选项； 值：可选值：向左、向右、向上、向下； 说明： 滚动行为 类型：下拉选项； 值：可选值：环绕滚动、滚动一次、来回滚动； 说明： 滚动速度 类型：数值； 值：默认6，数值越大，滚动越快； 显示成员 类型：字符串； 值：默认值：Text，ItemSource中需要显示的信息字段名。 说明： 事件处理程序 MessageClick 调用时机：点击某条消息时； 说明：在此事件处理中可获取点击的消息的信息，获取所点击的消息的信息：MessageInfo； 属性、方法 ItemSource-属性，设置数据源； 说明：数组，字段说明：消息默认显示字段为Text的值；也可以在属性设置里设置好显示属性字段； 示例： MessageScrollBox.ItemSource = [{\"_id\":\"1\",\"Text\":\"jack\"}, {\"_id\":\"2\",\"Text\":\"rose\"}, {\"_id\":\"3\",\"Text\":\"emma\"}, {\"_id\":\"4\",\"Text\":\"evva\"}]; MessageInfo-属性，点击的消息对象； 说明：对象，在点击消息的事件中获取； 示例： var message = MessageScrollBox.MessageInfo;//结构：{\"_id\":\"1\",\"Text\":\"jack\"}； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/shi-pin-bo-fang-qi-videoplayer.html":{"url":"part2/shi-pin-bo-fang-qi-videoplayer.html","title":"视频播放器 VideoPlayer","keywords":"","body":"视频播放器 VideoPlayer 作用：播放视频； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 播放方式 类型：下拉选项； 值：可选值：自动播放、手动播放； 说明：视频播放方式； 全屏时旋转 类型：下拉选项； 值：可选值：旋转、不旋转； 说明：在App端点击全屏按钮时，视频是否横屏播放； 视频资源 类型：字符串； 值： 说明：视频资源的网路地址； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/qian-ru-ye-mian-iframeview.html":{"url":"part2/qian-ru-ye-mian-iframeview.html","title":"嵌入页面 IframeView","keywords":"","body":"嵌入页面 IframeView 作用：加载网页资源地址或者图片资源地址； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 页面链接 类型：字符串； 值：示例：https://www.google.cn； 说明：嵌入页面的地址 页面标题 类型：字符串； 值：示例：标题； 说明：设置内嵌页面的标题； 显示标题 类型：单选框； 说明：设置是否显示标题； 背景颜色 类型：（颜色选择器）； 值： 说明：设置背景颜色； 标题颜色 类型：（颜色选择器）； 值： 说明：设置标题颜色； 标题背景颜色 类型：（颜色选择器）； 说明：设置标题背景颜色； 边框颜色 类型：（颜色选择器）； 值： 说明：设置边框颜色； 边线宽度 类型：字符串； 示例：1px 说明：设置边线宽度； 边线类型 类型：（颜色选择器）； 值：示例：solid 说明：设置边线类型； 阴影 类型：字符串； 值：示例：10px 10px 5px #666 说明：设置阴影； 属性、方法 Src-属性，设置加载页面地址； 说明：字符串 示例： IframeView.Src = 'http://www.dbsoft.com.cn'; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/chao-lian-jie-hyperlink.html":{"url":"part2/chao-lian-jie-hyperlink.html","title":"超链接 Hyperlink","keywords":"","body":"超链接 Hyperlink 作用：用于加载链接地址； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 显示文本 类型：字符串； 值：示例：百度 说明：超链接控件显示的文本； 链接地址 类型：字符串； 值：示例：http://www.dbsoft.com.cn； 说明：链接资源的地址； 属性、方法 LoadURL-属性，设置链接地址； 说明：字符串 示例： Hyperlink.LoadURL = 'http://www.dbsoft.com.cn'; ShowText-属性，设置显示文本； 说明：字符串 示例： Hyperlink. ShowText = \"超链接\"; OnClick-方法，点击方法； 说明：触发超链接点击； 示例： Hyperlink.OnClick(); Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/qian-ming-ban-signatureboard.html":{"url":"part2/qian-ming-ban-signatureboard.html","title":"签名板 SignatureBoard","keywords":"","body":"签名板 SignatureBoard 作用：手写签名，并将签名内容保存成png图片存储到服务器； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 上传地址 类型：字符串； 值： 说明：签名后的图片上传服务器地址 事件处理程序 SaveButtonClick 调用时机：签名板“确认”按钮点击时触发； 说明：此事件里可以获取属性ResponseObj对象的值； 属性、方法 ResponseObj-属性，获取图片上传响应对象； 说明：在事件SaveButtonClick里 获取这个属性值；类型为对象，结构：{State: 0, Exception: \"\",Url: \"https://…… /xx.png\"}；State为0时，图片上传成功，为1时，上传失败；Exception为失败的信息；Url为图片上传成功后的图片地址； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 10:17:20 "},"part2/wen-jian-shang-chuan-fileuploader.html":{"url":"part2/wen-jian-shang-chuan-fileuploader.html","title":"文件上传 FileUploader","keywords":"","body":"文件上传 FileUploader 作用：选择文件上传到服务器； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 上传地址 类型：字符串； 值： 说明：文件上传的服务器地址； 文件类型 类型：字符串； 值： 说明：设置上传文件的类型； 文件数量 类型：数值； 值：控制选择文件数量； 最大文件限制 类型：数值； 值： 说明：控制单个上传文件的最大限制，单位B；选择的文件超过限制大小将无法上传； 属性、方法 Files-属性，获取上传文件集合； 说明：数组，每个元素都是一个文件对象； 示例： [{\"UploadFlag\":1,\"FileUrl\":\"\", \"name\":\"文件名\",\"size\":2032，,\"type\":\"image/png \"},{\"UploadFlag\":0,\"FileUrl\":\"\", \"name\":\"文件名\",\"size\":2032，,\"type\":\"image/png \"}]; //字段说明：UploadFlag-上传成功标识，1-上传成功，否则失败； //FileUrl-文件保存地址，上传成功时才会有文件地址；name-文件名称；size-文件大小，单位B；type-文件类型； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/jin-du-tiao-progressbar.html":{"url":"part2/jin-du-tiao-progressbar.html","title":"进度条 ProgressBar","keywords":"","body":"进度条 ProgressBar 作用：显示进度样式，进度值为 值/最大值； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 默认值 类型：数值； 值：默认0； 说明：设置进度默认值； 最大值 类型：数值； 值：默认100； 说明：设置最大值； 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可用-设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 属性、方法 Max-属性，设置最大值； 说明：数值； 示例： ProgressBar.Max = 100;//ProgressBar为控件对象； Value-属性，设置值； 说明：数值； 示例： ProgressBar.Value = 50;//ProgressBar为控件对象； 说明：进度值 = Value/Max; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-24 11:20:11 "},"part2/bu-ju-kong-jian.html":{"url":"part2/bu-ju-kong-jian.html","title":"布局控件","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/bu-ju-kong-jian/mian-banrong-qi-panel.html":{"url":"part2/bu-ju-kong-jian/mian-banrong-qi-panel.html","title":"面板容器 Panel","keywords":"","body":"面板容器 Panel 作用：布局控件； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 水平滚动方式 类型：（下拉选项）； 值： 说明：可选值：未设置、自动、显示、隐藏、滚动； 垂直滚动方式 类型：（下拉选项）； 值： 说明：可选值：未设置、自动、显示、隐藏、滚动； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/bu-ju-kong-jian/ting-kaoguan-li-qi-dockmanager-pc.html":{"url":"part2/bu-ju-kong-jian/ting-kaoguan-li-qi-dockmanager-pc.html","title":"停靠管理器 DockManager（PC）","keywords":"","body":"停靠管理器 DockManager（PC） 作用：以选项卡的方式管理展示的页面； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/bu-ju-kong-jian/kong-jian-ting-kao-mian-ban-controldockpanel-pc.html":{"url":"part2/bu-ju-kong-jian/kong-jian-ting-kao-mian-ban-controldockpanel-pc.html","title":"控件停靠面板 ControlDockPanel（PC）","keywords":"","body":"控件停靠面板 ControlDockPanel（PC） 作用：实现控件的左右、上下布局，使用分隔条控件分隔，拖拽分隔条控制两侧区域缩放。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/bu-ju-kong-jian/qu-yu-fen-ge-tiao-splitter-pc.html":{"url":"part2/bu-ju-kong-jian/qu-yu-fen-ge-tiao-splitter-pc.html","title":"区域分割条 Splitter（PC）","keywords":"","body":"区域分割条 Splitter（PC） Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/bu-ju-kong-jian/fen-zu-kuang-groupbox.html":{"url":"part2/bu-ju-kong-jian/fen-zu-kuang-groupbox.html","title":"分组框 GroupBox","keywords":"","body":"分组框 GroupBox 作用：布局控件； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 按钮文本 类型：字符串； 值：默认值：Group Box 说明： 展开面板 类型：单选框； 值： 说明：是否展开面板； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/bu-ju-kong-jian/biao-dan-biao-ti-formbar-pc.html":{"url":"part2/bu-ju-kong-jian/biao-dan-biao-ti-formbar-pc.html","title":"表单标题 FormBar（PC）","keywords":"","body":"表单标题 FormBar（PC） 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 图标 类型：图片选择； 值：选择图片、清除图片 说明：设置显示图片； 标题 类型：字符串； 值：默认值：默认标题； 说明：设置显示标题； 描述 类型：字符串； 值：默认值：描述描述描述描述 说明：设置显示描述内容； 属性、方法 Title-属性，设置标题； 说明：字符串，设置显示标题； 示例： FormBar.Title='标题'; Description-属性，设置描述； 说明：字符串，设置描述； 示例： FormBar.Description ='描述'; ImageUrl-属性，设置图标； 说明：字符串，设置显示图片； 示例： FormBar.ImageUrl ='https://…….png'; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/bu-ju-kong-jian/fen-zu-mian-ban-grouppanel.html":{"url":"part2/bu-ju-kong-jian/fen-zu-mian-ban-grouppanel.html","title":"分组面板 GroupPanel","keywords":"","body":"分组面板 GroupPanel 作用：布局控件； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 按钮文本 类型：字符串； 值：默认值：GroupPanel 说明：面板显示标题； 展开面板 类型：单选框； 值： 说明：是否展开面板； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/bu-ju-kong-jian/dao-hang-mian-ban-navpanel.html":{"url":"part2/bu-ju-kong-jian/dao-hang-mian-ban-navpanel.html","title":"导航面板 NavPanel","keywords":"","body":"导航面板 NavPanel 作用：常用于App端实现缩略信息显示，点击跳转”更多”界面； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 导航模式 类型：数值； 值：默认值：0 说明：加载更多资源时加载方式，参照加载UI组件中模式说明； 更多资源 类型：字符串； 值：示例：apps/…… 说明：加载页面的”资源路径”； 资源标题 类型：字符串； 说明：加载的资源显示的标题； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:04 "},"part2/bu-ju-kong-jian/xuan-xiang-qia-tabwidget.html":{"url":"part2/bu-ju-kong-jian/xuan-xiang-qia-tabwidget.html","title":"选项卡 TabWidget","keywords":"","body":"选项卡 TabWidget 作用：多用于APP端 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 设置默认页 类型：数值； 值：示例：0 说明：设置某个选项为默认展示页，从0开始； 添加默认项 类型：（按钮）； 说明：添加选项卡TabWidgetItem； 添加浮动项 类型：（按钮）； 说明：添加浮动项TabWidgetBigItem； 移除项 类型：（按钮）； 说明：移除选中项； TabWidgetItem、TabWidgetBigItem设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 标题 类型：字符串； 值： 说明：选项卡标题； 标题颜色 类型：（颜色选择器）； 说明：默认标题颜色； 标题选中颜色 类型：（颜色选择器）； 说明：选中时标题颜色； 选项背景 类型：（颜色选择器）； 说明：选项默认背景颜色； 选项选中背景 类型：（颜色选择器）； 说明：选项选中时背景颜色； 可视区域颜色 类型：（颜色选择器）； 说明：页面展示区颜色； 图标URL 类型：（按钮）； 值：选择图片、清除图片 说明：选项默认显示图片设置； 图标选中URL 类型：（按钮）； 值：选择图片、清除图片 说明：选项选中时显示图片设置； 资源 类型：字符串； 说明：页面资源地址； 事件处理程序 TabBigItemClick 调用时机：用户点击选项卡时； 说明： 备注： 属性、方法 ItemResourceScrp-属性，设置页面资源文件； 说明：字符串； 示例： TabWidget.TabItems[0].ItemResourceScrp = '';//TabWidget为控件对象； TabItems-属性，获取选项卡对象集合； 说明：数组，获取选项卡所有选项对象的集合； 示例： var items = TabWidget.TabItems;//TabWidget为控件对象； ShowBadge-属性，是否显示选项角标； 说明：布尔值，true-显示角标；false-不显示角标；； 示例： TabWidget.TabItems[0].ShowBadge = true;//TabWidget为控件对象； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 10:30:53 "},"part2/bu-ju-kong-jian/fen-qu-dao-hang-mian-ban-navcontentpart.html":{"url":"part2/bu-ju-kong-jian/fen-qu-dao-hang-mian-ban-navcontentpart.html","title":"分区导航面板 NavContentPart","keywords":"","body":"分区导航面板 NavContentPart 作用：布局控件； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 分区图标 类型：（按钮）； 值：选择图片、清除图片 说明：可以通过点击相应按钮进行设置，也可以在后面的文本框里输入图片地址； 分区文本 类型：字符串； 说明：标题； 描述文本 类型：字符串； 说明：副标题； 更多资源 类型：字符串； 说明：更多按钮加载的页面资源； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 10:38:52 "},"part2/bu-ju-kong-jian/dan-xing-he-zi-flexpanel.html":{"url":"part2/bu-ju-kong-jian/dan-xing-he-zi-flexpanel.html","title":"弹性盒子 FlexPanel","keywords":"","body":"弹性盒子 FlexPanel 作用：是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。引入弹性盒布局模型的目的是提供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间。 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 布局方式 类型：（下拉选项）； 值：可选项：未设置、横向布局、纵向布局 说明：设置子控件的布局方式； 水平对齐方式 类型：（下拉选项）； 值：可选项：未设置、靠左对齐、居中对齐、靠右对齐、拉伸适应、平均分布； 说明： 纵向对齐方式 类型：（下拉选项）； 值：可选项：未设置、靠左对齐、居中对齐、靠右对齐、拉伸适应、平均分布； 说明： 换行(列)方式 类型：（下拉选项）； 值：默认：不换行 说明：可选项：不换行或列、必要时换行或列、必要时反向换行或列； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 11:15:48 "},"part2/gong-neng-dao-hang-kong-jian.html":{"url":"part2/gong-neng-dao-hang-kong-jian.html","title":"功能导航控件","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/ying-yong-cheng-xu-biao-ti-appbar-pc.html":{"url":"part2/ying-yong-cheng-xu-biao-ti-appbar-pc.html","title":"应用程序标题 AppBar (PC)","keywords":"","body":"应用程序标题 AppBar （PC） Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 11:17:22 "},"part2/cai-dan-tiao-ff08-pc.html":{"url":"part2/cai-dan-tiao-ff08-pc.html","title":"菜单条（PC）","keywords":"","body":"菜单条（PC） Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 11:17:49 "},"part2/shang-xia-wen-cai-dan-contextmenu-pc.html":{"url":"part2/shang-xia-wen-cai-dan-contextmenu-pc.html","title":"上下文菜单 ContextMenu（PC）","keywords":"","body":"上下文菜单 ContextMenu（PC） Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 11:18:34 "},"part2/gong-ju-lan-toolstrip-pc.html":{"url":"part2/gong-ju-lan-toolstrip-pc.html","title":"工具栏 ToolStrip（PC）","keywords":"","body":"工具栏 ToolStrip（PC） 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 选择按钮类型 类型：（下拉框）； 值：可选值：工具按钮、文本标签、下拉列表、分割线、文本框、日期选择框； 说明： 添加按钮 类型：（按钮）； 值： 说明：添加上述选择类型的功能控件； 事件处理程序 ToolStripItemClick 调用时机：用户点击工具按钮时； 说明： 备注： 属性、方法 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 11:24:53 "},"part2/uishi-tu-kong-zhi-qi-uiviewcontroller.html":{"url":"part2/uishi-tu-kong-zhi-qi-uiviewcontroller.html","title":"UI视图控制器 UIViewController","keywords":"","body":"UI视图控制器 UIViewController 作用：用于手机/pc主界面最底部，承接其他界面资源，一般设置为100% 使用注意：视图控制器不可乱使用，必须是功能软件的首界面才可使用，其余界面使用，将无法返回到上一级页面！ 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 水平滚动方式 类型：（下拉选项）； 值：可选值：未设置、自动、显示、隐藏、滚动； 说明： 垂直滚动方式 类型：（下拉选项）； 值：可选值：未设置、自动、显示、隐藏、滚动 说明： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 11:28:15 "},"part2/han-bao-cai-dan-hammenu-pc.html":{"url":"part2/han-bao-cai-dan-hammenu-pc.html","title":"汉堡菜单 HamMenu（PC）","keywords":"","body":"汉堡菜单 HamMenu（PC） 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 项目成员 类型：字符串； 值： 说明：设置绑定数据源字段； 自动展开 类型：（单选框）； 值：默认：不展开 说明：设置汉堡菜单选项是否自动展开； 事件处理程序 HamMenuItemClicked 调用时机：用户点击Item时； 说明： 属性、方法 Text-属性，获取/设置标题； 说明：字符串类型； 示例： HamMenu.Text = '标题';//HamMenu为控件对象 ItemSource-获取/设置数据源（项目成员）； 说明：数组； 结构说明：Text：显示标题；ImageUrl：图片地址；ResourceUri：页面资源地址;Mode:展现方式，设置为1；ResourceText：选项卡显示页面标题；Items：下级菜单的ItemSource值； 示例： //HamMenu为控件对象 HamMenu.ItemSource = [{\"Text\":\"功能1\",\"ImageUrl\":\"图片地址1\",\"ResourceUri\":\"页面资源地址\",\"Mode\":1,\"ResourceText\":\"页面资源地址\", \"Items\":[{\"Text\":\"功能11\",\"ImageUrl\":\"图片地址11\",\"ResourceUri\":\"页面资源地址\"}]}, {\"Text\":\"功能2\",\"ImageUrl\":\"图片地址2\",\"ResourceUri\":\"页面资源地址\"}]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 13:16:49 "},"part2/lun-bo-tu-slideshow.html":{"url":"part2/lun-bo-tu-slideshow.html","title":"轮播图 SlideShow","keywords":"","body":"轮播图 SlideShow 作用：做图片轮播展示。 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 切换间隔 类型：数值； 值：默认：3000 说明：控制图片切换的时间间隔，单位为毫秒ms； 动画方式 类型：（下拉选框）； 值：默认值：渐变； 说明：可选值：渐变、滚动； 图片填充模式 类型：（下拉选框）； 值：默认：缩放填充； 说明：可选值：缩放填充、等比适配、等比填充； 项目成员 类型：字符串； 值： 说明：设置绑定数据源字段； 页面指示器位置 类型：（下拉选框）； 值：默认值：中下； 说明：设置图片显示指示器的位置；可选值：左下、中下、右下、左上、中上、右上； 图片填充模式效果图示 属性、方法 ItemSource-获取/设置数据源（项目成员）； 说明：数组； 结构说明：Mode：加载页面资源的显示模式，模式说明参考加载UI；注：当加载界面为应用外部地址时，模式使用100； ResourceText：页面资源展示标题；ResourceUri：展示的页面资源地址；ImageUrl：展示的图片地址； 示例： //SlideShow为控件对象 SlideShow.ItemSource = [{\"Mode\":0,\"ResourceText\":\"广告\",\"ResourceUri\":\"\",\"ImageUrl\":\"图片地址\"}, {\" Mode\":0,\"ResourceText\":\"广告\",\"ResourceUri\":\"\",\"ImageUrl\":\"\"}]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 13:16:49 "},"part2/di-tu-kong-jian-map.html":{"url":"part2/di-tu-kong-jian-map.html","title":"地图控件 Map","keywords":"","body":"地图控件 Map 作用：加载、显示高德地图； 高德地图 文档：https://lbs.amap.com/api/javascript-api/summary 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 地图类型 类型：（下拉选项）； 值：默认值：普通地图； 说明：可选值：普通地图、简易国家地图、简易省图、简易世界地图； 地图样式 类型：（下拉选项）； 值：默认值：标准； 说明：设置地图显示外观样式；可选值：标准、马卡龙等； 缩放级别 类型：数值； 默认值：默认值:3； 说明：取值范围：PC：[3,18]; App:[3,19]； 定位当前位置 类型：（单选框）； 说明：是否定位当前位置； 工具栏 类型：（单选框）； 说明：是否显示工具栏； 区域面 类型：（单选框）； 说明：是否显示区域面； 道路 类型：（单选框）； 说明：是否显示道路； 建筑物 类型：（单选框）； 说明：是否显示建筑物； 卫星图层 类型：（单选框）； 说明：是否显示卫星图层； 路网图层 类型：（单选框）； 说明：是否显示路网图层； 工具条 类型：（单选框）； 说明：是否显示工具条； 比例尺 类型：（单选框）； 说明：是否显示比例尺； 鹰眼 类型：（单选框）； 说明：是否显示鹰眼； 地图切换 类型：（单选框）； 说明：是否显示地图切换； 标注 类型：（单选框）； 说明：是否显示标注； 拖拽平移 类型：（单选框）； 说明：是否支持拖拽平移； 双击放大 类型：（单选框）； 说明：是否支持双击放大； 支持缩放 类型：（单选框）； 说明：是否支持支持缩放； 事件处理程序 MarkedPosition 调用时机：标记位置结束时调用； 说明： MapComplete 调用时机：地图加载完成调用； 说明： MarkerClick 调用时机：点击标记点时调用； 说明：此事件中可以获取标记对象ClickedMarker、标记数据对象ClickedMarkerData； POIListItemClick 调用时机：点击兴趣点搜索结果列表中的item时调用； 说明：可在此事件中获取兴趣点信息POIItemInfo； LiveLocation 调用时机：每间隔一段时间（默认30秒）调用一次； 说明：在此事件中可通过地图控件对象的属性CurrentPosition实时获取当前的位置信息；属性CurrentPosition为对象类型，它的属性status等于0时定位失败，否则定位成功，可以获取当前位置的经纬度信息。 MapComplete 调用时机：地图加载完成调用； 说明： PlaceSearchCompleted 调用时机：调用搜索地址的方法PlaceSearchNearBy()或SearchPlace()后，搜索操作完成时； 说明：此事件中可以通过控件的属性SearchResults获取到搜索地址集合； SearchResultSelect 调用时机：选中搜索结果列表中的某一个地址时； 说明：此事件中可以通过控件的属性SearchResult获取到选中的地址信息对象； GetDistrictData 调用时机：调用搜索行政区方法获取到行政区数据后； 说明：此事件中可以通过控件对象的属性DistrictList获取到选择的行政区下属行政区对象集合; 属性、方法 DrawDisProvince(config)-方法，绘制省级及以下行政区图； 说明：参数config为参数对象，格式：{adcode:\"220100\",depth:3} adcode-省(市)行政区编码；depth-显示层级深度，0-省级；1-市级；2-区/县级； 示例： Map.DrawDisProvince({adcode:\"220100\",depth:3});//Map为控件对象 ClickedMarker-属性，获取点击的标记对象； 说明：对象，在事件MarkerClick中可以获取此对象；该对象有属性DataContext保存着创建标记时传递数据对象； 示例： var marker = Map.ClickedMarker；//Map为控件对象 SearchDistrict(adcode,level)-方法，搜索行政区； 说明：获取到搜索结果后，触发GetDistrictData事件； adcode-行政区名、citycode、adcode；level-设置关键字对应的行政区级别或商圈，可选值：country：国家；province：省/直辖市；city：市；district：区/县biz_area：商圈；官方文档：https://lbs.amap.com/api/javascript-api/reference/search#m_AMap.DistrictSearch 示例： Map.SearchDistrict('吉林省','city');//Map为控件对象 DistrictList-获取行政区对象集合； 说明：在事件GetDistrictData中获取到行政区对象集合； 示例： var districtList = Map.DistrictList；//Map为控件对象 aMap-属性，获取高德地图对象； 说明：获取高德地图对象，使用此地图对象可以调用高德地图原生属性和方法； 示例： var aMap = Map.aMap;//Map为控件对象 ClickedMarkerData-属性，点击路径上标记点的数据对象； 说明：对象，点击标记时，在事件MarkerClick中获取点击的标记数据对象； 示例： //数据格式：{title:\"\",label:\"\",lng:\"\",lat:\"\"} var markerData = Map.ClickedMarkerData；//Map为控件对象 DrawTruckShortPath(points,cb)-绘制最短货车路径； 说明：参数points为地点信息对象point(point对象的格式参见下表2)数组；cd为路径绘制后的回调函数，第一个参数status-绘制状态，第二个参数result-绘制的结果数据信息； 示例： Map.DrawTruckShortPath ([{ lat: 43.893875,lng: 125.276242},{ lat: 43.893875,lng: 125.276242}],function(status,result){})；//Map为控件对象 LoadMarkers(points)-方法，绘制点标记； 说明：参数points为地点信息对象point(point对象的格式参见下表2)数组； 示例： Map.LoadMarkers([{ lat: 43.893875,lng: 125.276242},{ lat: 43.893875,lng: 125.276242}]);//Map为控件对象 SearchResult-属性，选中的搜索结果对象； 说明：对象； 示例： var searchResult = Map.SearchResult；//Map为控件对象 //格式： {adcode: \"220104\"，address: \"前进大街2326号\"，city: []，district: \"吉林省长春市朝阳区\"，id: \"B0FFG6TRRI\"，location: {P: 43.827406, R: 125.29028199999999, lng: 125.290282, lat: 43.827406}，name: \"修正服务外包大厦(西门)\"} SearchResults，搜索结果集； 说明：数组，在事件PlaceSearchCompleted执行并成功获取搜索结果时，此属性有值，否则为空集合； 示例： var searchResults = Map.SearchResults;//Map为控件对象 SearchPlace(kw)-搜索地址； 说明：参数kw字符串，为需要检索的地址信息； 示例： Map.SearchPlace('吉林省长春市人民广场');//Map为控件对象 CurrentPosition，获取当前位置信息； 说明：在事件LiveLocation中可以实时的获取当前的位置信息对象。格式参照下表CurrentPosition对象格式； 示例： var currentPosition = Map.CurrentPosition;//Map为控件对象 MarkPosition-属性，获取标记位置信息对象； 说明：在标记位置信息时获取。对象格式：{ lat: 43.893875,lng: 125.276242} lng:经度，lat：纬度； 示例： var markPosition = Map.MarkPosition；//Map为控件对象 DrawDrivingRoute(points,policy,cb)-方法，绘制驾车路线； 说明：通过指定点按照顺序绘制驾车路线，参数points为指定点位置对象的集合，指定点位置对象格式：{ lat: 43.893875,lng: 125.276242}, lng:经度，lat：纬度；参数policy为路径规划策略，数值：1-最快捷模式(默认)，2-最经济模式，3-最短距离模式，4-考虑实时路况，不传为默认1；cd为路径绘制后的回调函数，第一个参数status-绘制状态，第二个参数result-绘制的结果数据信息。 示例： //Map为控件对象 Map.DrawDrivingRoute([{ lat: 43,lng: 125},{ lat: 43.5,lng: 124},{ lat: 43.8,lng: 123 }]); DrawTruckRoute(points,policy,cb)-方法，绘制货车路线； 说明：通过指定点按照顺序绘制货车路线，参数points为指定点位置对象的集合，指定点位置对象格式：{ lat: 43.893875,lng: 125.276242}, lng:经度，lat：纬度。参数policy为路径规划策略，数值：1-9，不传为默认1；cd为路径绘制后的回调函数，第一个参数status-绘制状态，第二个参数result-绘制的结果数据信息； 示例： //Map为控件对象 Map.DrawTruckRoute([{ lat: 43,lng: 125},{ lat: 43.5,lng: 124},{ lat: 43.8,lng: 123 }]); PlaceSearchNearBy(config,keyword)-方法，搜索附近兴趣点； 说明：keyword：字符串，搜索用关键字；如果不传递此参数，则config中的字段都需要配置，如果此参数有值，则config中的字段可选择性配置； 参数config结构： { //可选，兴趣点类型 多个用|分隔 type:\"餐饮|酒店|电影院\", //可选，每页显示数据数，默认5 pageSize:5, //默认显示页数，1-100 pageIndex:1, //兴趣点城市码 city:\"010\", //是否自动调整地图视野使绘制的 Marker点都处于视口的可见范围 autoFitView:true, //LngLat-中心点坐标 cpoint:[116.405467, 39.907761], //搜索半径 取值范围0-50000 radius:2000, panel:显示搜索结果的容器对象, } 示例： Map.PlaceSearchNearBy(config，keyword);//Map为控件对象 POIItemInfo-属性，兴趣点信息； 说明：此属性值只有在POIListItemClick事件中获取才有值，对象类型，包含信息见图Poi基本信息和Poi详细信息； 示例： var pOIItemInfo = Map.POIItemInfo；//Map为控件对象 Config-配置地图样式信息； 说明：参数points为地点信息对象point(point对象的格式参见下表2)数组；cd为路径绘制后的回调函数，第一个参数status-绘制状态，第二个参数result-绘制的结果数据信息； 示例： //Map为控件对象 //1、简易国家地图： //SOC: SOC字段设定显示的国家；参照：高德地图：国家与地区SOC //depth：depth字段设定数据的层级深度，depth为0的时候只显示国家面，depth为1的时候显示省级，当国家为中国时设置depth为2的可以显示市一级。 Config = { SOC: 'CHN', depth:1 } //2、简易省图： //adcode: 行政区的adcode。参照：高德地图：adcode行政区编码与城市编码表。 //depth: depth字段设定数据的层级深度，depth为0的时候只显示省面，depth为1的时候显示市级，当depth为2的可以显示县一级 Config = { adcode: '130000', depth:1 } HeatMapData-配置热力图数据； 说明：options：热力图绘制配置参数；data：显示的数据集；max:数据count的最大值 示例： //Map为控件对象 Map.HeatMapData={ options:{ radius: 25, //给定半径 opacity: [0, 0.8],//透明度范围 gradient: { //设置渐变色 0.5: 'blue', 0.65: 'rgb(117,211,248)', 0.7: 'rgb(0, 255, 0)', 0.9: '#ffea00', 1.0: 'red' }}, data: [{ \"lng\": 116.191031,//经度值 \"lat\": 39.988585,//纬度值 \"count\": 10 //数值 }, { \"lng\": 116.389275, \"lat\": 39.925818, \"count\": 11 },……], max: 20 //最大值 }; SearchResult-属性，选中的搜索结果对象； 说明：对象； 示例： var searchResult = Map.SearchResult；//Map为控件对象 //格式： {adcode: \"220104\"，address: \"前进大街2326号\"，city: []，district: \"吉林省长春市朝阳区\"，id: \"B0FFG6TRRI\"，location: {P: 43.827406, R: 125.29028199999999, lng: 125.290282, lat: 43.827406}，name: \"修正服务外包大厦(西门)\"} SearchResults，搜索结果集； 说明：数组，在事件PlaceSearchCompleted执行并成功获取搜索结果时，此属性有值，否则为空集合； 示例： var searchResults = Map.SearchResults;//Map为控件对象 SearchPlace(kw)-搜索地址； 说明：参数kw字符串，为需要检索的地址信息； 示例： Map.SearchPlace('吉林省长春市人民广场');//Map为控件对象 附表： 1、CurrentPosition对象属性： status 类型：数值； 说明：0-定位失败；1-定位成功； type 类型：字符串； 说明：失败时-\"error\"；成功时，显示定位结果的来源，可能的值有:'html5'、'ip'、'sdk'； message 类型：字符串； 说明：形成当前定位结果的一些信息； info 类型：字符串； 说明：状态信息：\"FAILED\"-失败；\"SUCCESS\"-成功； lng 类型：数值； 说明：成功时的位置经度值； lat 类型：数值； 说明：成功时的位置纬度值； 2、point对象格式： lng 类型：数值； 说明：位置的经度值，必需； lat 类型：数值； 说明：位置的纬度值，必需； title 类型：字符串； 说明：鼠标经过点标记时显示的文字，可选； label 类型：字符串； 说明：点标记旁边的显示文字，可选； c 类型：字符串； 说明：label显示文字的颜色，可选； bgc 类型：字符串； 说明：label的背景颜色，可选； icon 类型：字符串； 说明：点标记显示图片的地址，可选； w 类型：字符串； 说明：点标记图片的宽度，可选； h 类型：字符串； 说明：点标记图片的高度，可选； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-24 14:28:05 "},"part2/gong-neng-dao-hang-shi-tu-navigationview.html":{"url":"part2/gong-neng-dao-hang-shi-tu-navigationview.html","title":"功能导航视图 NavigationView","keywords":"","body":"功能导航视图 NavigationView 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 列表模式 类型：（下拉框）； 值： 说明：可选值：大图标、列表； 换行方式 类型：（下拉框）； 值： 说明：可选值：单行、多行； 列表成员 类型：字符串； 值： 说明：设置绑定数据源字段； 标题成员 类型：字符串； 值：默认：Text 说明：数据源ItemSource中的标题字段名； 图片成员 类型：字符串； 值：默认：ImageUrl； 说明：数据源ItemSource中的显示图片字段名； 计数成员 类型：字符串； 值：默认：counter 说明：数据源ItemSource中计数字段名； 描述成员 类型：字符串； 值：默认：Description 说明：数据源ItemSource中的描述信息字段名； 项目高度 类型：字符串； 值：默认：auto 说明：设置项目高度，默认显示90px； 事件处理程序 Navigated 调用时机：用户点击项目跳转页面时； 说明： 属性、方法 ItemSource-获取/设置数据源（项目成员）； 说明：数组； 结构说明：Text：显示标题；Description：描述信息；ImageUrl：图片地址；ResourceUri：页面资源地址;Mode:展现方式，PC端设置为1，App端设置为0；ResourceText：显示页面标题； 示例： //NavigationView为控件对象 NavigationView.ItemSource = [{\"Text\":\"项目1\",\"ImageUrl\":\"图片地址1\",\" Description\":\"描述1\",\"ResourceUri\":\"页面资源地址\" ,\"ResourceText\":\"页面标题\",\"Mode\":1}, {\"Text\":\"项目2\",\"ImageUrl\":\"图片地址2\",\" Description\":\"描述2\",\"ResourceUri\":\"页面资源地址\" ,\"ResourceText\":\"页面标题\",\"Mode\":1}]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 13:28:55 "},"part2/ye-mian-dao-hang-shi-tu-pagepartview.html":{"url":"part2/ye-mian-dao-hang-shi-tu-pagepartview.html","title":"页面导航视图 PagePartView","keywords":"","body":"页面导航视图 PagePartView 作用：展示页面资源。 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 页面资源 类型：字符串； 值： 说明：项目的资源路径； 不共享上下文 类型：（单选框）； 值：默认选中 说明：用于设置是否共享上下文，不选中时则共享上下文内容，可以通过formControls获取加载页面资源里的命名控件对象； 属性、方法 PageResourceUri-设置资源路径； 说明：字符串，值为页面的属性下“资源路径”里的值； 示例： //PagePartView为控件对象 PagePartView.PageResourceUri = 'apps/af18cdfd588/ba7c9505c28ae633e30.scrn'; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 13:35:40 "},"part2/outlookbar.html":{"url":"part2/outlookbar.html","title":"OutlookBar","keywords":"","body":"OutlookBar 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 切换按钮栏高度 类型：字符串； 值：示例：35px 说明： 切换按钮位置 类型：（下拉选框）； 值：可选项：左下、中下、右下、左上、中上、右上； 说明：设置切换按钮的位置； 标题栏图片 类型：（按钮）； 值： 说明：设置标题栏显示图片； 标题栏标题 类型：字符串； 值： 说明：设置标题栏标题； 标题栏高度 类型：字符串； 值：示例：44px； 说明：设置标题栏高度； 标题栏背景色 类型：（颜色选择器）； 说明： 标题文字颜色 类型：（颜色选择器）； 说明： 标题文字大小 类型：字符串； 值：示例:16px； 说明： 事件处理程序 OutlookBarItemClicked 调用时机：用户点击项目时； 说明： 属性、方法 ItemSource-获取/设置数据源（项目成员）； 说明：数组； 结构说明：Text：显示标题；ImageUrl：图片地址；ResourceUri：页面资源地址;Mode:展现方式，设置为1；ResourceText：选项卡显示页面标题；Items：下级菜单的ItemSource值； 示例： //OutlookBar为控件对象 OutlookBar.ItemSource = [{\"Text\":\"功能1\",\"ImageUrl\":\"图片地址1\",\"ResourceUri\":\"页面资源地址\",\"Mode\":1,\"ResourceText\":\"页面资源地址\", \"Items\":[{\"Text\":\"功能11\",\"ImageUrl\":\"图片地址11\",\"ResourceUri\":\"页面资源地址\"}]}, {\"Text\":\"功能2\",\"ImageUrl\":\"图片地址2\",\"ResourceUri\":\"页面资源地址\"}]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 13:46:50 "},"part2/ying-yong-biao-ti-mian-ban-apppanel-app.html":{"url":"part2/ying-yong-biao-ti-mian-ban-apppanel-app.html","title":"应用标题面板AppPanel（APP）","keywords":"","body":"应用标题面板AppPanel（APP） 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 文本 类型：字符串； 值： 说明：应用程序标题； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 13:53:32 "},"part2/ci-tie-lie-biao-shi-tu-metronavview.html":{"url":"part2/ci-tie-lie-biao-shi-tu-metronavview.html","title":"磁贴列表视图MetroNavView","keywords":"","body":"磁贴列表视图MetroNavView 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 列表成员 类型：字符串； 值： 说明：设置绑定数据源字段； 标题成员 类型：字符串； 值：默认：Text 说明：数据源ItemSource中的标题字段名； 图片成员 类型：字符串； 值：默认：ImageUrl； 说明：数据源ItemSource中的显示图片字段名； 计数成员 类型：字符串； 值：默认：counter 说明：数据源ItemSource中计数字段名； 描述成员 类型：字符串； 值：默认：Description 说明：数据源ItemSource中的描述信息字段名； 项目高度 类型：字符串； 值：默认：160px 说明：设置项目高度，默认显示160px； 每行列数 类型：数值； 值：默认：3 说明：每行的项目数； 事件处理程序 Navigated 调用时机：用户点击项目跳转页面时； 说明：可以在此事件里通过thisControl.Data获取点击Item的数据上下文; 属性、方法 ItemSource-获取/设置数据源（项目成员）； 说明：数组； 结构说明：Text：显示标题；Description：描述信息；ImageUrl：图片地址；ResourceUri：页面资源地址;Mode:展现方式，PC端设置为1，App端设置为0；ResourceText：显示页面标题； 示例： //MetroNavView为控件对象 MetroNavView.ItemSource = [{\"Text\":\"项目1\",\"ImageUrl\":\"图片地址1\",\" Description\":\"描述1\",\"ResourceUri\":\"页面资源地址\" ,\"ResourceText\":\"页面标题\",\"Mode\":1}, {\"Text\":\"项目2\",\"ImageUrl\":\"图片地址2\",\" Description\":\"描述2\",\"ResourceUri\":\"页面资源地址\" ,\"ResourceText\":\"页面标题\",\"Mode\":1}]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 13:54:38 "},"part2/dan-chu-shi-dao-hang-shitu-popupnavigationview.html":{"url":"part2/dan-chu-shi-dao-hang-shitu-popupnavigationview.html","title":"弹出式导航视图PopupNavigationView","keywords":"","body":"弹出式导航视图PopupNavigationView 作用：当前界面弹出式加载新的界面； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 显示模式 类型：（下拉框）； 值：默认值：左边 说明：设置弹出视图的弹出位置，可选值：左边、上边、右边、下边； 按钮图标 类型：（图片选择）； 说明：设置按钮显示的图标； 页面资源 类型：字符串； 值：示例：apps/…… 说明：设置弹出页面的资源路径； 页面宽度 类型：字符串； 值：示例：200px 说明：设置弹出页面的显示宽度; 页面高度 类型：字符串； 值：示例：300px； 说明：设置弹出页面的显示高度； 关闭延迟 类型：数值； 值： 说明：设置弹出页面的显示时间（毫秒数），不填写任何数值时，弹出界面不会自动关闭； 属性、方法 DataContext-属性，设置数据上下文； 说明：对象，弹出界面的数据上下文和当前控件共享同一个数据上下文（在同一个表单上下文）； 示例： //PopupNavigationView为控件对象 PopupNavigationView.DataContext = {'_id':'adfaefrf'}; ResUrl-属性，设置加载页面资源； 说明：字符串； 示例： //PopupNavigationView为控件对象 PopupNavigationView.ResUrl = 'apps/……'; Show-方法，显示加载的页面； 说明：方法，无返回值； 示例： //PopupNavigationView为控件对象 PopupNavigationView.Show(); Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 14:28:46 "},"part2/ye-mian-xuan-xiang-qia-tabpageview.html":{"url":"part2/ye-mian-xuan-xiang-qia-tabpageview.html","title":"页面选项卡TabPageView","keywords":"","body":"页面选项卡TabPageView 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 导航栏高度 类型：字符串； 值：示例：32px 说明：设置页面导航高度； 导航栏背景色 类型：（颜色选择器）； 说明：设置导航栏背景颜色； 导航栏位置 类型：（下拉选项）； 值：可选值：上、下 说明：设置导航栏的位置； 分项字体颜色 类型：（颜色选择器）； 说明：设置各选项默认字体颜色； 分项选中字体颜色 类型：（颜色选择器）； 说明：设置各选项选中时字体颜色； 分项背景色 类型：（颜色选择器）； 说明：设置各选项默认背景颜色； 分项选中背景色 类型：（颜色选择器）； 说明：设置各选项选中时背景颜色； 选项宽度 类型：字符串； 值：示例：44px 说明：设置各选项的宽度，默认平均分配； 选项高度 类型：字符串； 值：示例：90% 说明：设置各选项的高度； 选项圆角 类型：字符串； 值：示例：5px； 说明：设置各选项的圆角，默认0px； 选项边框 类型：字符串； 值：示例：1px solid red 说明：设置各选项的边框样式，遵守CSS的border设置规则； 选项图片宽高 类型：字符串； 值：示例：40px 50px 说明：设置各选项显示图片的宽度和高度，中间用空格分隔，如果只写一个值，则宽高相同； 选项内容方向 类型：（下拉选项）； 值：可选值：垂直排列、水平排列；默认是垂直排列； 说明：设置各选项内图片、标题、副标题排列方向； 选中项 类型：数值； 值：示例：0 说明：设置某一项为选中项，从0开始； 标题成员 类型：字符串； 值：默认值：Text 说明：设置显示标题的键名； 副标题成员 类型：字符串； 值：默认值：SubTitle； 说明：设置显示副标题的键名； 默认图片成员 类型：字符串； 值：默认值：DefaultImg 说明：设置显示默认图片的键名； 选中图片成员 类型：字符串； 值：默认值：SelectedImg 说明：设置选中时显示图片的键名； 页面资源成员 类型：字符串； 值：默认值：PageUri； 说明：设置选项的页面资源地址； 页面配置 类型：（按钮）； 说明：弹出配置页面，对页面各选项数据进行配置； 注：如果使用“页面配置”进行设置各选项内容，不要更改上述的成员属性默认值；如果通过ItemSource属性设置数据源，根据需求设置成员属性的值； 事件处理程序 ItemClick 调用时机：用户点击选项卡时； 说明： 属性、方法 ItemSource-设置数据源； 说明：数组； 结构说明：Text:选项卡标题；PageUri：页面资源； 示例： //TabPageView为控件对象 TabPageView.ItemSource = [{\"Text\":\"项目1\",\"PageUri\":\"页面资源地址\" }, {\"Text\":\"项目2\",\"PageUri\":\"页面资源地址\" }]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 14:47:50 "},"part2/tong-zhi-jian-ting-566828-pc-messagelistener.html":{"url":"part2/tong-zhi-jian-ting-566828-pc-messagelistener.html","title":"通知监听器(PC) MessageListener","keywords":"","body":"通知监听器(PC) MessageListener 作用：用于监听推送平台消息发出的消息推送，在监听到消息时做业务处理；监听到的消息模式为2（消息提示框）或3（语音消息）；详见消息推送； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 显示标题 类型：字符串； 值： 说明：设置显示标题； 显示图标 类型：（图片选择器）； 值： 说明：设置显示图片； 停留时间(ms) 类型：数值； 值：默认值：8000 说明：设置消息提醒停留时间，数值类型，单位毫秒(ms)，默认8000ms； 消息类型 类型：字符串； 值： 说明：用于处理消息的标记，监听某一类型的消息（平台消息推送中的消息Id），自定义； AppId 类型：字符串； 值： 说明：监听的消息的应用标识（监听哪个应用的消息）； 全局消息 类型：（单选框）； 值： 说明：设置是否监听全局消息； 事件处理程序 ListenerOnLoad 调用时机：监听器加载时； 说明： ListenerOnMsg 调用时机：监听到消息时； 说明：在此事件里，通过thisControl. MsgObject获取到消息对象 ListenerUnLoad 调用时机：监听器卸载时； 说明： Click 调用时机：点击控件时 说明： TipBoxClick 调用时机：点击弹出的消息显示框时； 说明：触发对象为消息显示框对象，消息显示框对象的属性DataContext记录着接受到的消息体对象； 属性、方法 Badge-属性，设置右上角角标值； 说明：数值； 示例： //MessageListener为控件对象 MessageListener.Badge =2; ShowMessageList-方法，显示消息列表； 说明：方法； 示例： //MessageListener为控件对象 MessageListener.ShowMessageList(); HideMessageList-方法，隐藏消息列表； 说明：方法； 示例： //MessageListener为控件对象 MessageListener.HideMessageList(); ItemSource-属性，设置消息列表数据源； 说明：数组； 示例： //MessageListener为控件对象 MessageListener.ItemSource =[{Title:\"标题\",Text:\"内容\"},{Title:\"标题\",Text:\"内容\"}]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 15:08:23 "},"part2/dao-hang-lan-navigationbar-app.html":{"url":"part2/dao-hang-lan-navigationbar-app.html","title":"导航栏 NavigationBar（App）","keywords":"","body":"导航栏 NavigationBar（App） 作用：自定义App导航栏； 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 返回图片 类型：（按钮）； 值：选择图片、清除图片； 说明：设置返回按钮的图片； Item01文本 类型：字符串； 值： 说明：设置Item01按钮的显示文字； Item01图片 类型：（按钮）； 值：选择图片、清除图片； 说明：设置Item01按钮的图片； Item02文本 类型：字符串； 值： 说明：设置Item02按钮的显示文字； Item02图片 类型：字符串； 值： 说明：设置Item02按钮的图片； 可见-设置控件是否显示； 事件处理程序 Item01Click 调用时机：点击Item01时； 说明： Item02Click 调用时机：点击Item02时； 说明： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-24 12:41:07 "},"part2/shu-ju-fang-wen-kong-jian.html":{"url":"part2/shu-ju-fang-wen-kong-jian.html","title":"数据访问控件","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/lie-biao-kong-jian.html":{"url":"part2/lie-biao-kong-jian.html","title":"列表控件","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part2/lie-biao-kong-jian/lie-biao-shi-tu-listview.html":{"url":"part2/lie-biao-kong-jian/lie-biao-shi-tu-listview.html","title":"列表视图 ListView","keywords":"","body":"列表视图 ListView 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 数据模板 类型：编辑模板（按钮）； 值： 说明：在列表视图中弹出编辑模板界面； 设置分组 类型：编辑分组（按钮）； 值： 说明：在列表视图中弹出编辑分组界面； 对象分类 类型：编辑对象分类（按钮）； 说明：在列表视图中弹出编辑对象分类界面； 分类属性 类型：字符串； 说明：用作对象分类的字段名； 正常模板 类型：字符串； 值：默认：ItemTemplate； 说明：设置默认显示模板的模板名； 选定模板 类型：字符串； 值：默认：ItemSelectedTemplate 说明：设置选定时显示模板的模板名； 项目成员 类型：字符串； 说明：列表控件从表单数据上下文中获取值的字段名； 默认选中行 类型：数值； 说明：设置默认选中的Item索引值，从0开始,填写超出范围、类型错误、不填写则不会默认选中； 选定前景颜色 类型：（颜色选择器）； 说明：选定时文字颜色；如果在编辑模板时设置了前景色，此处设置将无效； 选定背景颜色 类型：（颜色选择器）； 说明：选定时模板背景颜色；如果在编辑模板时设置了背景色，此处设置将无效； 选定边框颜色 类型：（颜色选择器）； 说明：选定时模板边框颜色；如果在编辑模板时设置了边框颜色，此处设置将无效； 纵向排列项目-FillFullRow； 横向单行排列项目-SingleRow； 注:每个模板本身就是一个表单Form；模板对象的属性ListView，指向当前列表视图本身。 编辑模板-设计属性 保存关闭 作用：保存所有编辑的模板，并关闭模板编辑器； 添加模板 作用：添加一个新的模板； 删除模板 作用：删除选中的模板； 编辑分组-列表分组设计 作用：当数据需要分组显示时，需要进行分组设置 保存并关闭 作用：保存所有编辑的分组，并关闭分组设计器； 新建分组 作用：添加一个新的分组设计器； 删除分组 作用：删除选中的分组设计器； 分组成员 作用：设置数据源中分组项目的数据属性； 分组模板 作用：组模板名； 自动展开分组 作用：是否自动展开分组； 逐层加载方法 作用： 项目模板 作用：每组中项目的模板； 选定模板 作用：每组中项目的选定模板； 横向排列 作用：项目是否横向排列，勾选的话项目就会以行内块显示； 分页加载 作用：设置是否分页加载； 每页对象数 作用：分页加载的话，每页显示对象数； 编辑对象分类-设计属性 保存并关闭 说明：保存所有编辑的对象分类，并关闭对象分类编辑器； 添加对象分类 说明：添加一个新的对象分类； 删除对象分类 说明：删除选中的对象分类； 分类值 说明：分类属性的值，分类属性在列表设计器里设置 项目模板 说明：分类属性为此值时，显示的模板名； 选定模板 说明：分类属性为此值时，显示的模板名； 正常项目边框颜色 说明：如果模板设计时设置了模板此样式颜色，此设置将无效； 前景颜色 说明：如果模板设计时设置了模板此样式颜色，此设置将无效； 背景颜色 说明：如果模板设计时设置了模板此样式颜色，此设置将无效； 选定项目边框颜色 说明：如果模板设计时设置了模板此样式颜色，此设置将无效； 前景颜色 说明：如果模板设计时设置了模板此样式颜色，此设置将无效； 背景颜色 说明：如果模板设计时设置了模板此样式颜色，此设置将无效； 事件处理程序 SelectedItemChanged 调用时机：选中行改变时； 说明：cmd.Sender指代当前行对象； 备注： ItemTemplateSelector 调用时机：控件加载数据时； 说明：每条数据的呈现都会调用，cmd.Sender指代当前行数据对象。需要在此事件中返回模板名（字符串）。 备注：性能差，谨慎使用！ ItemClick 调用时机：点击item时； 说明：cmd.Sender指代当前行对象 备注： ItemDataContextChanged 调用时机：为Item赋值数据时； 说明：cmd.Sender指代当前行对象 备注：多次调用，性能差； SelectedItemDblClick 调用时机：双击Item时； 说明：cmd.Sender指代当前行对象； 备注： 属性、方法 ItemSource-属性，设置数据源； 说明：数组； 示例： ListView.ItemSource = [{'Text':'标题1','Value':'副标题'……},……] ;//ListView为控件对象 ItemTemplate-属性，设置正常显示模板； 说明：字符串类型； 示例： ListView.ItemTemplate = \"ItemTemplate\";//ListView为控件对象 ItemSelectedTemplate-属性，设置选中时显示模板； 说明：字符串； 示例： ListView.ItemSelectedTemplate = \"ItemSelectedTemplate\"; //ListView为控件对象 AddItem(data,Temp)-方法，添加一行； 说明：为列表视图添加一行，参数data为对象类型；Temp为字符串类型，可选参数，模板的名字，如不传此参数，添加默认模板；返回值为Item对象； 示例： var Item = ListView.AddItem({'Text':'标题1','Value':'副标题……'},'ItemTemplate'); //ListView为控件对象 AddItemAt(position,data,Temp)-方法，在指定位置添加一行； 说明：为列表视图在指定位置添加一行，参数position为数值类型，需要插入item的位置，从0开始；data为对象类型，插入item的数据上下文对象；Temp为字符串类型，可选参数，模板的名字，如不传此参数，添加默认模板；返回值为Item对象； 示例： //ListView为控件对象 在首行添加一行 var Item = ListView.AddItemAt(0,{'Text':'标题1','Value':'副标题……'},'ItemTemplate'); Items-属性，获取所有行对象集合； 说明：数组，保存着每一个模板的表单对象。通过表单对象的属性FormControls获取模板内命名的控件对象集合； 示例： var items = ListView.Items;//ListView为框控件对象 SelectedItem-属性，获取列表选中行对象； 说明：对象,SelectedItem对象的属性DataContext存储着SelectedItem的数据上下文； 示例： var item = ListView. SelectedItem;//ListView为控件对象 OnSelectedItemChanged(item)-方法，设置某行呈现选中效果； 说明：这个方法只会在样式上改变选中效果，不会触发点击事件； 示例： ListView.OnSelectedItemChanged(ListView.Items[0]); //ListView为文本输入框控件对象 Click( )-方法，点击列表某行； 说明： 示例： ListView.Items[0].Click();//第0行被点击 触发item的点击事件; //ListView为文本输入框控件对象 ListView-属性，通过行对象获取所在列表控件对象； 说明：对象； 示例： var listView = item.ListView; //item为列表控件的某一个行对象;ListView为控件对象 RemoveItem(item)-方法，移除行对象； 说明：item为列表控件的某一个行对象 示例： ListView.RemoveItem(item);//ListView为控件对象 ShowChildPanel( )-方法，分组项显示子项； 说明： 示例： GroupItem.ShowChildPanel();// GroupItem代表分组项对象; ListView为控件对象 HideChildPanel( )-方法，分组项隐藏子项； 说明： 示例： GroupItem.HideChildPanel();// GroupItem代表分组项对象; ListView为控件对象 ChangeTemplate(item,template)-方法，切换模板显示； 说明： 示例： ListView.ChangeTemplate(item,template)//item:对象，行对象；template：字符串，创建的模板名称//ListView为控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-25 10:35:17 "},"part2/lie-biao-kong-jian/shu-xing-lie-biao-shi-tu-treelistview.html":{"url":"part2/lie-biao-kong-jian/shu-xing-lie-biao-shi-tu-treelistview.html","title":"树形列表视图 TreeListView","keywords":"","body":"树形列表视图 TreeListView（PC） 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 项目成员 类型：字符串； 值： 说明： 显示属性 类型：字符串； 值：默认：Text； 说明：数据源ItemSource中显示的字段名； 取值属性 类型：字符串； 值：默认值：Text 说明：数据源ItemSource中取值的字段名； 图片属性 类型：字符串； 值：默认值：ImageUrl 说明：数据源ItemSource中图片字段名； 复选属性 类型：字符串； 值： 说明：数据源ItemSource中复选属性字段名； 自动展开节点 类型：（单选框）； 值： 说明：是否自动展开节点； 节点支持复选 类型：（单选框）； 值： 说明：节点是否支持复选； 节点支持拖拽 类型：（单选框）； 值： 说明：节点 是否支持拖拽； 事件处理程序 TreeListNodeClick 调用时机：单击节点； 说明： TreeListNodeDblClick 调用时机：双击节点； 说明： TreeListNodeChecked 调用时机：选择节点； 说明： TreeListViewSelectedNodeChanged 调用时机：选择的节点改变 说明： TreeNodeDragDrop 调用时机：拖拽节点时； 说明：在此事件中，可以通过cmd.Sender获取一个对象：{ TreeView: 视图,SrcNode: 源节点,TargetNode: 目标节点,FormContext:视图的表单上下文 }，然后通过节点的属性DataContext获取节点的数据上下文对象； 属性、方法 ItemSource-属性，设置数据源； 说明：数组； 数据结构说明：Text：显示标题；Value:值；ImageUrl：图片地址；ResourceUri：页面资源地址;Mode:页面加载方式；ResourceText：选项卡显示页面标题；Items：下级菜单的ItemSource值； 示例： //TreeListView为控件对象 TreeListView.ItemSource =[{\"Text\":\"功能1\",\"Value\":\"值1\",\"ImageUrl\":\"图片地址1\",\"ResourceUri\":\"页面资源地址\",\"Mode\":1,\"ResourceText\":\"页面资源地址\", \"Items\":[{\"Text\":\"功能11\",\"Value\":\"值1\",\"ImageUrl\":\"图片地址11\",\"ResourceUri\":\"页面资源地址\"}]}, {\"Text\":\"功能2\",\"Value\":\"值2\",\"ImageUrl\":\"图片地址2\",\"ResourceUri\":\"页面资源地址\"}]; SelectedNode-属性，获取/设置树形列表对象当前选中节点对象； 说明：对象，获取/设置树形列表对象当前选中节点对象； 示例： //TreeListView为控件对象 var selectedNode = TreeListView.SelectedNode; AddChildNode(data)方法，添加一级节点； 说明：方法,为树形列表添加一级节点，参数data为添加节点的数据上下文对象；； 示例： //TreeListView为控件对象 TreeListView.AddNode(data); CheckedNodes-属性，获取选中节点对象集； 说明：数组，元素为选中节点对象； 示例： //TreeListView为控件对象 var checkedNodes = TreeListView.CheckedNodes; 节点对象Node的属性/方法 TreeListView-属性，通过节点对象获取树形列表视图对象； 说明：对象，通过节点对象获取树形列表视图对象； 示例： //Node为节点对象 var treeListView = Node.TreeListView; ItemSource-属性，设置节点数据源； 说明：数组，设置节点对象的数据源，数组中元素为子节点的数据对象； 示例： //Node为节点对象 Node.ItemSource = [{},{}]; Nodes-属性，子节点对象数组； 说明：节点Node的子节点对象数组； 示例： //Node为节点对象 var nodes = Node.Nodes; AddChildNode(data)-方法，为当前节点添加子节点； 说明：参数data为新节点的数据上下文对象； 示例： //Node为节点对象 Node.AddChildNode(data) ; ParentNode-属性，获取当前节点的父节点； 说明：对象，获取当前节点对象的父(上一级)节点； 示例： //Node为节点对象 var nodes = Node.ParentNode; RemoveNode(childNode)-方法，移除节点的某个子节点； 说明：参数childNode为Node的一级子节点； 示例： //Node为节点对象 Node.RemoveNode(childNode); ClearNodes( )-方法，清空子节点； 说明：方法,清空节点Node的一级子节点； 示例： //Node为节点对象 Node.ClearNodes(); Expand( )-方法，展开子节点； 说明：展开显示节点的一级子节点； 示例： //Node为节点对象 Node.Expand(); Collapse()-方法，折叠子节点； 说明：折叠显示子节点； 示例： //Node为节点对象 Node.Collapse(); SetText(text)-方法，设置节点显示标题； 说明：设置节点显示标题，参数text为字符串，表示显示的标题内容； 示例： //Node为节点对象 Node.SetText ('节点标题'); GetText( )-方法，获取节点显示标题； 说明：获取节点显示标题，返回值为标题内容，字符串类型； 示例： //Node为节点对象 var text = node.GetText(); Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 10:28:20 "},"part2/lie-biao-kong-jian/shu-xing-xia-la-lie-biao-combotreebox-pc.html":{"url":"part2/lie-biao-kong-jian/shu-xing-xia-la-lie-biao-combotreebox-pc.html","title":"树形下拉列表 ComboTreeBox（PC）","keywords":"","body":"树形下拉列表 ComboTreeBox（PC） 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 文本内容 类型：字符串； 说明： 数据域 类型：字符串； 值： 说明：符合变量命名规则；数据域作为表单上下文的一个属性，所有指定数据属性的控件的值，都会保存在数据域对象中； 数据属性 类型：字符串； 说明：符合变量命名规则；用于获取控件的值；控件的值会保存在表单上下文对象的数据属性上，如果指定了数据域，则会保存在数据域对象上； 绑定路径 类型：字符串； 说明：为控件赋值的属性；页面加载时，会从表单的数据上下文对象DataContext中获取相应字段值进行显示； 可用：设置控件是否可用； 可见：设置控件是否显示； 只读：设置文本输入框是否只读，不允许编辑； 可用性表达式 类型：字符串； 示例： this.DataContext.Flag==2;//当控件对象的属性DataContext对象的Flag值为2时，控件可用，否则不可用； 说明：界面加载时，通过控件的数据上下文某个属性值，控制控件是否可用；this指向当前控件对象； 列表高度 类型：字符串； 值：默认值：300px； 说明：设置下拉列表显示的最大高度； 显示属性 类型：字符串； 值：默认值：Text； 说明：数据源ItemSource中显示的字段名； 取值属性 类型：字符串； 值：默认值：Value； 说明：数据源ItemSource中取值的字段名； 图片属性 类型：字符串； 值：默认值：ImageUrl； 说明：数据源ItemSource中图片的字段名； 事件处理程序 ValueChanged 调用时机：选中选项时； 说明： 备注： 属性、方法 SelectedItem-属性，获取选择的项目对象 说明：对象，默认为undefined；通过SelectedItem.DataContext获取选中项目的数据上下文对象。 示例： var item = ComboTreeBox.SelectedItem;//ComboTreeBox为控件对象 ItemSource-获取/设置数据源 说明：数据源的值类型为数组； ItemSource值结构说明：类型为对象数组；Text：显示标题；Value:值；ImageUrl：图片地址；Items：下级菜单的ItemSource值； 示例： //设置数据源 ComboTreeBox.ItemSource =[{\"Text\":\"功能1\",\"Value\":\"值1\",\"ImageUrl\":\"图片地址1\", \"Items\":[{\"Text\":\"功能11\",\"Value\":\"值1\",\"ImageUrl\":\"图片地址11\"},……]}, {\"Text\":\"功能2\",\"Value\":\"值2\",\"ImageUrl\":\"图片地址2\"}]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 11:22:38 "},"part2/lie-biao-kong-jian/biao-ge-kong-jian-datagridview-pc.html":{"url":"part2/lie-biao-kong-jian/biao-ge-kong-jian-datagridview-pc.html","title":"表格控件 DataGridView（PC）","keywords":"","body":"表格控件 DataGridView（PC） 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 允许显示行号 类型：（单选框）； 值：默认选中 说明：是否显示行号； 支持单元格编辑 类型：（单选框）； 值： 说明：是否支持单元格编辑； 显示分组面板 类型：（单选框）； 说明：是否显示分组面板； 自动展开分组 类型：（单选框）； 说明：默认选中，是否自动展开分组； 添加列 类型：（按钮）； 说明：添加一列； 清除列 类型：（按钮）； 说明：清除选中的列； 调整列顺序 类型：（按钮）； 说明： 生成预览数据 类型：（按钮）； 说明：生成预览数据，查看设计效果； 默认选中行 类型：数值； 值：默认：无 说明：数值从0开始。设置之后，会在表格加载完成，选中设置行，触发RowClick事件； 注:每行Row就是一个表单Form；行对象的属性DataGridView，指向当前表格控件本身。 编辑对象分类-设计属性 列标题 类型：字符串； 值： 说明：设置列头显示的标题； 列属性 类型：字符串； 值： 说明：设置列的赋值属性，符合变量命名规则。不能为空。禁止设置为Add； 格式化 类型：字符串； 值： 说明：日期控件可以设置日期格式化，如：yyyy-MM-dd； 列宽度 类型：字符串； 值：默认值：128px； 说明：设置列宽度，不能为百分比； 对齐方式 类型：（下拉选框）； 说明：可选值：左对齐、右对齐、居中； 编辑控件类型 类型：（下拉选框）； 值：默认值：文本控件 说明：可选值：文本控件、单选控件、日期控件； 编辑提示 类型：字符串； 说明： 编辑验证 类型：字符串； 说明： 错误提示 类型：字符串； 说明： 允许单元格编辑 类型：（单选框）； 值： 说明： 支持排序 类型：（单选框）； 说明：默认选中； 支持自定义分组 类型：（单选框）； 说明： 预设为分组列 类型：（单选框）； 说明：是否预设为分组列； 背景颜色 类型：（颜色选择器）； 说明： 文字颜色 类型：（颜色选择器）； 说明： 事件处理程序 SelectedRowChanged 调用时机：选中行改变时； 说明：事件触发者为行对象； SelectedCellChanged 调用时机：选中单元格发生改变时； 说明：事件触发者为单元格对象； CellClick 调用时机：点击单元格时； 说明：事件触发者为单元格Cell对象； RowClick 调用时机：单击行时； 说明：事件触发者为行对象 RowDblClick 调用时机：双击某行时； 说明：事件触发者为行对象； 属性、方法 ItemSource-属性，获取/设置数据源； 说明：数组，默认值为undefined； 示例： DataGridView.ItemSource = [{'Name':'Jack','age':12,……},……] ;//DataGridView为控件对象 SelectedRow-属性，获取点击行； 说明：对象； 示例： var selectedRow = DataGridView.SelectedRow;//DataGridView为控件对象 Rows-属性，获取所有创建行对象集合； 说明：数组，存储着绘制完成的每一个行对象；由于表格的创建是延时操作，延时50ms,所以给表格的数据源ItemSource赋值后，不能立即获取到Rows；有分组的情况下，分组行也在此集合里，可通过行对象属性CloneDataContext值是否为undefined判断是否为分组行； 示例： var rows = DataGridView.Rows; //DataGridView为控件对象 OnRowClick(row)-方法，点击某行； 说明：参数row为行对象； 示例： DataGridView. OnRowClick(row);//DataGridView为控件对象 Column-单元格对象Cell的属性Column； 说明：Column对象的属性： 1、Index-列索引，数值类型。当前单元格所在列索引，从0开始；2、Property-单元格绑定的属性名；3、Text-单元格显示的文字；4、ColType-列类型，字符串，“1”-单选列； 示例： var column = Cell.Column;//Cell为单元格控件对象 CloneDataContext()-方法，获取有分组表格的点击行数据； 说明：返回值为点击行的数据上下文对象； 注意：分组行没有CloneDataContext方法； 示例： var data = DataGridView.SelectedRow.CloneDataContext();//DataGridView为控件对象 RemoveRow(row)-方法，移除行； 说明：参数row为需要移出的行对象； 示例： DataGridView.RemoveRow(row); ; //DataGridView为控件对象 BkC_VaLue-通过数据设置表格行背景颜色； 说明：返回数据含BkC_VaLue列，值为颜色值，例: item.BkC_VaLue=\"red\"； Fc_VaLue-通过数据设置表格行字体颜色； 说明：返回数据含Fc_VaLue列，值为颜色值，例:item. Fc_VaLue=\"red\"； DataGridView-行对象属性，通过行对象获取所在表格控件对象； 说明：对象； 示例： var dataGridView = Row.DataGridView; //Row为表格控件的某一个行对象; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 13:19:29 "},"part2/lie-biao-kong-jian/biao-qian-lie-biao-ratetagboxlist.html":{"url":"part2/lie-biao-kong-jian/biao-qian-lie-biao-ratetagboxlist.html","title":"标签列表 RateTagBoxList","keywords":"","body":"标签列表 RateTagBoxList 设计属性 （默认选项样式）： 字体颜色 类型：（颜色选择器）； 说明：默认状态下字体颜色； 边框颜色 类型：（颜色选择器）； 说明：默认状态下边框颜色； 背景颜色 类型：（颜色选择器）； 说明：默认状态下背景颜色； （选中时选项样式）： 字体颜色 类型：（颜色选择器）； 说明：选中状态下字体颜色； 边框颜色 类型：（颜色选择器）； 说明：选中状态下边框颜色； 背景颜色 类型：（颜色选择器）； 说明：选中状态下背景颜色； 选择模式 类型：（下拉选）； 说明：设置选择模式，可选值：单选、多选； 未匹配到选项时动态添加 类型：（单选框）； 说明：赋值数据时，在未匹配到选项时，是否将未匹配到的选项作为可选项添加到列表； 事件处理程序 ItemClick 调用时机：标签被点击时； 说明：事件的触发者(cmd.Sender)为Item Item对象的属性RateTagBoxList指向标签列表对象；DataContext属性记录Item的数据上下文对象； 属性、方法 ItemSource-属性，获取/设置数据源； 说明：数组，默认值为undefined；设置可选项数据；字段说明：Title：显示文字，Status：选中状态，0-未选中，1-选中；Value:选项值； 示例： RateTagBoxList.ItemSource = [{Title:\"选项1\",Value:0，Status:0}, {Title:\" 选项2\",Value:2}, {Title:\" 选项1\",Value:3}, {Title:\" 选项1\",Value:4}] ;//RateTagBoxList为控件对象 Datas-属性，赋值数据； 说明：数组，给定的数据中，配匹到可选项的Title或者Value时，则显示选中状态； 示例： //此时选项1为选中状态样式，其余选项为默认样式； RateTagBoxList.Datas = [{Title:\"选项1\",Value:0}];//RateTagBoxList为控件对象 SelectedItems-属性，所有选中的标签(item)数据上下文对象集合； 说明：获取所有选中的数据对象集合，数组；未选中任何选项为空数组； 示例： //结构——[{Title:\" 选项1\",Status:1},{Title:\" 选项3\",Status:1}] var selectedItems = RateTagBoxList.SelectedItems; //RateTagBoxList为控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 13:30:59 "},"part2/lie-biao-kong-jian/shu-ju-tu-biao-kong-jian-charts.html":{"url":"part2/lie-biao-kong-jian/shu-ju-tu-biao-kong-jian-charts.html","title":"数据图表控件 Charts","keywords":"","body":"数据图表控件 Charts 注：将要废弃，请使用数据图表； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 13:36:09 "},"part2/lie-biao-kong-jian/lie-biao-fen-ye-kong-jian-pagination-pc.html":{"url":"part2/lie-biao-kong-jian/lie-biao-fen-ye-kong-jian-pagination-pc.html","title":"列表分页控件Pagination（PC）","keywords":"","body":"列表分页控件Pagination（PC） 作用：分页显示； 设计属性 对象名称 类型：字符串； 说明：自定义控件对象名； 显示跳转组件 类型：（单选框）； 说明：是否显示跳转页面的组件；默认不显示； 事件处理程序 PageIndexChanged 调用时机：点击页码标签时； 说明：展示点击的页面数据在此事件里面操作； 属性、方法 DataSource-属性，设置数据源； 说明：对象，通过数据源赋值，告诉控件总数据条数和每页加载的数据量； 示例： Pagination.DataSource={ dataCount:2000,//总数据量 perPageCount:30//每页加载数据量 };//Pagination为控件对象 currentPage-属性，获取当前点击页数； 说明：数值，可以在PageIndexChanged事件中获取，从1开始。； 示例： var currentPage = Pagination.currentPage;//Pagination为控件对象 perPageCount-属性，获取每页数据量； 说明：数值，可以在PageIndexChanged事件中获取； 示例： var perPageCount = Pagination.perPageCount;//Pagination为控件对象 SetPage(page)-方法，设置选中某一页； 说明：参数page为需要选中的页数，数值； 示例： Pagination.SetPage(3);//Pagination为控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 14:03:27 "},"part2/lie-biao-kong-jian/ke-qie-huan-zhan-ban-slideshowview-app.html":{"url":"part2/lie-biao-kong-jian/ke-qie-huan-zhan-ban-slideshowview-app.html","title":"可切换展板SlideShowView（APP）","keywords":"","body":"可切换展板SlideShowView（APP） 设计属性 对象名称 类型：字符串； 说明：自定义控件对象名； 切换间隔 类型：数值； 值：默认值：5000； 说明：单位：毫秒； 切换效果 类型：（下拉选框）； 说明：可选值：左右滑动、上下滑动、淡入淡出； 项目成员 类型：字符串； 说明： 属性、方法 ItemSource-属性，设置数据源； 说明：数组; 示例： //SlideShowView为控件对象 //字段说明： //Mode：加载页面资源的显示模式，模式区别参考加载UI； //ResourceText：页面资源展示标题； //ResourceUri：展示的页面资源地址； //ImageUrl：展示的图片地址； SlideShowView.ItemSource = [{\"Mode\":0,\"ResourceText\":\"广告\",\"ResourceUri\":\"\",\"ImageUrl\":\"图片地址\"}, {\" Mode \":0,\"ResourceText\":\"广告\",\"ResourceUri\":\"\",\"ImageUrl\":\"\"}]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 14:26:47 "},"part2/lie-biao-kong-jian/duo-gong-neng-cha-xun-kuang-searchbox.html":{"url":"part2/lie-biao-kong-jian/duo-gong-neng-cha-xun-kuang-searchbox.html","title":"多功能查询框SearchBox","keywords":"","body":"多功能查询框 SearchBox 设计属性 对象名称 类型：字符串； 说明：自定义控件对象名； 按钮文字 类型：字符串； 示例：搜索; 说明：设置按钮文字； 显示图片 类型：（按钮）； 说明：设置显示图片； 提示文字 类型：字符串； 值：默认为空 说明：设置输入提示文字； 搜索结果展示页面 类型：字符串； 值：示例：apps/e1334…… 说明：用于展示结果的页面资源地址； 事件处理程序 SearchingFor 调用时机：点击按钮或者文本框激活时按下键盘“回车”键； 说明：在这个事件里，拿到文本框值Text，进行数据库查询等操作； ItemSelected 调用时机：此事件需要手动调用方法OnItemSelected时才会触发； 说明：在展示界面获取到点击数据后，手动调用OnItemSelected方法； 属性、方法 Text-属性，获取输入框文本； 说明：字符串； 示例： var text = SearchBox.Text;//SearchBox为控件对象 Show(obj)-方法，显示搜索结果页面； 说明：此方法在SearchingFor事件里查询操作之后调用，参数为对象类型，里面包含查询到的数据，属性名自定义，在结果展示界面使用； 示例： SearchBox.Show(obj);//SearchBox为控件对象 SearchBar-属性，在结果展示界面获取“查询面板”控件； 说明：对象； 示例： //在结果展示界面使用“当前表单”才能获取 //thisForm为结果展示页表单对象 var SearchBar = thisForm.SearchBar; DataContext-属性，在结果展示界面获取搜索到的数据； 说明：对象； 示例： //获取到的对象就是调用Show(obj)方法传入的参数obj //thisForm为结果展示页表单对象 var data = thisForm.DataContext; OnItemSelected()-方法，在结果展示界面触发ItemSelected事件； 说明：选中结果中某行数据时调用此方法，把选中行数据赋值给“查询面板”控件的自定义属性，然后传回ItemSelected事件中； 示例： //thisForm为结果展示页表单对象 thisForm.SearchBar.OnItemSelected(); 使用过程示例： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 14:44:20 "},"part2/lie-biao-kong-jian/zhuan-pan-kong-jian-turnplate-app.html":{"url":"part2/lie-biao-kong-jian/zhuan-pan-kong-jian-turnplate-app.html","title":"转盘控件TurnPlate（APP）","keywords":"","body":"转盘控件TurnPlate（APP） 作用：多用于抽奖； 设计属性 对象名称 类型：字符串； 说明：自定义控件对象名； 开始按钮图片 类型：（图片选择器）； 说明：设置中间开始按钮的图片； 背景图片 类型：（图片选择器）； 说明：设置背景显示的图片； 旋转时间 类型：数值； 值：示例：9000 说明：设置旋转的时间，单位为毫秒；默认值8000； 旋转圈数 类型：数值； 说明：设置转盘旋转的圈数，默认11； 事件处理程序 RotateStart 调用时机：点击按钮开始旋转时； 说明： RotateStop 调用时机：旋转停止时； 说明：在此事件中可通过属性SelectedData获取指针指向的区域数据； 属性、方法 ItemSource-属性，设置数据源； 说明：数组，text：显示文字；color：显示区块背景色；imgSrc：显示图片地址；fontColor：文字颜色；fontFamily：文字字体；fontStyle：文字字体样式； 示例： //TurnPlate为控件对象 TurnPlate.ItemSource = [{ text:\"9积分\", color:\"#FFF4D6\", imgSrc:\"1.png\", fontColor:\"#5b2aff\", fontFamily:\"Microsoft YaHei\", fontStyle:\"normal\" },{ text:\"5元代金券\", color:\"#FF6F55\", imgSrc:\"2.png\" },{ text:\"水壶\", color:\"#7AFF79\", imgSrc:\"1.png\" },……]; SelectedIndex-属性，设置选中项； 说明：数值，设置转盘停止后的选中项，取值从0开始，如不设置，默认选中随机值； 示例： TurnPlate.SelectedIndex = 1;//TurnPlate为控件对象 CanRotate-属性，设置是否可以旋转； 说明：布尔类型，设置转盘是否可以旋转； 示例： TurnPlate.CanRotate = true;//TurnPlate为控件对象 SelectedData-属性，获取旋转停止后指向区域的数据； 说明：对象；在RotateStop事件中可以获取到值； 示例： var data = TurnPlate.SelectedData;//TurnPlate为控件对象 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 15:01:22 "},"part2/lie-biao-kong-jian/jie-dian-liu-nodeflow.html":{"url":"part2/lie-biao-kong-jian/jie-dian-liu-nodeflow.html","title":"节点流 NodeFlow","keywords":"","body":"节点流 NodeFlow 设计属性 对象名称 类型：字符串； 说明：自定义控件对象名； 节点流方向 类型：（下拉选）； 说明：设置节点排列方向；可选值：横向、纵向； 属性、方法 ItemSource-属性，设置数据源； 说明：数组，Text:显示的文字；ImageUrl:显示的图片地址;Status：显示样式，default-灰色样式，默认值；highlight-高亮样式； 示例： //NodeFlow为控件对象 NodeFlow.ItemSource = [{\"Text\":\"2020/1/18\" , \"ImageUrl\":\"\" , \"Status\":\"\"}, {\"Text\":\"2020\" ,\"ImageUrl\":\"\",\"Status\":\"\" }]; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 15:11:40 "},"part2/aikong-jian.html":{"url":"part2/aikong-jian.html","title":"AI控件","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 15:15:54 "},"part2/ttskong-jian-texttospeech-pc.html":{"url":"part2/ttskong-jian-texttospeech-pc.html","title":"TTS控件TextToSpeech（PC）","keywords":"","body":"TTS控件TextToSpeech（PC） 作用：语音合成 百度语音合成接口 设计属性 对象名称 类型：字符串； 值： 说明：自定义控件对象名； 发音人 类型：（下拉选）； 值：默认值：普通女生； 说明：选择发音人，可选值：普通女生、普通男生、杜逍遥、杜丫丫; 语速 类型：数值； 值：默认值：5； 说明：取值0-15，默认为5中语速； 音调 类型：数值； 值：默认值：5； 说明：取值0-15，默认为5中语调； 音量 类型：数值； 值：默认值：5； 说明：取值0-15，默认为5中音量； 显示控制栏 类型：（单选框）； 值：默认：显示 说明： 属性、方法 Speak(t)-方法，语音合成； 说明：方法，参数t:字符串，需要合成语音的文字，控件调用此方法，传入需要合成的文字字符串。； 示例： //TextToSpeech为控件对象 TextToSpeech.Speak('hello'); Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 15:16:40 "},"part2/shu-ju-tu-biao.html":{"url":"part2/shu-ju-tu-biao.html","title":"数据图表","keywords":"","body":"HChart数据图表 基础教程：https://www.highcharts.com.cn/docs 图表基本组成： 数据源属性DataSource，类型：对象；基础数据结构： { //必需!显示数据-数组类型，绘制折线或柱状图的组数由数组元素个数决定； datas:[{ //图表分组名称 name: '安装，实施人员', //图表每组数据；某个数据点不绘制时，赋值为null； data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175] }, { name: '工人', data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434] }, { name: '销售', data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387] }, { name: '项目开发', data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227] }, { name: '其他', data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111] }], //可选参数；颜色序列，依次取值，循环使用；不给定则使用默认颜色系; //默认颜色系：['#7cb5ec', '#434348', '#90ed7d', '#f7a35c', '#8085e9', //'#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1'] colors:[\"#333\",\"#666\",\"#123\"], //可选参数；图表标题，可以在开发平台设计界面直接设置； title:\"图表标题\", //可选参数；图表副标题，可以在开发平台设计界面直接设置； subtitle:\"副标题\", //x轴显示文本数组； xLabels:[\"1月\",\"2月\",\"3月\",\"4月\",\"5月\",\"6月\",\"7月\",\"8月\"], //可选；x轴样式设置 xAxis: { //横坐标绘制间距 tickInterval: 1, //轴线颜色 lineColor:\"#333\", //轴线宽度 lineWidth:1, //坐标轴标签样式设置 labels:{ rotation:60,//x轴label旋转角度 style:{ color:\"#272d35\",//x轴label文字颜色； \"fontSize\": \"11px\", } }, }, //y轴标题 yTitle:\"y坐标\", //设定图例项的CSS样式。只支持有关文本的CSS样式设定。 默认是：{ \"color\": \"#333333\", \"cursor\": \"pointer\", \"fontSize\": \"12px\", \"fontWeight\": \"bold\" }. legend:{ itemStyle:{ fontSize:\"12px\" }, //设定每个图例项的宽度。当图例有很多图例项，并且用户想要这些图例项在同一平面内垂直对齐，此时这个属性可帮用户实现此效果。 itemWidth:\"80px\", //图例数据项的布局。布局类型： \"horizontal\" 或 \"vertical\" 即水平布局和垂直布局 默认是：horizontal. layout:'horizontal', // 图例容器是否可以浮动，当设置为浮动（true）时，图例将不占用绘图区空间，并可以层叠在图形上方。 默认是：false. floating:false, }, //可选；数据提示框样式；数据提示框指的当鼠标悬停在某点上时，以框的形式提示该点的数据 // tooltip: { //标题格式化 headerFormat: '{series.name}', //数据点格式化字符串 pointFormat: '{point.category}: {point.y} ', //背景色 backgroundColor:\"#272d35\", //边框颜色 borderColor:\"#fff\", //边框圆角半径 默认值3 borderRadius:3, //边框宽度，默认值1 borderWidth:1, //是否启用数据点提示框。 默认是：true. enabled: true, //是否使用HTML代码渲染提示框的内容用以代替SVG。使用HTML允许高级格式化，如在提示框中使用表格和图像。 默认是：false. useHTML: false, //数据提示框数据值小数保留位数。可以在每个数据列的 tooltip 对象中针对某个数据列单独设置。默认为保留所有小数。 valueDecimals:\"\", }, //可选；数据列配置 plotOptions: { // 仪表盘图表数据列样式 solidgauge: { //数据标签样式 dataLabels: { //是否显示 enabled: true, //数据标签格式化 formatter:function () { //this对存储当前数据列的相关信息 //this.percentage-当前数据列占总和的百分比 //this.point-点对象，this.point.name； //this.series-序列对象，this.series.name; // this.total-数据总和； // this.x-x值； // this.y-y值； return this.y+\"%\"; }, //边框宽度 borderWidth:0, //标签文字样式 style:{ fontSize:\"68px\", color:\"red\", fontWeight:\"bold\", textOutline:\"1px 1px contrast\", }, //水平对齐方式；可以用的值有 \"left\", \"center\" 或 \"right\"。 align:\"center\", //垂直对齐方式；可以用的值有 \"top\", \"middle\" 或 \"bottom\"。 verticalAlign:\"middle\", }, //线两端形状round-圆头、square-方形 linecap: 'square', stickyTracking: false } }, //可选；面板样式设置，只针对仪表盘图表和极地图； pane: { //极地图 x 轴或仪表图值轴的结束角度，为角度值，即 0 表示图形的正北方向。默认值为 0。 startAngle: 0, //极地图 x 轴或仪表图 y 轴（值轴）的结束角度，为角度值，即 0 表示图形的正北方向。默认值是在开始角度（ startAngle）的基础上 + 360度。 endAngle: 360, // 面板背景相关配置。 background: [{ //面板背景的内、外半径，可以是数值（像素） 或百分比字符串。 默认是：0 outerRadius: '100%', innerRadius: '88%', // 面板的背景颜色，可以是 渐变颜色。 backgroundColor: 'red', // 面板背景边框宽度 默认是：1. borderWidth: 0 }] }, } Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 14:02:20 "},"part2/shu-ju-tu-biao/zhe-xian-tu-chart-line.html":{"url":"part2/shu-ju-tu-biao/zhe-xian-tu-chart-line.html","title":"折线图 Chart_Line","keywords":"","body":"折线图 样式： 数据datas结构示例： [{ name: '安装，实施人员', data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175] }, { name: '工人', data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434] }, { name: '销售', data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387] }, { name: '项目开发', data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227] }, { name: '其他', data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111] }] 说明： 1、数组元素个数为折线条数； 2、不绘制的点值为null； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 14:04:46 "},"part2/shu-ju-tu-biao/zhu-xing-tu-chart-bar.html":{"url":"part2/shu-ju-tu-biao/zhu-xing-tu-chart-bar.html","title":"柱形图 Chart_Bar","keywords":"","body":"柱状图 数据源属性DataSource同折线图 1、柱状图 2、堆叠柱状图 3、百分比堆叠柱状图 4、条形图 5、堆叠条形图 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 14:08:39 "},"part2/shu-ju-tu-biao/bing-tu-chart-pie.html":{"url":"part2/shu-ju-tu-biao/bing-tu-chart-pie.html","title":"饼图 Chart_Pie","keywords":"","body":"饼图 数据源属性DataSource数据结构： { title:\"测试图表标题\",//图表标题，可以在设计界面直接设置； subtitle:\"这是副标题\",//图表副标题，可以在设计界面直接设置； //颜色序列，依次取值，循环使用；不给定则使用默认系 colors:[\"#333\",\"#666\",\"#123\"], //内环半径大小 默认为0，字符串，可以是百分数、**px值； innerSize:\"50%\", //显示数据-数组 datas: [{ name: 'Chrome', y: 61.41, sliced: true, selected: true }, { name: 'Internet Explorer', y: 11.84 }, { name: 'Firefox', y: 10.85 }, { name: 'Edge', y: 4.67 }, { name: 'Safari', y: 4.18 }, { name: 'Sogou Explorer', y: 1.64 }, { name: 'Opera', y: 1.6 }, { name: 'QQ', y: 1.2 }, { name: 'Other', y: 2.61 }] }; 饼图 环形图 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 14:11:18 "},"part2/shu-ju-tu-biao/mian-ji-tu-chart-area.html":{"url":"part2/shu-ju-tu-biao/mian-ji-tu-chart-area.html","title":"面积图 Chart_Area","keywords":"","body":"面积图 数据源属性DataSource同折线图 1、基础面积图（可包含负值、空值null） 2、堆叠面积图 3、百分比堆叠面积图 4、坐标轴反转的面积图 5、曲线面积图 6、面积范围图 数据源属性DataSource中数据datas结构： [ {name:\"某地白天气温变化\", data:[ [1388538000000, 1.1, 4.7],//横坐标，最低值，最高值 [1388624400000, 1.8, 6.4], [1388710800000, 1.7, 6.9] ] } ] 7、流图 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 14:16:46 "},"part2/shu-ju-tu-biao/san-dian-3001-qi-pao-tu-chart-scatterplot.html":{"url":"part2/shu-ju-tu-biao/san-dian-3001-qi-pao-tu-chart-scatterplot.html","title":"散点、气泡图 Chart_Scatterplot","keywords":"","body":"散点图及气泡图 1、散点图 数据属性DataSource结构： { datas:[{ name: '女', color: 'rgba(223, 83, 83, .5)', data: [[161.2, 51.6], [167.5, 59.0], [159.5, 49.2], [157.0, 63.0], [155.8, 53.6], [170.0, 59.0]……] },{ name: '男', color: 'rgba(213, 33, 83, .5)', data: [[161.2, 51.6], [167.5, 59.0], [159.5, 49.2], [157.0, 63.0], [155.8, 53.6], [170.0, 59.0]……] }] } 2、气泡图 数据属性DataSource结构： { datas: [{ name:'数据列 1', // 每个气泡包含三个值，x，y，z；其中 x，y用于定位，z 用于计算气泡大小 data: [[97, 36, 79], [94, 74, 60], [68, 76, 58], [64, 87, 56], [68, 27, 73], [74, 99, 42], [7, 93, 87], [51, 69, 40], [38, 23, 33], [57, 86, 31]] }, { name:'数据列 2', data: [[25, 10, 87], [2, 75, 59], [11, 54, 8], [86, 55, 93], [5, 3, 58], [90, 63, 44], [91, 33, 17], [97, 3, 56], [15, 67, 48], [54, 25, 81]] }, { name:'数据列 3', data: [[47, 47, 21], [20, 12, 4], [6, 76, 91], [38, 30, 60], [57, 98, 64], [61, 17, 80], [83, 60, 13], [67, 78, 75], [64, 12, 10], [30, 77, 82]] }] } Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 14:20:02 "},"part2/shu-ju-tu-biao/3dtu-chart-3d.html":{"url":"part2/shu-ju-tu-biao/3dtu-chart-3d.html","title":"3D图 Chart_3D","keywords":"","body":"3D图 1、3D饼图 数据属性DataSource结构： { datas:[{ type: 'pie', name: '浏览器占比', data: [ ['Firefox', 45.0], ['IE', 26.8], { name: 'Chrome', y: 12.8, sliced: true, selected: true }, ['Safari', 8.5], ['Opera', 6.2], ['Others', 0.7] ] }], title:\"测试饼图\" } 2、3D柱状图 数据属性DataSource结构： { datas:[{ name: '小张', data: [5, 3, 4, 7, 2], stack: 'male' }, { name: '小王', data: [3, 4, 4, 2, 5], stack: 'male' }, { name: '小彭', data: [2, 5, 6, 2, 1], stack: 'female' }, { name: '小潘', data: [3, 0, 4, 4, 3], stack: 'female' }], title:\"3D柱状图\" } Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 14:22:28 "},"part2/shu-ju-tu-biao/geojsonmap-geojsonmap.html":{"url":"part2/shu-ju-tu-biao/geojsonmap-geojsonmap.html","title":"GeoJSONMap  GeoJSONMap","keywords":"","body":"GeoJSON地图 作用：加载、展示GeoJSON格式的文件；可以自定义显示区域样式，处理点击事件； 效果示例： 数据源对象DataSource示例： { //数据源，需要显示的数据，必须！ datas:[ {name: '东方红农场', value: 1,aaa:[],bbb:{}}, {name: '丰收镇', value: 3}, {name: '新荒渔场', value: 1}, {name: '红岗子乡', value: 2}, {name: '太山镇', value: 2} ], //提示框个性设置 // tooltip:{ // trigger: 'item', // // formatter: '{b}{c}', // formatter: function (params) { // console.log(params.name+''+a); // var a = isNaN(params.value)?'':params.value; // return params.name+''+a; // }, // }, //显示文本样式设置 label:{ formatter:'{b}\\n{c}', formatter:function (params) { var a = isNaN(params.value)?'':params.value; return params.name+'\\n'+a; }, // backgroundColor:'blue', }, //加载地图当前视角的缩放比例，默认为1； zoom:1.2, //滚轮缩放极限 scaleLimit:{ //最小缩放比例，默认为1； min:2, //最大缩放比例，默认为5； max:8 }, //值域选择 dataRange:{ show:false, // 值域颜色标识，颜色数组长度必须>=2，颜色代表从数值高到低的变化，即颜色数组低位代表数值高的颜色标识 ，支持Alpha通道上的变化（rgba） color:['red','yellow','blue'], // 指定的最小值，eg: 0，默认无，必须参数，唯有指定了splitList时可缺省min。 min:0, // 指定的最大值，eg: 100，默认无，必须参数，唯有指定了splitList时可缺省max max:5, } }; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 14:30:29 "},"shi-jian-wei-tuo.html":{"url":"shi-jian-wei-tuo.html","title":"事件委托","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-01-28 15:16:04 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi.html","title":"过程控制","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 15:17:29 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/zhi-xing-xu-lie-sequence.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/zhi-xing-xu-lie-sequence.html","title":"执行序列 Sequence","keywords":"","body":"执行序列 Sequence 作用：代码块； 设计属性 活动标题 类型：字符串； 值：默认值：执行序列； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 16:17:04 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/tiao-jian-pan-duan-ifbranch.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/tiao-jian-pan-duan-ifbranch.html","title":"条件判断 IFBranch","keywords":"","body":"条件判断 IFBranch 作用：if-else条件判断； 设计属性 1、条件判断 IFBranch： 活动标题 类型：字符串； 值：默认值：条件判断； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 2、表达式 CExpressionBuilder： 活动标题 类型：字符串； 值：默认值：表达式； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 表达式设置 类型：（按钮）； 值： 说明：添加一个逻辑表达式； 选中某个表达式，对其进行编辑： 组合开始 类型：（单选框）； 说明：是否设置为组合开始； 项目名称 类型：字符串； 值： 说明： 比较方式 类型：（下拉选框）； 值： 说明：可选值：无、等于、大于、大于等于、小于、小于等于、不等于、开头于、包含、结尾于； 匹配值 类型：（按钮）； 说明：比较的值，可以为变量名，也可以为常量；常量默认为字符串类型，想要数值类型前面需加@； 组合结束 类型：（单选框）； 说明：是否设置为组合结束； 连接方式 类型：（下拉选框）； 说明：可选值：并且、或者、无； 添加表达式 类型：（按钮）； 说明：添加一个逻辑表达式； 删除表达式 类型：（按钮）； 说明：删除选中的表达式； 3、条件成立 Sequence：条件成立时执行的代码序列 活动标题 类型：字符串； 值：默认值：条件成立； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 4、条件不成立 Sequence：条件不成立时执行的代码序列 活动标题 类型：字符串； 值：默认值：条件不成立； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 08:16:10 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/ji-shu-xun-huan-for.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/ji-shu-xun-huan-for.html","title":"计数循环 For","keywords":"","body":"计数循环 For 作用：for循环； 设计属性 活动标题 类型：字符串； 值：默认值：计数循环； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 计数器初值 类型：数值； 值：默认值：0； 说明：循环计数器的起始值； 计数器限值 类型：数值； 值：默认值：10 说明：循环的最大值； 计数器增量 类型：数值； 值：默认值：1 说明： 计数器变量名 类型：字符串； 说明：默认值：i； 倒序执行 类型：（单选框）； 说明：是否倒序执行 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 16:35:27 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/tiao-jian-xun-huan-while.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/tiao-jian-xun-huan-while.html","title":"条件循环 While","keywords":"","body":"条件循环 While 作用：while循环； 设计属性 1、条件循环 While： 活动标题 类型：字符串； 值：默认值：条件循环； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 2、表达式 CExpressionBuilder： 活动标题 类型：字符串； 值：默认值：表达式； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 添加表达式 类型：（按钮）； 值： 说明：添加一个逻辑表达式； 选中某个表达式，对其进行编辑： 组合开始 类型：（单选框）； 说明：是否设置为组合开始； 项目名称 类型：字符串； 值： 说明： 比较方式 类型：（下拉选框）； 值： 说明：可选值：无、等于、大于、大于等于、小于、小于等于、不等于、开头于、包含、结尾于； 匹配值 类型：（按钮）； 说明：比较的值，可以为变量名，也可以为常量；常量默认为字符串类型，想要数值类型前面需加@；； 组合结束 类型：（单选框）； 说明：是否设置为组合结束； 连接方式 类型：（下拉选框）； 说明：可选值：并且、或者、无； 添加表达式 类型：（按钮）； 说明：添加一个逻辑表达式； 删除表达式 类型：（按钮）； 说明：删除选中的表达式； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 16:38:04 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/mei-ju-xun-huan-foreach.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/mei-ju-xun-huan-foreach.html","title":"枚举循环 ForEach","keywords":"","body":"枚举循环 ForEach 作用：foreach； 设计属性 活动标题 类型：字符串； 值：默认值：枚举循环 ； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 集合名称 类型：字符串； 说明：需要遍历的集合或者数组对象名； 项目名称 类型：字符串； 值：默认值：item 说明：集合每次遍历的元素； 数组对象 类型：（单选框）； 值：默认选中 说明：选中时，使用foreach遍历数组，break或者continue不可用；不选择时，使用for…in遍历对象。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 16:41:24 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/fen-zhi-chu-li-switchbranch.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/fen-zhi-chu-li-switchbranch.html","title":"分支处理 SwitchBranch","keywords":"","body":"分支处理 SwitchBranch 作用：switch-case分支判断； 设计属性 1、分支处理 SwitchBranch： 活动标题 类型：字符串； 值：默认值：分支选择； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 添加分支 类型：（按钮）； 说明：添加一个分支； 选择依据 类型：字符串 说明：通过什么值进行分支选择； 添加分支后，选择分支进行设置： 活动标题 类型：字符串； 值：默认值：执行序列； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 选定值 类型： 说明：和选择依据对比的值，可以是常量，也可以是变量，常量时默认为字符串格式，如为数值类型，数值常量前需加@符号； 2、默认分支处理：选择依据和选定值都没有对比成功后执行 活动标题 类型：字符串； 值：默认值：默认分支处理； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 16:48:09 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/yi-chang-chu-li-try-catch.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/yi-chang-chu-li-try-catch.html","title":"异常处理 try…catch","keywords":"","body":"异常处理 作用：try-catch语法，用于捕获代码异常； 设计属性 异常处理 try 类型：（活动序列）； 说明：把不确定是否会出错的活动序列放到这里执行，出现异常时可以在异常捕获catch处拿到异常信息； 异常捕获 Catch 类型：（活动序列）； 说明：捕获到异常处理中的异常信息，拿到异常信息对象ex。可以通过UI组件“用户提示框”在屏幕显示，提示内容中填写@ex.toString(); 备注：建议把操作放到“异常处理”里面执行，可以在出现错误时及时查看错误信息。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 08:11:57 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/pao-chu-yi-chang-throw.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/pao-chu-yi-chang-throw.html","title":"抛出异常 Throw","keywords":"","body":"抛出异常 Throw 作用：抛出异常信息 设计属性 活动标题 类型：字符串； 值：默认值：抛出异常； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 16:52:57 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/tui-chu-xun-huan-break.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/tui-chu-xun-huan-break.html","title":"退出循环 Break","keywords":"","body":"退出循环 Break 作用：退出当前循环，用于技术循环、条件循环，不能退出枚举循环； 设计属性 活动标题 类型：字符串； 值：默认值：退出循环； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 16:54:27 "},"shi-jian-wei-tuo/guo-cheng-kong-zhi/zhong-zhi-fan-hui-return.html":{"url":"shi-jian-wei-tuo/guo-cheng-kong-zhi/zhong-zhi-fan-hui-return.html","title":"终止返回 Return","keywords":"","body":"终止返回 Return 作用：return关键字； 设计属性 活动标题 类型：字符串； 值：默认值：终止返回； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 返回对象 类型：数值； 值：示例：@name 说明：可以不填写，终止执行过程；填写的内容默认当字符串处理，如为变量名，前面需要加@符号。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 16:56:56 "},"shi-jian-wei-tuo/ji-ben-cao-zuo.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo.html","title":"基本操作","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 13:16:49 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/bian-liang-ding-yi-defvars.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/bian-liang-ding-yi-defvars.html","title":"变量定义 DefVars","keywords":"","body":"变量定义 DefVars 作用：定义变量及为变量赋值； 设计属性 活动标题 类型：字符串； 值：默认值：变量定义； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 新增变量 类型：（按钮）； 值： 说明：点击按钮增加定义的变量。点击定义变量后“>”可以展开创建的所有变量； 选中某个变量，就可以对定义的变量进行设置： 变量名称 类型：字符串； 说明：对新增的变量命名。命名规则：变量名只能是字母(a-z A-Z)，数字(0-9)，下划线(_)的组合，并且之间不能包含空格，数字不能放在变量名首位，不能使用JavaScript语言的保留字； 数据类型 类型：下拉选框； 说明：可选值：字符串、整型、数值、日期、日期时间、布尔、对象； 默认值 类型： 说明：为变量设置默认值； 变量注释 类型：字符串； 说明：为所定义变量添加注释； 新增变量 类型：（按钮）； 说明：新创建一个变量； 删除变量 类型：（按钮）； 说明：删除选中变量； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 08:17:57 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/bian-liangfu-zhi-assignvars.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/bian-liangfu-zhi-assignvars.html","title":"变量赋值 AssignVars","keywords":"","body":"变量赋值 AssignVars 作用： 设计属性 活动标题 类型：字符串； 值：默认值：变量赋值； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 变量名称 类型：字符串； 示例：var a; 说明：对新增的变量命名。命名规则：变量名只能是字母(a-z A-Z)，数字(0-9)，下划线(_)的组合，并且之间不能包含空格，数字不能放在变量名首位，不能使用JavaScript语言的保留字； 变量值 类型： 示例：@hello world 说明：为变量赋值，默认作为字符串处理，如果想获取原数据类型，前面加‘@’转义； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 08:51:41 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/fang-fa-diao-yong-invokemethod.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/fang-fa-diao-yong-invokemethod.html","title":"方法调用 InvokeMethod","keywords":"","body":"方法调用 InvokeMethod 作用：调用方法； 设计属性 1、方法调用： 活动标题 类型：字符串； 值：默认值：方法调用； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 实例名称 类型：字符串； 值：示例：Button； 说明：调用方法的实例名； 方法名称 类型：字符串； 值：示例：Click 说明：方法名； 2、参数列表： 添加参数 类型：（按钮）； 值： 说明：点击添加参数； 选中添加到参数列表的某个参数，即可对参数进行设置： 参数名称 类型：字符串； 值： 说明：变量名命名规则同变量定义中“变量名称”说明中的规则。 数据类型 类型：（下拉选框）； 值： 说明：可选值：字符串、整型、数值、日期、日期时间、布尔、对象； 默认值 类型： 说明：参数的默认值； 参数注释 类型：字符串； 说明：为参数添加注释说明，方便查阅代码； 新增参数 类型：（按钮）； 说明：新增一个参数； 删除参数 类型：（按钮）； 说明：删除所选参数； 3、调用成功回调过程： 活动标题 类型：字符串； 值：默认值：调用成功回调过程； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 08:52:51 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/jsonzhuan-dui-xiang-json2object.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/jsonzhuan-dui-xiang-json2object.html","title":"JSon转对象 Json2Object","keywords":"","body":"JSon转对象 Json2Object 作用：将JSON格式字符串转成对象； 设计属性 活动标题 类型：字符串； 值：默认值：Json2Object； 说明： 活动注释 类型：字符串； 说明：对活动的说明； JSon变量 类型：字符串； 说明：JSON格式字符串变量名； 对象变量 类型：字符串 说明：转换成的对象变量名； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 08:58:32 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/dui-xiang-zhuan-jsonobject2json.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/dui-xiang-zhuan-jsonobject2json.html","title":"对象转JSon  Object2JSon","keywords":"","body":"对象转JSon Object2JSon 作用：将JSON格式对象转成字符串类型； 设计属性 活动标题 类型：字符串； 值：默认值：Json2Object； 说明： 活动注释 类型：字符串； 说明：对活动的说明； 对象变量 类型：字符串； 说明：对象变量名； JSon变量 类型：字符串 说明：转换成的JSON格式字符串变量名； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 08:58:32 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/dang-qian-kong-jian-thiscontrol.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/dang-qian-kong-jian-thiscontrol.html","title":"当前控件 ThisControl","keywords":"","body":"当前控件 ThisControl 作用：获取事件触发者-执行此事件的控件对象； 说明 ：触发当前事件的控件对象，属性包括“表单上下文对象formContext”； 设计属性 活动标题 类型：字符串； 值：默认值：thisControl； 说明： 活动注释 类型：字符串； 说明：对活动的说明； 对象变量 类型：字符串； 默认值:thisControl； 说明：对象变量名，变量的值为cmd.Sender； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 09:34:49 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/biao-dan-shang-xia-wen-formcontext.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/biao-dan-shang-xia-wen-formcontext.html","title":"表单上下文 FormContext","keywords":"","body":"表单上下文 FormContext 作用：获取执行此事件的控件所在的表单（页面）上下文对象； 说明：属性包括“当前表单对象thisForm”和表单上设置了“数据属性”的控件的“数据属性”。 设计属性 活动标题 类型：字符串； 值：默认值：formContext； 说明： 活动注释 类型：字符串； 说明：对活动的说明； 对象变量 类型：字符串； 默认值:formContext； 说明：对象变量名，存储值cmd.Sender.FormContext； 备注：对于指定类型控件（文本输入框、多行文本框、密码输入框、日期选择控件PC、下拉列表框），设置了“数据属性”或者“数据域”名，就可以通过表单上下文对象取值。例如：文本输入框设置了“数据属性”名为name，就可以通过formContext.name获取这个文本输入框的值；多个指定类型控件设置了相同的“数据域”为data，则可以通过formContext.data获取这些控件的“数据属性—数据值”组成的对象。不同控件的数据属性不要设置相同名字。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 09:34:49 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/dang-qian-biao-dan-thisform.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/dang-qian-biao-dan-thisform.html","title":"当前表单 ThisForm","keywords":"","body":"当前表单 ThisForm 作用：获取执行此事件的控件所在的表单（页面）对象； 说明：属性DataContext，用于设置/获取当前表单的数据上下文对象，表单中控件的“绑定路径”就是通过数据上下文获取的值；属性“控件集合对象formControls”。 设计属性 活动标题 类型：字符串； 值：默认值：thisForm； 说明： 活动注释 类型：字符串； 说明：对活动的说明； 对象变量 类型：字符串； 默认值:thisForm； 说明：对象变量名，存储值：cmd.Sender.FormContext.Form； 备注：可以通过thisForm.DataContext获取表单上下文对象，对于指定类型控件（文本输入框、多行文本框、密码输入框、日期选择控件PC、下拉列表框），设置了“数据属性”和“绑定路径”名，就可以通过表单上下文对象取值。例如：文本输入框设置了“数据属性”和“绑定路径”名为name，就可以通过thisForm.DataContext.name获取这个文本输入框的值。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 09:34:49 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/biao-dan-ming-ming-kong-jian-ji-he-formcontrols.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/biao-dan-ming-ming-kong-jian-ji-he-formcontrols.html","title":"表单命名控件集合 FormControls","keywords":"","body":"表单命名控件集合 FormControls 作用：获取执行此事件的控件所在的表单（页面）对象的属性控件集合对象； 说明：当前表单对象的一个属性，对象类型，可以通过formControls.自定义控件名 获取当前表单中已命名的控件对象。 设计属性 活动标题 类型：字符串； 值：默认值：formControls； 说明： 活动注释 类型：字符串； 说明：对活动的说明； 对象变量 类型：字符串； 默认值:formControls； 说明：对象变量名，变量的值为：cmd.Sender.FormContext.Form.FormControls； 备注：通过FormControls可以获取页面上已命名的控件。例如：页面上的控件设置了“对象名称”为tbx，那么可以通过formControls.tbx获取到这个控件对象，然后通过控件对象可以进行方法调用。属性赋值、取值等操作。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 09:34:49 "},"shi-jian-wei-tuo/ji-ben-cao-zuo/thiscontrolthisformformcontextformcontrolsguan-xi.html":{"url":"shi-jian-wei-tuo/ji-ben-cao-zuo/thiscontrolthisformformcontextformcontrolsguan-xi.html","title":"thisControl/thisForm/formContext/formControls关系","keywords":"","body":"thisControl/thisForm/formContext/formControls关系 相同点：只有在控件的事件里才能获取到； 注：在集成控件（ListView、DataGridView）的事件处理中，这四个变量需要重新定义，根据事件的触发者对象所在的层级进行查找定义！ Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 09:34:49 "},"shi-jian-wei-tuo/uizu-jian.html":{"url":"shi-jian-wei-tuo/uizu-jian.html","title":"UI组件","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 13:16:49 "},"shi-jian-wei-tuo/uizu-jian/yong-hu-ti-shi-kuang-confirmdialog.html":{"url":"shi-jian-wei-tuo/uizu-jian/yong-hu-ti-shi-kuang-confirmdialog.html","title":"用户提示框 ConfirmDialog","keywords":"","body":"用户提示框 ConfirmDialog 作用：填出提示框，显示信息和用户交互； 设计属性 活动标题 类型：字符串； 值：默认值：用户确认对话框； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 窗口标题 类型：字符串； 默认值：消息提示框 说明：弹出框的标题； 提示内容 类型：字符串； 默认值：提示内容 说明：作为提示框主体内容出现，默认作为字符串处理；如取变量的值或值默认类型，则需填写：@进行转义； 提示类型 类型：（下拉选框）； 说明：可选值：消息提示、选择提示、警告提示、错误提示； 提示图标 类型：（下拉选框） 说明：可选值：未设置、消息图标、提问图标、警告图标、错误图标； 按钮1文本 类型：字符串； 说明：默认值：确定； 按钮2文本 类型：（按钮）； 说明：默认值：取消，只有在提示类型为“选择提示”时才会显示按钮2； 回调函数参数： dialogresult 类型：数值； 说明：这个属性的值在“用户确认对话框”的内部活动中可以拿到,数值类型；值为0时，点击了“按钮2”，值为1时，点击了“按钮1”； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 10:46:59 "},"shi-jian-wei-tuo/uizu-jian/jia-zai-ui-loadform.html":{"url":"shi-jian-wei-tuo/uizu-jian/jia-zai-ui-loadform.html","title":"加载UI  LoadForm","keywords":"","body":"加载UI LoadForm 作用：加载界面资源，显示界面； 设计属性 活动标题 类型：字符串； 值：默认值：加载表单； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； UI资源 类型：字符串； 说明：需要加载显示的功能组件的资源路径值； UI标题 类型：字符串； 说明：展现的功能组件显示的导航栏标题； 显示模式 类型：数值； 数值：示例：0； 说明：0：视图控制器加载（整个页面覆盖，显示界面标题栏）； 1：大尺寸设备停靠管理器加载模式（只限PC端使用）； 2：弹出式窗口加载模式； 3：整体页面切换模式（无返回按钮和功能组件标题）； 4：大尺寸设备停靠管理器加载模式（只限PC端使用,会调用已加载界面的Load事件！！）； 5：弹出窗口模式，会把弹出界面的控件居中显示（注：所有的控件需要布局到一个容器中，弹出窗口的背景色就是弹出界面所设置的背景色）； 6：和模式0类似，不显示界面标题栏； 7：表单替换（注：新加载的表单会完全替换现有表单进行显示）； 注：不填写默认为0；其他数字则无效果，不会展示新的页面。 上下文对象 类型： 说明：设置需要传递的上下文对象名或者值； 回调函数参数： uiview 类型：加载页面的表单对象； 说明：在加载表单的“调用成功”序列里可以直接获取； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 09:59:25 "},"shi-jian-wei-tuo/uizu-jian/hui-tuiye-mian-uiviewpagegoback.html":{"url":"shi-jian-wei-tuo/uizu-jian/hui-tuiye-mian-uiviewpagegoback.html","title":"回退页面 UIViewPageGoBack","keywords":"","body":"回退页面 UIViewPageGoBack 作用：退回到上一层页面； 设计属性 活动标题 类型：字符串； 值：默认值：退回到上一层页面； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 10:01:02 "},"shi-jian-wei-tuo/uizu-jian/tiao-ma-sao-miao-scanbarcode.html":{"url":"shi-jian-wei-tuo/uizu-jian/tiao-ma-sao-miao-scanbarcode.html","title":"条码扫描 ScanBarCode","keywords":"","body":"条码扫描 ScanBarCode 作用：扫描条码，识别条码内容； 设计属性 活动标题 类型：字符串； 值：默认值：条码扫描； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： barcode 类型：字符串； 说明：barcode在扫描条形码“在此处放置活动”执行序列可以获取到。获取的为字符串类型。如果为JSON格式字符串，可通过JSON.parse(barcode)转成JSON对象； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 10:05:38 "},"shi-jian-wei-tuo/uizu-jian/tu-pian-xuan-zeimagepicker-app.html":{"url":"shi-jian-wei-tuo/uizu-jian/tu-pian-xuan-zeimagepicker-app.html","title":"图片选择 ImagePicker（App）","keywords":"","body":"图片选择 ImagePicker（App） 作用：选择本地图片进行上传； 设计属性 活动标题 类型：字符串； 值：默认值：图片选择； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 上传地址 类型：字符串； 示例：示例：https://wfs.dbazure.cn/wfs.ashx?AppId=应用标识&UId=用户标识&OwnerId=组标识（请求参数AppId必填，UId、OwnerId必填至少一项。） 说明：必填！图片上传的服务器地址； 模式 类型：（下拉选框）； 说明：可选值：未设置、选择图片、拍摄图片、裁剪图片； 注：如设置“未设置”，则弹出选择界面，可以点击相应按钮进入相应的上传模式 图片宽度 类型：字符串； 数值：示例：300px； 说明：设置上传图片的宽度； 图片高度 类型：字符串 示例：300px； 说明：设置上传图片的高度； 裁剪方式 类型：（下拉选框）； 说明：可选值：不裁剪、矩形裁剪、圆形裁剪 裁剪比例 类型：（下拉选框）； 说明：可选值：等比裁剪、任意裁剪； 回调函数参数： resp 类型：字符串； 说明：获取上传成功后的返回值-resp，可以在图片选择内的执行序列中获取到resp的值，然后分析数据，获取到图片地址; 解析上传成功的图片地址示例： var data = JSON.parse(resp); data = JSON.parse(data.serverResponseMessage); var imageUrl = data[0].Url; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 10:36:48 "},"shi-jian-wei-tuo/uizu-jian/tui-song-ping-taixiao-xi-pushnotification.html":{"url":"shi-jian-wei-tuo/uizu-jian/tui-song-ping-taixiao-xi-pushnotification.html","title":"推送平台消息 PushNotification","keywords":"","body":"推送平台消息 PushNotification 作用：向指定的用户推送消息，通过设置“推送模式”发送不同类型的消息；通过设置“提醒方式”，使用声音、震动等方式提醒接收消息用户；在页面放置“消息监听器”控件，监听指定类型的消息，进行相应的业务操作（例如：刷新页面显示数据、控制控件的显示等）。 消息推送流程： 设计属性 用户Id 类型：数组； 说明：砚台用户的_id集合,向指定用户推送消息； 消息标题 类型：字符串； 说明：消息模式m=1时是必填项目，否则可以不设置此属性； 消息内容 类型：字符串； 说明：消息模式m=1时必填，否则可以不设置此属性； 消息Id 类型：字符串； 说明：消息类型编号，客户端可监听某一类型的消息并处理； 应用Id 类型：字符串； 说明：应用标识 ，向某一应用程序推送消息； 推送模式 类型：数值 说明：0--不需要显示到设备的本地消息， 1—需要显示到设备的本地消息，2-PC端弹出消息列表，3-PC端语音播放消息； 提醒方式 类型：数值； 说明：0—无声音、无震动、无闪光 1—声音 2—震动 3—闪光灯 4—声音震动 5—声音、震动、闪光； 用户数据 类型：对象； 说明：用户自定义的其它数据，开发者可根据需要定义一些内容； 消息结构说明： Msg = { m:0, //消息模式 0--不需要显示到设备的本地消息 1—需要显示到设备的本地消息 f:0, //提醒方式 0—无声音、无震动、无闪光 1—声音 2—震动 3—闪光灯 4—声音震动 5—声音、震动、闪光 title:'消息标题', //消息标题 消息模式m=1时是必填项目，否则可以不设置此属性 body:'消息内容', //消息内容 消息模式m=1时必填，否则可以不设置此属性 badge:0, //消息标识 用于显示在应用图标右上角的标记数量 appid:'', //应用标识 向某一应用程序推送消息 msgid:'', //消息类型编号 客户端可监听某一类型的消息并处理 ud:{} //此属性为用户自定义的其它数据，开发者可根据需要定义一些内容 } Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 10:38:19 "},"shi-jian-wei-tuo/uizu-jian/xiao-xi-ti-shi-kuang-alertbox.html":{"url":"shi-jian-wei-tuo/uizu-jian/xiao-xi-ti-shi-kuang-alertbox.html","title":"消息提示框 AlertBox","keywords":"","body":"消息提示框 AlertBox 设计属性 提示消息 类型：字符串； 说明：提示的消息内容，可以是符合H5规范的文档字符串。 展示图片 类型：(图片选择器)； 说明：提示框展示的图片，动图用gif格式图片。图片最大显示宽高：50px*50px； 展示时间 类型：数值； 说明：提示框展示的毫秒数，默认值3000； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 10:40:49 "},"shi-jian-wei-tuo/uizu-jian/shu-ju-dao-ru-importdata.html":{"url":"shi-jian-wei-tuo/uizu-jian/shu-ju-dao-ru-importdata.html","title":"数据导入 ImportData","keywords":"","body":"数据导入 ImportData 作用：将Excel表格数据导入到数据库的数据表中； 设计属性 活动标题 类型：字符串； 值：默认值：数据导入； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 数据源标题 类型：字符串； 默认值：默认：数据导入； 说明：为加载文件界面起一个标题； 服务地址 类型：字符串； 说明：数据库所在服务器地址，不能为空和undefined； 服务资源 类型：字符串； 示例：DB.FX.Storage.MongoDBService； 说明：服务器配置的服务资源名； 存储服务 类型：字符串； 示例：DBAzure； 说明：服务器配置的存储服务名； 数据库 类型：字符串； 示例：DB_Test； 说明：操作的数据库名； 存储过程 类型：字符串； 示例：SP………； 说明：存储数据调用的存储过程名； 批次行数 类型：数值； 示例：300； 说明：每次导入的数据条（行）数，大于1时，存储过程的第一个参数为行数据对象集合；默认为1，每次导入一条数据，存储过程参数为单值对象； 列名集合 类型：数组； 示例：[“a”,”b”,”c”]； 说明：Excel表格每一列数据存储到数据库时的列名，按顺序填写； 附加数据 类型：对象； 示例：ExData； 说明：数据导入操作的附加数据对象,作为存储过程第二个参数传入，可选； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 13:25:56 "},"shi-jian-wei-tuo/uizu-jian/shu-ju-dao-chu-exportdata.html":{"url":"shi-jian-wei-tuo/uizu-jian/shu-ju-dao-chu-exportdata.html","title":"数据导出 ExportData","keywords":"","body":"数据导出 ExportData 作用：将数据库的数据，通过存储过程查询后导出到Excel文件； 设计属性 活动标题 类型：字符串； 值：默认值：数据导出； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 数据标题 类型：字符串； 默认值：默认：数据导出； 说明：导出数据时的页面显示标题； 服务地址 类型：字符串； 说明：数据库所在服务器地址，不能为空和undefined； 服务资源 类型：字符串； 示例：DB.FX.Storage.MongoDBService； 说明：服务器配置的服务资源名； 存储服务 类型：字符串； 示例：DBAzure； 说明：服务器配置的存储服务名； 数据库 类型：字符串； 示例：DB_Test； 说明：操作的数据库名； 存储过程 类型：字符串； 示例：SP………； 说明：存储数据调用的存储过程名； 参数对象 类型：对象； 示例：@{}； 说明：查询数据需要的参数对象，会以JSON字符串的格式传入到存储过程的第一个参数；； Excel表名 类型：字符串； 示例：导出数据.csv； 说明：生成的Excel表格的文件名(带有文件类型后缀)； 表头集合 类型：字符串； 示例：'colum1', 'colum2','colum3','colum4','colum5'； 说明：生成表格的第一行列名，各列名之间用逗号（英文输入法下的逗号）分隔； 列名结合 类型：数组； 示例：@[\"Column1\",\" Column2\",\" Column3\",\" Column4\",\" Column5\"]； 说明：每列数据在所对应的列名，按照顺序填写，填写的顺序就是导出到表格后列的顺序； 存储过程编写要求 存储过程接收参数： 1、QParams-JSON格式字符串，查询需要的参数对象； 2、cp-数值，当前查询的页数，从1开始； 3、skipC-数值，已导出的数据行数； 存储过程需要返回对象： 示例：{Pager:{PageCount:5,RowCount:1000},Items:[{},{}]} Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 11:19:50 "},"shi-jian-wei-tuo/fa-song-dian-zi-you-jian-sendmail.html":{"url":"shi-jian-wei-tuo/fa-song-dian-zi-you-jian-sendmail.html","title":"发送电子邮件 SendMail","keywords":"","body":"发送电子邮件 SendMail 设计属性 活动标题 类型：字符串； 值：默认值：发送电子邮件； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 发件人 类型：字符串； 值：示例：123456@qq.com； 说明：发件人的邮箱账号； 收件人 类型：字符串； 值：示例：456789@qq.com； 说明：收件人的邮箱账号； Smtp主机 类型：字符串； 值：示例：smtp.qq.com； 说明：输入 SMTP/POP3服务器的 IP 地址或主机名。最多可以包含 32 个字符； Smtp端口 类型：字符串； 示例：示例:587； 说明：输入 SMTP 的端口号； 服务账号 类型：字符串； 值： 说明：发送人的邮箱账号，输入用户名以登录到 SMTP 服务器。最多可以包含 32 个字符。 服务密码 类型：字符串； 值： 说明：输入密码以登录到 SMTP 服务器。邮箱需要开启“POP3/SMTP服务”，开启服务时获取的服务密码。 邮件标题 类型：字符串； 说明：邮件标题； 邮件内容 类型：字符串； 说明：邮件内容； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 12:46:41 "},"shi-jian-wei-tuo/webfu-wu-diao-yong-invokewebservice.html":{"url":"shi-jian-wei-tuo/webfu-wu-diao-yong-invokewebservice.html","title":"Web服务调用 InvokeWebService","keywords":"","body":"Web服务调用 InvokeWebService 设计属性 1、调用Web服务： 活动标题 类型：字符串； 值：默认值：调用Web服务； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 服务地址 类型： 值： 说明： Web方法 类型： 值： 说明： EvTemplate 类型： 值： 说明： 处理程序 类型：（下拉选框）； 值： 说明：可选值：未设置、JSON处理程序、XML处理程序； 2、参数列表 添加参数 类型：（按钮）； 值： 说明：点击添加参数； 选中添加到参数列表的某个参数，即可对参数进行设置： 参数名称 类型：字符串； 说明：变量名命名规则同变量定义中“变量名称”说明中的规则； 数据类型 类型：（下拉选框）； 说明：可选值：字符串、整型、数值、日期、日期时间、布尔、对象； 默认值 类型： 说明：参数的值； 参数注释 类型：字符串； 说明：为参数添加注释说明，方便查阅代码； 新增参数 类型：（按钮）； 说明：新增一个参数； 删除参数 类型：（按钮）； 说明：删除所选参数； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 13:04:06 "},"shi-jian-wei-tuo/yun-fu-wu-diao-yong-invokesvcbus.html":{"url":"shi-jian-wei-tuo/yun-fu-wu-diao-yong-invokesvcbus.html","title":"云服务调用 InvokeSvcBus","keywords":"","body":"云服务调用 InvokeSvcBus 设计属性 1、云服务调用： 活动标题 类型：字符串； 值：默认值：云服务调用； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 服务资源 类型：字符串 值：示例：DB.FX.Storage.MongoDBService 说明： 服务方法 类型： 值： 说明： 处理程序 类型：（下拉选框）； 值： 说明：可选值：未设置、JSON处理程序、XML处理程序； 2、参数列表 添加参数 类型：（按钮）； 值： 说明：点击添加参数； 选中添加到参数列表的某个参数，即可对参数进行设置： 参数名称 类型：字符串； 说明：变量名命名规则同变量定义中“变量名称”说明中的规则； 数据类型 类型：（下拉选框）； 说明：可选值：字符串、整型、数值、日期、日期时间、布尔、对象； 默认值 类型： 说明：参数的值； 参数注释 类型：字符串； 说明：为参数添加注释说明，方便查阅代码； 新增参数 类型：（按钮）； 说明：新增一个参数； 删除参数 类型：（按钮）； 说明：删除所选参数； 3、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 4、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 13:08:37 "},"shi-jian-wei-tuo/shu-ju-fu-wu-diao-yong-invokedasvc.html":{"url":"shi-jian-wei-tuo/shu-ju-fu-wu-diao-yong-invokedasvc.html","title":"数据服务调用 InvokeDASvc","keywords":"","body":"数据服务调用 InvokeDASvc 作用：前端页面和数据库交互。 设计属性 1、数据访问服务调用： 活动标题 类型：字符串； 值：默认值：数据导入； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 服务地址 类型：字符串； 说明：数据库所在服务器地址，不能为空和undefined； 服务资源 类型：字符串； 示例：DB.FX.Storage.MongoDBService； 说明：服务器配置的服务资源名，1、MongoDB数据库：DB.FX.Storage.MongoDBService；2、SQL数据库：DBSoft.AppService.DASqlService 存储服务 类型：字符串； 示例：DBAzure； 说明：服务器配置的存储服务名； 数据库 类型：字符串； 示例：DB_Test； 说明：操作的数据库名； 存储过程 类型：字符串； 示例：SP………； 说明：存储数据调用的存储过程名； 2、参数列表 添加参数 类型：（按钮）； 值： 说明：点击添加参数； 选中添加到参数列表的某个参数，即可对参数进行设置： 参数名称 类型：字符串； 说明：变量名命名规则同变量定义中“变量名称”说明中的规则； 数据类型 类型：（下拉选框）； 说明：可选值：字符串、整型、数值、日期、日期时间、布尔、对象； 默认值 类型： 说明：参数的值； 参数注释 类型：字符串； 说明：为参数添加注释说明，方便查阅代码； 新增参数 类型：（按钮）； 说明：新增一个参数； 删除参数 类型：（按钮）； 说明：删除所选参数； 3、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 4、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： daresp 类型：对象； 说明：属性：DataObj-存储过程执行成功时，获取存储过程返回值；Exception-存储过程执行失败的错误原因； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 13:25:56 "},"shi-jian-wei-tuo/wai-bu-jie-kou-zu-jian.html":{"url":"shi-jian-wei-tuo/wai-bu-jie-kou-zu-jian.html","title":"外部接口组件","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 15:28:59 "},"shi-jian-wei-tuo/wei-xin-tong-yixia-dan-wxpayunifiedorder.html":{"url":"shi-jian-wei-tuo/wei-xin-tong-yixia-dan-wxpayunifiedorder.html","title":"微信统一下单 WxPayUnifiedOrder","keywords":"","body":"微信统一下单 WxPayUnifiedOrder 作用：生成用于微信支付的订单； 设计属性 1、微信统一下单： 活动标题 类型：字符串； 值：默认值：微信统一下单； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； App Id 类型：字符串； 说明：微信开放平台审核通过的移动应用APPID； 公众号Id 类型：字符串； 说明：微信公众平台审核通过的公众号APPID； MchId 类型：字符串； 示例：DBAzure； 说明：微信支付分配的商户号，需与APPID签约绑定关系； SubAppId 类型：字符串； 说明：子应用APPID，可不填； SubMchId 类型：字符串； 说明：子商户号，可不填； 签名密钥 类型：字符串； 值： 说明：签名密钥； 交易类型 类型：字符串； 值： 说明：可选类型： APP：微信App支付； JSAPI：微信公众号支付； NATIVE：微信后台系统返回链接参数code_url，商户后台系统将code_url值生成二维码图片，用户使用微信客户端扫码后发起支付；注意： code_url有效期为2小时，过期后扫码不能再发起支付。 订单号 类型：字符串； 说明：用于支付的商户订单号； 支付金额 类型：数值； 示例:@0.01； 说明：设置支付金额； 备注 类型：字符串； 示例：测试支付订单； 说明：微信支付界面的显示信息，商品信息。不能为空； 操作员 类型：字符串； 示例：收银员； 说明：填写操作员信息； 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： resp-获取下单信息对象 类型：对象； 说明：在“调用成功”和“调用失败”中可以获取下单信息对象resp。订单信息对象属性Data对象包含“二维码收款数据Code_Url”等属性； 结构： { Data:{Code_Url: \"weixin://wxpay/bizpayurl?pr=pdggfdB\", MPSignCode: \"E0AB754F4A\", Prepay_Id: \"wx21140e5af1701684700\", SignCode: \"DACDA17DA\", Trade_Type: \"NATIVE\", nonce_str: \"43b578b20\", package: \"Sign=WXPay\", timestamp: \"1590041060\"}, Exception: \"\", State: \"0\", XmlData: \"\" } Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 14:20:41 "},"shi-jian-wei-tuo/wei-xin-sao-ma-zhi-fu-wxpay.html":{"url":"shi-jian-wei-tuo/wei-xin-sao-ma-zhi-fu-wxpay.html","title":"微信扫码支付 WxPay","keywords":"","body":"微信扫码支付 WxPay 作用：商家生成订单后，扫描顾客付款二维码进行收款； 设计属性 1、微信支付： 活动标题 类型：字符串； 值：默认值：微信支付； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； App Id 类型：字符串； 说明：微信开放平台审核通过的移动应用APPID； 公众号Id 类型：字符串； 说明：微信公众平台审核通过的公众号APPID； MchId 类型：字符串； 示例：DBAzure； 说明：微信支付分配的商户号，需与APPID签约绑定关系； SubAppId 类型：字符串； 说明：子应用APPID，可不填； SubMchId 类型：字符串； 说明：子商户号，可不填； 签名密钥 类型：字符串； 值： 说明：签名密钥； 交易类型 类型：字符串； 值： 说明：可选类型： APP：微信App支付； JSAPI：微信公众号支付； NATIVE：微信后台系统返回链接参数code_url，商户后台系统将code_url值生成二维码图片，用户使用微信客户端扫码后发起支付；注意： code_url有效期为2小时，过期后扫码不能再发起支付。 订单号 类型：字符串； 说明：用于支付的商户订单号； 支付金额 类型：数值； 示例:@0.01； 说明：设置支付金额； 备注 类型：字符串； 示例：测试支付订单； 说明：微信支付界面的显示信息，商品信息。不能为空； 操作员 类型：字符串； 示例：收银员； 说明：填写操作员信息； 支付码 类型：字符串； 值：示例:@barcode； 说明：扫描客户付款码获取的值，通过“条码扫描”组件获取。 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： payinfo-获取支付信息对象 类型：对象； 说明：在“调用成功”和“调用失败”中可以获取支付信息对象payinfo。支付信息对象属性JSonData对象包含“交易编号”、“订单号”、“支付金额”属性。 结构： //transaction_id:交易编号； //OrderId：订单号； //TotalFee：支付金额； {\"JSonData\":{\"transaction_id\": \"42000003082019……\", \"OrderId\":\"234123123123\", \"TotalFee\":0.01},\"Exception\":\"\",\"State\":0}; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 15:43:11 "},"shi-jian-wei-tuo/wei-xin-zhi-fucha-xun-wxpayquery.html":{"url":"shi-jian-wei-tuo/wei-xin-zhi-fucha-xun-wxpayquery.html","title":"微信支付查询 WxPayQuery","keywords":"","body":"微信支付查询 WxPayQuery 作用：用于查询微信支付订单的信息； 设计属性 1、微信支付： 活动标题 类型：字符串； 值：默认值：微信支付； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； App Id 类型：字符串； 说明：应用APPID； Saller 类型：字符串； 示例：12****2; 说明：商户号，需与APPID签约绑定关系; SubAppId 类型：字符串； 说明：子应用APPID，可不填； SubMchId 类型：字符串； 说明：子商户号，可不填； 签名密钥 类型：字符串； 值： 说明：签名密钥； 交易编号 类型：字符串； 值：示例：42000002592……； 说明：支付成功后payinfo里的“交易单号”； 订单号 类型：字符串； 说明：用于支付的商户订单号； 操作员 类型：字符串； 示例：收银员； 说明：填写操作员信息； 支付码 类型：字符串； 值：示例:@barcode； 说明：扫描客户付款码获取的值，通过“条码扫描”组件获取。 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： payinfo-获取支付信息对象 类型：对象； 说明：在“调用成功”和“调用失败”中可以获取支付信息对象payinfo。支付信息对象属性JSonData对象包含“交易编号”、“订单号”、“支付金额”属性。 结构： //transaction_id:交易编号； //OrderId：订单号； //TotalFee：支付金额； {\"JSonData\":{\"transaction_id\": \"42000003082019……\", \"OrderId\":\"234123123123\", \"TotalFee\":0.01},\"Exception\":\"\",\"State\":0}; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 14:29:05 "},"shi-jian-wei-tuo/wei-xin-zhi-fu-tui-kuan-wxpayrefund.html":{"url":"shi-jian-wei-tuo/wei-xin-zhi-fu-tui-kuan-wxpayrefund.html","title":"微信支付退款 WxPayRefund","keywords":"","body":"微信支付退款 WxPayRefund 作用：发起微信退款，服务器需要配置微信商户号-API安全证书； 设计属性 1、微信支付退款： 活动标题 类型：字符串； 值：默认值：微信支付退款； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； App Id 类型：字符串； 说明：微信开放平台审核通过的移动应用APPID； Saller 类型：字符串； 示例：12****02; 说明：商户号，需与APPID签约绑定关系。 SubAppId 类型：字符串； 说明：子应用APPID，可不填； SubMchId 类型：字符串； 说明：子商户号，可不填； 签名密钥 类型：字符串； 值： 说明：签名密钥； 交易编号 类型：字符串； 值：示例：42000002592…… 说明：支付成功后微信账单详情里的“交易单号”； 订单号 类型：字符串； 说明：支付的商户订单号； 退单号 类型：字符串； 说明：支付的商户退单号。 支付金额 类型：数值； 示例:@0.01； 说明：本订单的支付金额； 退款金额 类型：数值； 示例：@0.01； 说明：本次退款的退款金额； 操作员 类型：字符串； 示例：收银员； 说明：填写操作员信息； 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： payinfo-获取退款信息对象 类型：对象； 说明：在“调用成功”和“调用失败”中可以获取退款信息对象payinfo。支付信息对象属性JSonData对象包含“交易编号”、“退单号”属性。 结构： //payinfo 退款信息对象结构： //Transaction_Id:退款交易编号； //Refund_Id：退单号； {\"JSonData\":{\"Transaction_id\": \"50000500222019……\", \"Refund_Id\":\"12334453\"}, \"Exception\":\"\",\"State\":0}; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 15:39:36 "},"shi-jian-wei-tuo/wei-xin-app-zhi-fu-wxapppay.html":{"url":"shi-jian-wei-tuo/wei-xin-app-zhi-fu-wxapppay.html","title":"微信App支付 WxAppPay","keywords":"","body":"微信App支付 WxAppPay 作用：跳转到微信App进行支付，支付成功后跳转回砚台； 设计属性 1、微信App支付： 活动标题 类型：字符串； 值：默认值：微信App支付； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； App Id 类型：字符串； 说明：微信开放平台审核通过的移动应用APPID； 公众号Id 类型：字符串； 说明：微信公众平台审核通过的公众号APPID； MchId 类型：字符串； 示例：DBAzure； 说明：微信支付分配的商户号，需与APPID签约绑定关系； SubAppId 类型：字符串； 说明：子应用APPID，可不填； SubMchId 类型：字符串； 说明：子商户号，可不填； 签名密钥 类型：字符串； 值： 说明：签名密钥； 交易类型 类型：字符串； 值：App 说明：APP支付； 订单号 类型：字符串； 说明：用于支付的商户订单号； 支付金额 类型：数值； 示例:@0.01； 说明：设置支付金额； 备注 类型：字符串； 示例：测试支付订单； 说明：微信支付界面的显示信息，商品信息。不能为空； 操作员 类型：字符串； 示例：收银员； 说明：填写操作员信息； 支付码 类型：字符串； 值：示例:@barcode； 说明：扫描客户付款码获取的值，通过“条码扫描”组件获取。 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： payinfo-获取支付信息对象 类型：对象； 说明：在“调用成功”和“调用失败”中可以获取支付信息对象payinfo。支付信息对象属性JSonData对象包含“交易编号”、“订单号”、“支付金额”属性。 结构： //transaction_id:交易编号； //OrderId：订单号； //TotalFee：支付金额； {\"JSonData\":{\"transaction_id\": \"42000003082019……\", \"OrderId\":\"234123123123\", \"TotalFee\":0.01},\"Exception\":\"\",\"State\":0}; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 15:43:11 "},"shi-jian-wei-tuo/wei-xin-zhi-fu-hui-diao-cuo-wu-ma.html":{"url":"shi-jian-wei-tuo/wei-xin-zhi-fu-hui-diao-cuo-wu-ma.html","title":"微信支付回调错误码","keywords":"","body":"微信支付回调错误码 微信支付回调错误码（官方文档）：https://pay.weixin.qq.com/wiki/doc/api/index.html Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 15:51:32 "},"shi-jian-wei-tuo/zhi-fu-bao-zhi-fu-alipay.html":{"url":"shi-jian-wei-tuo/zhi-fu-bao-zhi-fu-alipay.html","title":"支付宝支付 AliPay","keywords":"","body":"支付宝支付 AliPay 作用：商家生成订单后，扫描顾客付款二维码进行收款； 设计属性 1、支付宝支付： 活动标题 类型：字符串； 值：默认值：支付宝支付； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； App Id 类型：字符串； 说明：支付宝开放平台审核通过的移动应用APPID； Saller 类型：字符串； 示例：示例: 20****11; 说明：支付宝收款商户PID; 订单号 类型：字符串； 说明：支付的订单号； 支付金额 类型：数值； 示例:@0.01； 说明：设置支付金额； 备注 类型：字符串； 示例：测试支付订单； 说明：支付宝支付界面的显示信息，商品信息。不能为空； 操作员 类型：字符串； 示例：收银员； 说明：填写操作员信息； 支付码 类型：字符串； 值：示例:@barcode； 说明：扫描客户付款码获取的值，通过“条码扫描”组件获取。 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： payinfo-获取支付信息对象 类型：对象； 说明：在“调用成功”和“调用失败”中可以获取支付信息对象payinfo。支付信息对象属性JSonData对象包含“交易编号”、“订单号”、“支付金额”属性。 结构： //transaction_id:交易编号； //OrderId：订单号； //TotalFee：支付金额； {\"JSonData\":{\"transaction_id\": \"201904112200……\", \"OrderId\":\"15567589975\", \"TotalFee\":0.01},\"Exception\":\"\",\"State\":0}; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 15:51:32 "},"shi-jian-wei-tuo/zhi-fu-bao-cha-xun-alipayquery.html":{"url":"shi-jian-wei-tuo/zhi-fu-bao-cha-xun-alipayquery.html","title":"支付宝查询 AliPayQuery","keywords":"","body":"支付宝查询 AliPayQuery 设计属性 1、支付宝查询： 活动标题 类型：字符串； 值：默认值：支付宝查询； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； App Id 类型：字符串； 说明：支付宝收款商户PID； 订单号 类型：字符串； 说明：支付信息对象里的订单号； 交易号 类型：字符串； 示例:201904112200…… 说明：支付成功后返回的支付信息对象里的“交易单号”; 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： payinfo-获取支付信息对象 类型：对象； 说明：在“调用成功”和“调用失败”中可以获取支付信息对象payinfo。支付信息对象属性JSonData对象包含“交易编号”、“订单号”、“支付金额”属性。 结构： //transaction_id:交易编号； //OrderId：订单号； //TotalFee：支付金额； {\"JSonData\":{\"transaction_id\": \"201904112200……\", \"OrderId\":\"15567589975\", \"TotalFee\":0.01},\"Exception\":\"\",\"State\":0}; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 16:02:52 "},"shi-jian-wei-tuo/zhi-fu-bao-tui-kuan-alipayrefund.html":{"url":"shi-jian-wei-tuo/zhi-fu-bao-tui-kuan-alipayrefund.html","title":"支付宝退款 AliPayRefund","keywords":"","body":"支付宝退款 AliPayRefund 设计属性 1、支付宝退款： 活动标题 类型：字符串； 值：默认值：支付宝退款； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 订单号 类型：字符串； 说明：支付信息对象里的订单号； 交易号 类型：字符串； 示例：示例：201904112200……; 说明：支付成功后返回的支付信息对象里的“交易单号”; 退单号 类型：字符串； 说明：自己生成退款单号; 退费金额 类型：数值； 示例:@0.01； 说明：退款金额； 退费原因 类型：字符串； 值： 说明：填写退款原因 订单金额 类型：数值； 示例：@0.01； 说明：订单金额； 操作员 类型：字符串； 示例：收银员； 说明：填写操作员信息； 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： payinfo-获取支付信息对象 类型：对象； 说明：在“调用成功”和“调用失败”中可以获取退款信息对象payinfo。支付信息对象属性JSonData对象包含“交易编号”、“退单号”属性。 结构： //Transaction_Id:退款交易编号； //Refund_Id：退单号； {\"JSonData\":{\"Transaction_id\": \"50000500222019……\", \"Refund_Id\":\"12334453\"}, \"Exception\":\"\",\"State\":0}; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 16:09:23 "},"shi-jian-wei-tuo/zhi-fu-bao-appzhi-fu-aliapppay.html":{"url":"shi-jian-wei-tuo/zhi-fu-bao-appzhi-fu-aliapppay.html","title":"支付宝App支付 AliAppPay","keywords":"","body":"支付宝App支付 AliAppPay 设计属性 1、支付宝App支付： 活动标题 类型：字符串； 值：默认值：支付宝App支付； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； App Id 类型：字符串； 说明：支付宝开放平台审核通过的移动应用APPID； Saller 类型：字符串； 示例：示例: 20****11; 说明：支付宝收款商户PID; 订单号 类型：字符串； 说明：支付的订单号； 支付金额 类型：数值； 示例:@0.01； 说明：设置支付金额； 备注 类型：字符串； 示例：测试支付订单； 说明：支付宝支付界面的显示信息，商品信息。不能为空； 操作员 类型：字符串； 示例：收银员； 说明：填写操作员信息； 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 回调函数参数： payinfo-获取支付信息对象 类型：对象； 说明：在“调用成功”和“调用失败”中可以获取支付信息对象payinfo。支付信息对象属性JSonData对象包含“交易编号”、“订单号”、“支付金额”属性。 结构： //transaction_id:交易编号； //OrderId：订单号； //TotalFee：支付金额； {\"JSonData\":{\"transaction_id\": \"201904112200……\", \"OrderId\":\"15567589975\", \"TotalFee\":0.01},\"Exception\":\"\",\"State\":0}; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 16:02:52 "},"shi-jian-wei-tuo/mei-tuan-yan-quan-zhun-bei-mtcouponprepare.html":{"url":"shi-jian-wei-tuo/mei-tuan-yan-quan-zhun-bei-mtcouponprepare.html","title":"美团验券准备 MTCouponPrepare","keywords":"","body":"美团验券准备 MTCouponPrepare 设计属性 1、美团验券准备： 活动标题 类型：字符串； 值：默认值：美团验券准备； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 授权Token 类型：字符串； 说明： 签名密钥 类型：字符串； 说明： 团购券码 类型：字符串； 说明： 团购类型 类型：字符串； 说明： 类型名称 类型：字符串； 说明： 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 16:13:05 "},"shi-jian-wei-tuo/mei-tuan-zhi-xing-yan-quan-mtcouponconsume.html":{"url":"shi-jian-wei-tuo/mei-tuan-zhi-xing-yan-quan-mtcouponconsume.html","title":"美团执行验券 MTCouponConsume","keywords":"","body":"美团执行验券 MTCouponConsume 设计属性 1、美团执行验券： 活动标题 类型：字符串； 值：默认值：美团执行验券； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 授权Token 类型：字符串； 说明： 签名密钥 类型：字符串； 说明： 团购券码 类型：字符串； 说明： 团购类型 类型：字符串； 说明： 类型名称 类型：字符串； 说明： 店铺 Id 类型：字符串； 说明： 店铺名称 类型：字符串； 说明： 验券数量 类型：字符串； 说明： 订单编号 类型：字符串； 说明： 返回对象 类型：字符串； 说明： 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 16:16:48 "},"shi-jian-wei-tuo/mei-tuan-qu-xiao-yan-quan-mtcouponcancel.html":{"url":"shi-jian-wei-tuo/mei-tuan-qu-xiao-yan-quan-mtcouponcancel.html","title":"美团取消验券 MTCouponCancel","keywords":"","body":"美团取消验券 MTCouponCancel 设计属性 1、按券码查询： 活动标题 类型：字符串； 值：默认值：按券码查询； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 授权Token 类型：字符串； 说明： 签名密钥 类型：字符串； 说明： 团购券码 类型：字符串； 说明： 团购类型 类型：字符串； 说明： 类型名称 类型：字符串； 说明： 店铺 Id 类型：字符串； 说明： 店铺名称 类型：字符串； 说明： 订单编号 类型：字符串； 说明： 返回对象 类型：字符串； 说明： 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 16:22:06 "},"shi-jian-wei-tuo/mei-tuan-yan-quan-cha-xun-mtcouponquerybyid.html":{"url":"shi-jian-wei-tuo/mei-tuan-yan-quan-cha-xun-mtcouponquerybyid.html","title":"美团验券查询 MTCouponQueryById","keywords":"","body":"美团验券查询 MTCouponQueryById 设计属性 1、按券码查询： 活动标题 类型：字符串； 值：默认值：按券码查询； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 授权Token 类型：字符串； 说明： 签名密钥 类型：字符串； 说明： 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 16:22:06 "},"shi-jian-wei-tuo/mei-tuan-huo-qu-token-mtgetauthtoken.html":{"url":"shi-jian-wei-tuo/mei-tuan-huo-qu-token-mtgetauthtoken.html","title":"美团获取Token MTGetAuthToken","keywords":"","body":"美团获取Token MTGetAuthToken 设计属性 1、获取美团AuthToken： 活动标题 类型：字符串； 值：默认值：获取美团AuthToken； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 店铺Id 类型：字符串； 说明： 2、调用成功：调用成功时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用成功； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 3、调用失败：调用失败时需要执行的操作 活动标题 类型：字符串； 值：默认值：调用失败； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 16:23:36 "},"shi-jian-wei-tuo/nei-rong-fen-xiang-wxshare-app.html":{"url":"shi-jian-wei-tuo/nei-rong-fen-xiang-wxshare-app.html","title":"内容分享  WXShare（App）","keywords":"","body":"内容分享 WXShare（App） 作用：App中调起微信分享，将页面分享到微信好友或者微信朋友圈； 设计属性 活动标题 类型：字符串； 值：默认值：微信分享； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 标题 类型：字符串； 示例：分享测试-title； 说明：分享内容标题。不能为undefined！ 描述 类型：字符串； 示例：分享测试-subtitle； 说明：分享内容描述。不能为undefined！ 缩略图 类型：（按钮）； 值：选择图片、清除图片； 说明：分享内容展示缩略图，不能大于32k。不能为undefined！ 页面链接 类型：字符串； 值：1、砚台测试版：https://inkstone.dbazure.cn/sharepage.aspx?AppId=应用标识&PageUri=页面资源路径； 2、砚台正式版：https://lc.dbazure.cn/sharepage.aspx?AppId=应用标识&PageUri=页面资源路径； 说明：展示页面的URL地址； 页面链接拼接说明： 1、示例： https://inkstone.dbazure.cn/sharepage.aspx?AppId=e1334061f1954b10b25f1deee1c26725&PageUri=apps/e1334061f1954b10b25f1deee1c26725/75e7a05b4f3e4abb93b62e16a48bf313.scrn&\\_id=123&name=Jack&age=18 2、AppId值为分享页面的应用标识，PageUri为分享页面的资源路径； 3、后面可以拼接需要传递的重要字段，字段之间用‘&’符号链接; 4、字段的键和值不能包含汉字！ 5、在分享页面可以获取包含拼接键值对的传递对象； 6、获取传递对象方法(固定)：app.CurrentApp.EnvironVariables.QueryString Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-22 16:31:49 "},"shi-jian-wei-tuo/wei-xin-gong-zhong-hao-fen-xiang-wxshare-app.html":{"url":"shi-jian-wei-tuo/wei-xin-gong-zhong-hao-fen-xiang-wxshare-app.html","title":"微信公众号分享  WxShare（App）","keywords":"","body":"微信公众号分享 WxShare（App） 作用：页面在微信公众号中打开时，修改微信公众号右上角分享的配置，将页面分享给微信好友或者微信朋友圈； 设计属性 活动标题 类型：字符串； 值：默认值：微信分享； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 标题 类型：字符串； 示例：分享标题； 说明：分享内容标题。不能为undefined！ 描述 类型：字符串； 示例：分享描述； 说明：分享内容描述。不能为undefined！ 缩略图 类型：（按钮）； 值：选择图片、清除图片； 说明：分享内容展示缩略图，不能大于32k。不能为undefined！ 链接 类型：字符串； 示例：https://t.dbazure.cn?T=1展示页面的URL地址，将拼接的地址生成短链接，此处填写短链接。 说明：展示页面的URL地址； 注：在需要分享的页面加载时调用，在页面退出时一定要调用修改配置，否则之后所有的页面分享的链接都会以最后一次配置为准；不做任何配置时，默认地址为砚台正式版首页； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 08:34:04 "},"shi-jian-wei-tuo/bai-du-ocrocr.html":{"url":"shi-jian-wei-tuo/bai-du-ocrocr.html","title":"百度OCR  OCR","keywords":"","body":"百度OCR OCR 作用：使用百度OCR功能，识别图片文字; 设计属性 活动标题 类型：字符串； 值：默认值：文字识别； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 图片地址 类型：字符串； 说明：图片在服务器上的绝对地址； 图片类型 类型：字符串； 示例：general_basic； 说明：需要识别的图片类型，为了提高识别（见下表）； 图片类型说明： general_basic——通用文字识别 handwriting——手写文字识别 idcard_front——身份证-正面 idcard_back——身份证-反面 bankcard——银行卡 business_license——营业执照 passport——护照 receipt——通用票据 vat_invoice——增值税发票 train_ticket——火车票 drivinglicense——驾驶证 vehicle_license——行驶证 license_plate——车牌 vin_code——VIN numbers——数字识别 回调函数参数： ocrResult-获取识别结果 类型：对象； 说明：ocrResult在识别成功执行序列中可以获取到。获取的为字符串类型。如果为JSON格式字符串，可通过JSON.parse(barcode)转成JSON对象。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 08:34:44 "},"shi-jian-wei-tuo/an-quan-ji-shu-zi-qian-ming.html":{"url":"shi-jian-wei-tuo/an-quan-ji-shu-zi-qian-ming.html","title":"安全及数字签名","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 08:34:04 "},"shi-jian-wei-tuo/zheng-shu-shen-qing-requestcert.html":{"url":"shi-jian-wei-tuo/zheng-shu-shen-qing-requestcert.html","title":"证书申请RequestCert","keywords":"","body":"证书申请 RequestCert 设计属性 活动标题 类型：字符串； 值：默认值：证书申请； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 返回对象 类型：字符串； 默认值：secResp； 说明：必填，格式参照“返回对象secResp格式”； 证书DN 类型：对象； 说明：必填，格式：参照“证书DN格式”； 证书密码 类型：字符串； 说明：必填，至少6位字符串； 返回对象secResp格式： { \"State\":0, \"Exception\":\"异常信息\", \"P10\": { \"containername\":\"证书容器名称\", \"p10\":\"证书标识\" }, \"CertChain\": { \"status\":0, \"message\":\"成功\", \"data\":\"证书数据\" } } 证书DN格式： {\"DN\":\"CN=XXXX公司,OU=XXXX公司,O=SLHZ,L=市/州,ST=JL,C=CN\", \"column\": {\"column_ZCXQ\":\"单位名称：XXXX公司\", \"column_HU5Y\":\"所属机构：XXXX公司\", \"column_HMHW\":\"市/州\", \"column_XROM\":\"省\", \"column_P6FI\":\"统一社会信用代码\", \"column_JGSF\":\"项目编码，固定填写：SLHZ\"}, \"extenset\": {\"ICRegNumber\":\"统一社会信用代码\"} }; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 08:41:32 "},"shi-jian-wei-tuo/shu-ziqian-ming-signature.html":{"url":"shi-jian-wei-tuo/shu-ziqian-ming-signature.html","title":"数字签名Signature","keywords":"","body":"数字签名 Signature 设计属性 活动标题 类型：字符串； 值：默认值：数字签名； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 返回对象 类型：字符串； 默认值：secResp； 说明： 证书名称 类型： 说明： 证书密码 类型：字符串； 说明： 签名数据 类型： 说明： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 08:43:38 "},"shi-jian-wei-tuo/qian-ming-yan-zheng-verifysign.html":{"url":"shi-jian-wei-tuo/qian-ming-yan-zheng-verifysign.html","title":"签名验证VerifySign","keywords":"","body":"签名验证 VerifySign 设计属性 活动标题 类型：字符串； 值：默认值：签名验证； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 返回对象 类型：字符串； 默认值：secResp； 说明： 签名数据 类型： 说明： 原始数据 类型： 说明： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 08:48:15 "},"shi-jian-wei-tuo/zheng-shu-geng-xin-updatecert.html":{"url":"shi-jian-wei-tuo/zheng-shu-geng-xin-updatecert.html","title":"证书更新UpdateCert","keywords":"","body":"证书更新 UpdateCert 设计属性 活动标题 类型：字符串； 值：默认值：证书更新； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 返回对象 类型：字符串； 默认值：secResp； 说明： 证书DN 类型： 说明： 证书SN 类型：字符串； 说明： 证书数据 类型： 说明： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 08:49:01 "},"part4/":{"url":"part4/","title":"数据库-存储过程","keywords":"","body":"数据库-存储过程 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"part4/shu-ju-cao-zuo.html":{"url":"part4/shu-ju-cao-zuo.html","title":"数据操作","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 15:36:36 "},"part4/shu-ju-cao-zuo/bian-liang-ding-yi-defvars.html":{"url":"part4/shu-ju-cao-zuo/bian-liang-ding-yi-defvars.html","title":"变量定义 DefVars","keywords":"","body":"变量定义 DefVars 作用：定义变量及为变量赋值； 设计属性 活动标题 类型：字符串； 值：默认值：变量定义； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 新增变量 类型：（按钮）； 值： 说明：点击按钮增加定义的变量。点击定义变量后“>”可以展开创建的所有变量； 选中某个变量，就可以对定义的变量进行设置： 变量名称 类型：字符串； 说明：对新增的变量命名。命名规则：变量名只能是字母(a-z A-Z)，数字(0-9)，下划线(_)的组合，并且之间不能包含空格，数字不能放在变量名首位，不能使用JavaScript语言的保留字； 数据类型 类型：下拉选框； 说明：可选值：字符串、整型、数值、日期、日期时间、布尔、对象； 默认值 类型： 说明：为变量设置默认值； 变量注释 类型：字符串； 说明：为所定义变量添加注释； 新增变量 类型：（按钮）； 说明：新创建一个变量； 删除变量 类型：（按钮）； 说明：删除选中变量； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 08:49:56 "},"part4/shu-ju-cao-zuo/shu-ju-cha-xun-querycmd.html":{"url":"part4/shu-ju-cao-zuo/shu-ju-cha-xun-querycmd.html","title":"数据查询 QueryCmd","keywords":"","body":"数据查询 QueryCmd 作用：数据库查询操作； 设计属性 1、基础设置： 活动标题 类型：字符串； 值：默认值：数据查询； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 表名称 类型：字符串； 说明：查询数据库中表的名称（必填）； 输出名称 类型：字符串； 值：示例：persons； 说明：查询操作执行后返回的结果名称； 输出类型 类型：（下拉选框）； 值：默认值：集合对象； 说明：设置返回结果类型；可选值：集合对象、单值对象、游标对象； 输出行数 类型：整数； 默认值：-1； 说明：数值，控制返回结果的行数。负数和0代表输出所有；小数只取整数部分； 忽略行数 类型：整数； 默认值：-1； 说明：数值，控制忽略的数据行数，可以是代表整数值的变量。负数和0表示忽略0行，从第一行数据输出； 添加映射 类型：（按钮）； 说明：在“输出映射表”序列里添加“映射”； 添加筛选 类型：（按钮）； 说明：在“查询条件”序列里添加“查询条件“； 添加排序 类型：（按钮）； 说明：在“排序设置”序列里添加“排序“； 2、映射： 输出项名 类型：字符串； 值：默认值：Property0…； 说明：需要显示的数据表中的字段名（必填）； 表达式 类型：字符串； 值： 说明： 项目别名 类型：字符串； 值： 说明：为输出映射表字段起个别名； 参数注释 类型：字符串； 说明： 添加映射 类型：（按钮）； 说明： 删除映射 类型：（按钮）； 说明： 3、查询条件 组合开始 类型：（单选框）； 说明：是否设置为组合开始； 项目名称 类型：字符串； 值：默认值：Filer0…； 说明： 比较方式 类型：（下拉选框）； 值：默认：无； 说明：可选值：无、等于、大于、大于等于、小于、小于等于、不等于、开头于、包含、结尾于、在……里 匹配值 类型： 说明：比较的值，可以为变量名，也可以为常量；常量默认为字符串类型，想要数值类型前面需加@； 组合结束 类型：（单选框）； 说明：是否设置为组合结束； 连接方式 类型：（下拉选框）； 值：默认：无； 说明：可选值：并且、或者、无； 参数注释 类型：字符串； 说明：对当前表达式注释； 添加筛选 类型：（按钮）； 说明：添加一个查询条件； 删除筛选 类型：（按钮）； 说明：删除选中的查询条件； 4、排序 排序属性 类型：字符串； 默认值：Sort0…； 说明：数据表中需要排序的字段名； 排序方式 类型：（下拉选框）； 值： 说明：可选值：升序、降序； 添加排序 类型：（按钮）； 说明：添加一个排序字段； 删除排序 类型：（按钮）； 说明：删除一个排序字段； 数据查询示例： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 09:26:07 "},"part4/shu-ju-cao-zuo/geng-xin-shu-ju-updatecmd.html":{"url":"part4/shu-ju-cao-zuo/geng-xin-shu-ju-updatecmd.html","title":"更新数据 UpdateCmd","keywords":"","body":"更新数据 UpdateCmd 作用：数据库更新操作； 设计属性 1、基础设置： 活动标题 类型：字符串； 值：默认值：数据更新； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 表名称 类型：字符串； 说明：更新数据库中表的名称（必填）； 输出名称 类型：字符串； 值：示例：persons； 说明：更新操作执行后返回的结果名称； 添加项目 类型：（按钮）； 说明：在“更新项列表”添加“项目”； 添加筛选 类型：（按钮）； 说明：在“查询条件”序列里添加“查询条件“； 2、项目： 操作类型 类型：（下拉选框）； 值：默认值：列赋值； 说明：可选值：列赋值（有此字段直接赋值，无此字段则添加此字段作为新字段并赋值）、加法（只能对数值类型的字段进行加法操作）、乘法（只能对数值类型的字段进行乘法操作）、删除列（删除符合条件数据的字段）、列命名(为存在的字段重新命名)； 项目名称 类型：字符串； 值：示例:name； 说明：需要更新的数据库字段名； 数据项值 类型： 值：示例：”张三” 说明：为符合筛选条件的字段设置新值； 表达式 类型：字符串； 说明： 参数注释 类型：字符串； 说明： 添加项目 类型：（按钮）； 说明：在“更新项列表”添加“项目”； 删除项目 类型：（按钮）； 说明：删除选中的项目； 3、筛选--为更新数据库设置筛选条件，只有符合筛选条件的字段才会更新 组合开始 类型：（单选框）； 说明：是否设置为组合开始； 项目名称 类型：字符串； 值：默认值：Filer0…； 说明： 比较方式 类型：（下拉选框）； 值：默认：无； 说明：可选值：无、等于、大于、大于等于、小于、小于等于、不等于、开头于、包含、结尾于、在……里 匹配值 类型： 说明：比较的值，可以为变量名，也可以为常量；常量默认为字符串类型，想要数值类型前面需加@； 组合结束 类型：（单选框）； 说明：是否设置为组合结束； 连接方式 类型：（下拉选框）； 值：默认：无； 说明：可选值：并且、或者、无； 参数注释 类型：字符串； 说明：对当前表达式注释； 添加筛选 类型：（按钮）； 说明：添加一个查询条件； 删除筛选 类型：（按钮）； 说明：删除选中的查询条件； 更新数据示例： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 09:26:07 "},"part4/shu-ju-cao-zuo/shan-chu-shu-ju-deletecmd.html":{"url":"part4/shu-ju-cao-zuo/shan-chu-shu-ju-deletecmd.html","title":"删除数据 DeleteCmd","keywords":"","body":"删除数据 DeleteCmd 作用：删除数据库中的数据操作； 注：数据是非常重要的信息，一般很少直接删除数据表中数据，大多采用在数据表中添加字段，用于标记此条数据是否被删除，根据项目的实际需求操作数据； 设计属性 1、基础设置： 活动标题 类型：字符串； 值：默认值：数据删除； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 表名称 类型：字符串； 说明：删除的数据所在数据库中表的名称（必填）； 输出名称 类型：字符串； 值： 说明：数据库操作的返回值名。返回值表示删除行的行数； 添加筛选 类型：（按钮）； 说明：在”过滤条件”添加“筛选”； 2、筛选 组合开始 类型：（单选框）； 说明：是否设置为组合开始； 项目名称 类型：字符串； 值：默认值：Filer0…； 说明： 比较方式 类型：（下拉选框）； 值：默认：无； 说明：可选值：无、等于、大于、大于等于、小于、小于等于、不等于、开头于、包含、结尾于、在……里 匹配值 类型： 说明：比较的值，可以为变量名，也可以为常量；常量默认为字符串类型，想要数值类型前面需加@； 组合结束 类型：（单选框）； 说明：是否设置为组合结束； 连接方式 类型：（下拉选框）； 值：默认：无； 说明：可选值：并且、或者、无； 参数注释 类型：字符串； 说明：对当前表达式注释； 添加筛选 类型：（按钮）； 说明：添加一个查询条件； 删除筛选 类型：（按钮）； 说明：删除选中的查询条件； 数据删除示例： 前端调用数据库操作-删除数据示例： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 09:27:27 "},"part4/shu-ju-cao-zuo/cha-ru-shu-ju-insertcmd.html":{"url":"part4/shu-ju-cao-zuo/cha-ru-shu-ju-insertcmd.html","title":"插入数据 InsertCmd","keywords":"","body":"插入数据 InsertCmd 作用：向数据库插入数据操作； 设计属性 1、基础设置： 活动标题 类型：字符串； 值：默认值：数据插入； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 表名称 类型：字符串； 说明：操作数据库中表的名称（必填）； 输出名称 类型：字符串； 值：示例：persons； 说明：插入操作执行后返回的结果名称； 输出影响行数 类型：（单选框）； 默认值：不选中； 说明：是否输出影响的数据行数； 添加项目 类型：（按钮）； 说明：在”数据项列表”添加“项目“； 2、项目： 操作类型 类型：（下拉选框）； 值：默认值：列赋值； 说明：可选值：列赋值（有此字段直接赋值，无此字段则添加此字段作为新字段并赋值）、加法（只能对数值类型的字段进行加法操作）、乘法（只能对数值类型的字段进行乘法操作）、删除列（删除符合条件数据的字段）、列命名(为存在的字段重新命名)； 项目名称 类型：字符串； 值：示例:name； 说明：需要更新的数据库字段名； 数据项值 类型： 值：示例：”张三” 说明：字段赋值； 表达式 类型： 说明： 参数注释 类型：字符串； 说明： 添加项目 类型：（按钮）； 说明：添加一个项目； 删除项目 类型：（按钮）； 说明：删除选中的项目； 数据插入示例： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 09:34:12 "},"part4/shu-ju-cao-zuo/bian-liangfu-zhi-assignvars.html":{"url":"part4/shu-ju-cao-zuo/bian-liangfu-zhi-assignvars.html","title":"变量赋值 AssignVars","keywords":"","body":"变量赋值 AssignVars 作用： 设计属性 活动标题 类型：字符串； 值：默认值：变量赋值； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 变量名称 类型：字符串； 示例：var a; 说明：对新增的变量命名。命名规则：变量名只能是字母(a-z A-Z)，数字(0-9)，下划线(_)的组合，并且之间不能包含空格，数字不能放在变量名首位，不能使用JavaScript语言的保留字； 变量值 类型： 示例：@hello world 说明：为变量赋值，默认作为字符串处理，如果想获取原数据类型，前面加‘@’转义； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 09:34:48 "},"part4/shu-ju-cao-zuo/cun-chu-guo-cheng-executesp.html":{"url":"part4/shu-ju-cao-zuo/cun-chu-guo-cheng-executesp.html","title":"存储过程 ExecuteSP","keywords":"","body":"存储过程 ExecuteSP 设计属性 1、基础设置： 活动标题 类型：字符串； 值：默认值：执行存储过程； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 服务器名 类型：字符串； 示例：inks.dbazure.cn:22322； 说明：数据库所在服务器地址,如果是当前的数据库所在服务器，则不填； 数据库名 类型：字符串； 值：示例：DB_AppTest； 说明：执行的数据库名； 存储过程 类型：字符串； 值：示例: SP5b750XXXXXXXba8e59160a； 说明：存储过程名称； 返回值 类型：字符串； 说明：设置调用存储过程的返回值名； 2、参数申明： 活动标题 类型：字符串； 值：默认值：参数申明； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 新增参数 类型：（按钮）； 说明：在“参数申明“中新增”参数“； 3、参数属性设置 参数名称 类型：字符串； 说明： 数据类型 类型：（下拉选框）； 值：默认值：字符串； 说明：可选值：字符串、整型、数值、日期、日期时间、布尔、对象； 默认值 类型： 说明： 输出类型参数 类型：（单选框）； 说明：默认不选中； 参数注释 类型：字符串； 说明：对当前表达式注释； 新增参数 类型：（按钮）； 说明：添加一个参数； 删除参数 类型：（按钮）； 说明：删除选中参数； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 09:45:51 "},"part4/shu-ju-cao-zuo/ju-he-cha-xun-aggregatecmd.html":{"url":"part4/shu-ju-cao-zuo/ju-he-cha-xun-aggregatecmd.html","title":"聚合查询AggregateCmd","keywords":"","body":"聚合查询AggregateCmd 作用:聚合主要用于处理数据(诸如统计平均值,求和等)，并返回计算后的数据结果。 设计属性 1、基础设置： 活动标题 类型：字符串； 值：默认值：聚合查询； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 表名称 类型：字符串； 说明：查询数据库中表的名称（必填）； 输出名称 类型：字符串； 值：示例：persons； 说明：查询操作执行后返回的结果名称； 输出类型 类型：（下拉选框）； 值：默认值：集合对象； 说明：设置返回结果类型；可选值：集合对象、单值对象、游标对象，设置输出变量的类型。注：聚合查询不能设置输出‘单值对象’！输出的‘游标对象’没有skip、limit等方法； 输出行数 类型：整数； 默认值：-1； 说明：数值，控制返回结果的行数。负数和0代表输出所有；小数只取整数部分； 忽略行数 类型：整数； 默认值：-1； 说明：数值，控制忽略的数据行数，可以是代表整数值的变量。负数和0表示忽略0行，从第一行数据输出； 添加连接 类型：（按钮）； 说明：在”连接设置“里添加“连接“； 添加筛选 类型：（按钮）； 说明：在”查询条件“里添加“筛选“； 添加分组 类型：（按钮）； 说明：在”分组设置“里添加“分组“； 添加映射 类型：（按钮）； 说明：在”输出投影“里添加“映射“； 添加排序 类型：（按钮）； 说明：在”排序设置“里添加“排序“； 2、设置查询连接： 表名称 类型：字符串； 说明：同一个数据库下需要联合查询的从表名； 主键 类型：字符串； 说明：源表中需要进行连接查询的字段名； 外键 类型：字符串； 说明：从表中需要进行连接查询的字段名； 别名 类型：字符串； 说明：默认值T0，输出数据中形成新的数组的名称； 设置为主表的子属性（数组） 类型：（单选框）； 说明：默认选中，选中时，输出表中的“别名”字段值类型为单个对象；取消选中时，输出表中的“别名”字段值类型为数组。 添加连接 类型：（按钮）； 说明： 删除连接 类型：（按钮）； 说明： 3、查询条件（筛选）设置 组合开始 类型：（单选框）； 说明：是否设置为组合开始； 项目名称 类型：字符串； 值：默认值：Filer0…，示例：“T0.count”； 说明：比较的字段名。比较主表字段直接填写主表字段名，比较从表字段，按照格式填写：“查询连接设置的别名.从表字段名”。 比较方式 类型：（下拉选框）； 值：默认：无； 说明：可选值：无、等于、大于、大于等于、小于、小于等于、不等于、开头于、包含、结尾于、在……里 匹配值 类型： 说明：比较的值，可以为变量名，也可以为常量；常量默认为字符串类型，想要数值类型前面需加@； 组合结束 类型：（单选框）； 说明：是否设置为组合结束； 连接方式 类型：（下拉选框）； 值：默认：无； 说明：可选值：并且、或者、无； 参数注释 类型：字符串； 说明：对当前表达式注释； 添加筛选 类型：（按钮）； 说明：添加一个查询条件； 删除筛选 类型：（按钮）； 说明：删除选中的查询条件； 4、设置分组规则 分组名称 类型：字符串； 说明：设置分组名称； 聚合命令 类型：（下拉选框）； 值：可选值：未设置、求和、平均值、最大值、最小值、第一项值、最后项值、生成数组、生成集合 说明：未设置：设置分组项；其余的选项都是在为分组做相应的运算操作； 表达式 类型：字符串； 示例： 1、{ $multiply: [ \"$price\", \"$quantity\" ] } 2、\"$quantity\" 3、1 说明：填写聚合查询的管道操作运算符，配合上面的聚合命令使用； 添加分组 类型：（按钮）； 说明：添加一个分组； 删除分组 类型：（按钮）； 说明：删除选中分组； 5、映射（投影）-设置输出显示（或隐藏）字段： 输出项名 类型：字符串； 值：示例：_id； 说明：映射主表中字段，直接写主表中字段名，_id默认显示；映射从表中字段，可以自定义字段名。； 表达式 类型：字符串； 值：示例1：1；示例2：“$T0.count” 说明：“数据项名”为主表字段时，除了_id可以填写0或1，其余字段只能填写1，0-不输出，1-输出；“数据项名”代表从表字段时，此处填写：“$查询连接设置的别名.从表字段名”。还可以填写带运算符的表达式。 项目别名 类型：字符串； 值： 说明：为输出映射表字段起个别名； 参数注释 类型：字符串； 说明： 添加映射 类型：（按钮）； 说明：添加一个映射（或投影）; 删除映射 类型：（按钮）； 说明：删除一个映射（或投影）; 备注：表达式运算符及使用方法： 数学运算符：乘法：$multiply；除法：$divide；加法：$add；减法：$subtract；绝对值：$abs；取余：$mod；平方：$pow；开平方：$sqrt；向上取整：$ceil；向下取整：$floor；取整位数：$trunc；日期转字符串：$dateToString；取年份：$year；取月份：$month；取日期：$dayOfMonth； 应用示例(映射表达式填写示例)：$multiply: {$multiply:[“$numA”,”$numB”]}; {$multiply:[“$numA”,30,……]}$divide: {$divide:[“$numA”,”$numB”]}; {$divide:[“$numA”,30]}$add:{$add:[“$numA”,”$numB”]}; {$add:[“$numA”,30,……]}$subtract:{$subtract:[“$numA”,”$numB”]}; {$subtract:[“$numA”,30]}$abs: {$abs: { $subtract: [ \"$start\", \"$end\" ] }}$mod: {$mod: [ \"$hours\", \"$tasks\" ] }$pow: {$pow: [ 5, 2 ] } 运算结果：25$sqrt: {$sqrt:25 } 运算结果：5$ceil：{$ceil :7.1} 运算结果：8$floor：{$floor:7.9} 运算结果：7$trunc：{$trunc:7.9} 运算结果：7$dateToString: {$dateToString :{date:”$proDate”,format:”%Y-%m-%d”}} 返回：2008-08-08$year：{$year:”$date”}$month：{$month:”$date”}$dayOfMonth：{$dayOfMonth:”$date”} 6、排序设置： 排序属性 类型：字符串； 值： 说明： 排序方式 类型：（下拉选框）； 值：默认值:升序 说明：可选值：升序、降序； 添加排序 类型：（按钮）； 说明：添加一个排序设置； 删除排序 类型：（按钮）； 说明：删除选中的排序设置； 示例1：数学运算符的使用 示例2：多表查询使用示例 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:17:19 "},"part4/guo-cheng-kong-zhi.html":{"url":"part4/guo-cheng-kong-zhi.html","title":"过程控制","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 15:39:10 "},"part4/tiao-jian-pan-duan-ifbranch.html":{"url":"part4/tiao-jian-pan-duan-ifbranch.html","title":"条件判断 IFBranch","keywords":"","body":"条件判断 IFBranch 作用：if-else条件判断； 设计属性 1、条件判断 IFBranch： 活动标题 类型：字符串； 值：默认值：条件判断； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 2、表达式 CExpressionBuilder： 活动标题 类型：字符串； 值：默认值：表达式； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 表达式设置 类型：（按钮）； 值： 说明：添加一个逻辑表达式； 选中某个表达式，对其进行编辑： 组合开始 类型：（单选框）； 说明：是否设置为组合开始； 项目名称 类型：字符串； 值： 说明： 比较方式 类型：（下拉选框）； 值： 说明：可选值：无、等于、大于、大于等于、小于、小于等于、不等于、开头于、包含、结尾于； 匹配值 类型：（按钮）； 说明：比较的值，可以为变量名，也可以为常量；常量默认为字符串类型，想要数值类型前面需加@； 组合结束 类型：（单选框）； 说明：是否设置为组合结束； 连接方式 类型：（下拉选框）； 说明：可选值：并且、或者、无； 添加表达式 类型：（按钮）； 说明：添加一个逻辑表达式； 删除表达式 类型：（按钮）； 说明：删除选中的表达式； 3、条件成立 Sequence：条件成立时执行的代码序列 活动标题 类型：字符串； 值：默认值：条件成立； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 4、条件不成立 Sequence：条件不成立时执行的代码序列 活动标题 类型：字符串； 值：默认值：条件不成立； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/tiao-jian-xun-huan-while.html":{"url":"part4/tiao-jian-xun-huan-while.html","title":"条件循环 While","keywords":"","body":"条件循环 While 作用：while循环； 设计属性 1、条件循环 While： 活动标题 类型：字符串； 值：默认值：条件循环； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 2、表达式 CExpressionBuilder： 活动标题 类型：字符串； 值：默认值：表达式； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 添加表达式 类型：（按钮）； 值： 说明：添加一个逻辑表达式； 选中某个表达式，对其进行编辑： 组合开始 类型：（单选框）； 说明：是否设置为组合开始； 项目名称 类型：字符串； 值： 说明： 比较方式 类型：（下拉选框）； 值： 说明：可选值：无、等于、大于、大于等于、小于、小于等于、不等于、开头于、包含、结尾于； 匹配值 类型：（按钮）； 说明：比较的值，可以为变量名，也可以为常量；常量默认为字符串类型，想要数值类型前面需加@；； 组合结束 类型：（单选框）； 说明：是否设置为组合结束； 连接方式 类型：（下拉选框）； 说明：可选值：并且、或者、无； 添加表达式 类型：（按钮）； 说明：添加一个逻辑表达式； 删除表达式 类型：（按钮）； 说明：删除选中的表达式； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/ji-shu-xun-huan-for.html":{"url":"part4/ji-shu-xun-huan-for.html","title":"计数循环 For","keywords":"","body":"计数循环 For 作用：for循环； 设计属性 活动标题 类型：字符串； 值：默认值：计数循环； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 计数器初值 类型：数值； 值：默认值：0； 说明：循环计数器的起始值； 计数器限值 类型：数值； 值：默认值：10 说明：循环的最大值； 计数器增量 类型：数值； 值：默认值：1 说明： 计数器变量名 类型：字符串； 说明：默认值：i； 倒序执行 类型：（单选框）； 说明：是否倒序执行 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/mei-ju-xun-huan-foreach.html":{"url":"part4/mei-ju-xun-huan-foreach.html","title":"枚举循环 ForEach","keywords":"","body":"枚举循环 ForEach 作用：foreach； 设计属性 活动标题 类型：字符串； 值：默认值：枚举循环 ； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 集合名称 类型：字符串； 说明：需要遍历的集合或者数组对象名； 项目名称 类型：字符串； 值：默认值：item 说明：集合每次遍历的元素； 数组对象 类型：（单选框）； 值：默认选中 说明：选中时，使用foreach遍历数组，break或者continue不可用；不选择时，使用for…in遍历对象。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/fen-zhi-chu-li-switchbranch.html":{"url":"part4/fen-zhi-chu-li-switchbranch.html","title":"分支处理 SwitchBranch","keywords":"","body":"分支处理 SwitchBranch 作用：switch-case分支判断； 设计属性 1、分支处理 SwitchBranch： 活动标题 类型：字符串； 值：默认值：分支选择； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 添加分支 类型：（按钮）； 说明：添加一个分支； 选择依据 类型：字符串 说明：通过什么值进行分支选择； 添加分支后，选择分支进行设置： 活动标题 类型：字符串； 值：默认值：执行序列； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 选定值 类型： 说明：和选择依据对比的值，可以是常量，也可以是变量，常量时默认为字符串格式，如为数值类型，数值常量前需加@符号； 2、默认分支处理：选择依据和选定值都没有对比成功后执行 活动标题 类型：字符串； 值：默认值：默认分支处理； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/yi-chang-chu-li-ff1a.html":{"url":"part4/yi-chang-chu-li-ff1a.html","title":"异常处理 tyr-catch","keywords":"","body":"异常处理 作用：try-catch语法，用于捕获代码异常； 设计属性 异常处理 try 类型：（活动序列）； 说明：把不确定是否会出错的活动序列放到这里执行，出现异常时可以在异常捕获catch处拿到异常信息； 异常捕获 Catch 类型：（活动序列）； 说明：捕获到异常处理中的异常信息，拿到异常信息对象ex。可以通过UI组件“用户提示框”在屏幕显示，提示内容中填写@ex.toString(); 备注：建议把操作放到“异常处理”里面执行，可以在出现错误时及时查看错误信息。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/pao-chu-yi-chang-throw.html":{"url":"part4/pao-chu-yi-chang-throw.html","title":"抛出异常 Throw","keywords":"","body":"抛出异常 Throw 作用：抛出异常信息 设计属性 活动标题 类型：字符串； 值：默认值：抛出异常； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/guo-cheng-fan-hui-return.html":{"url":"part4/guo-cheng-fan-hui-return.html","title":"过程返回 Return","keywords":"","body":"过程返回 Return 作用：return关键字； 设计属性 活动标题 类型：字符串； 值：默认值：过程返回； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； 返回对象 类型：数值； 值：示例：@name 说明：可以不填写，终止执行过程；填写的内容默认当字符串处理，如为变量名，前面需要加@符号。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/tui-chu-xun-huan-break.html":{"url":"part4/tui-chu-xun-huan-break.html","title":"退出循环 Break","keywords":"","body":"退出循环 Break 作用：退出当前循环，用于技术循环、条件循环，不能退出枚举循环； 设计属性 活动标题 类型：字符串； 值：默认值：退出循环； 说明： 活动注释 类型：字符串； 值： 说明：对活动的说明； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/shu-ju-chu-li.html":{"url":"part4/shu-ju-chu-li.html","title":"数据处理","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 12:50:56 "},"part4/jsonzhuan-dui-xiang-json2object.html":{"url":"part4/jsonzhuan-dui-xiang-json2object.html","title":"JSon转对象 Json2Object","keywords":"","body":"JSon转对象 Json2Object 作用：将JSON格式字符串转成对象； 设计属性 活动标题 类型：字符串； 值：默认值：Json2Object； 说明： 活动注释 类型：字符串； 说明：对活动的说明； JSon变量 类型：字符串； 说明：JSON格式字符串变量名； 对象变量 类型：字符串 说明：转换成的对象变量名； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/dui-xiang-zhuan-jsonobject2json.html":{"url":"part4/dui-xiang-zhuan-jsonobject2json.html","title":"对象转JSon  Object2JSon","keywords":"","body":"对象转JSon Object2JSon 作用：将JSON格式对象转成字符串类型； 设计属性 活动标题 类型：字符串； 值：默认值：Json2Object； 说明： 活动注释 类型：字符串； 说明：对活动的说明； 对象变量 类型：字符串； 说明：对象变量名； JSon变量 类型：字符串 说明：转换成的JSON格式字符串变量名； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 11:22:05 "},"part4/shu-ju-ku-diao-yong-shuo-ming.html":{"url":"part4/shu-ju-ku-diao-yong-shuo-ming.html","title":"数据库调度说明","keywords":"","body":"数据库调度使用说明 1、MongoDB数据库调度 1).连接到数据库DB_Scheduler 2).打开数据表TM_Tasks 3).向表中添加一条数据，格式如下图： 数据项说明： _id: ObjectId，唯一标识； Title: 字符串，执行调度标题； CmdLine: 字符串，执行的存储过程名； TType: 字符串，调度类型； StartTime: 字符串，开始时间； EndTime: 字符串，结束时间； CycleMode: 字符串，执行模式：0-间隔一定时间执行一次；3-在某个时间时间； Interval: 数值，毫秒数，每间隔多少毫秒执行一次； ExecuteAt: 字符串，在什么时间开始执行； DBName: 字符串，存储过程所在的数据库名称； SvrCntString: 字符串，数据库所在的服务地址； 2、调度服务安装与配置 1)、解压压缩包Scheduler.rar； 解压后： 2)、修改调度服务的配置文件DB.FX.SchedulerServer.exe.config，配置服务地址；如为本地服务器则不需更改； 3)、执行安装程序InstallService.bat Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 16:02:51 "},"yun-fu-wu.html":{"url":"yun-fu-wu.html","title":"云服务","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-01-28 13:35:44 "},"yun-fu-wu/zai-xian-sheng-cheng-yin-zhang-tu-pian.html":{"url":"yun-fu-wu/zai-xian-sheng-cheng-yin-zhang-tu-pian.html","title":"在线生成印章图片","keywords":"","body":"在线生成印章图片 服务地址：https://ds.dbazure.cn/getdigitalstamp.ashx?t=图片类型&w=图片宽度值&h=图片高度值&cn=公司名称 &scn=印章名称&snum=印章编号 参数说明： t：图片显示类型，0-圆形，1-方形； w：图片宽度，默认值160； h：图片高度，默认值160； cn：公司名称； scn：印章名称； snum：印章编号； 示例1-方形印章： https://ds.dbazure.cn/getdigitalstamp.ashx?t=1&w=260&h=100&cn=%E6%B7%B1%E8%93%9D%E8%BD%AF%E4%BB%B6%E6%9C%89%E9%99%90%E8%B4%A3%E4%BB%BB%E5%85%AC%E5%8F%B8&scn=%E8%B4%A8%E6%A3%80%E4%B8%93%E7%94%A8%E7%AB%A0&snum=2201040029209927 示例2-圆形印章： https://ds.dbazure.cn/getdigitalstamp.ashx?t=1&w=260&h=100&cn=%E6%B7%B1%E8%93%9D%E8%BD%AF%E4%BB%B6%E6%9C%89%E9%99%90%E8%B4%A3%E4%BB%BB%E5%85%AC%E5%8F%B8&scn=%E8%B4%A8%E6%A3%80%E4%B8%93%E7%94%A8%E7%AB%A0&snum=2201040029209927 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-20 15:44:48 "},"yun-fu-wu-da-yin.html":{"url":"yun-fu-wu-da-yin.html","title":"云服务打印","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-01-28 13:35:44 "},"yun-fu-wu-da-yin/an-zhuang-3001-pei-zhi-da-yin-fu-wu-cheng-xu.html":{"url":"yun-fu-wu-da-yin/an-zhuang-3001-pei-zhi-da-yin-fu-wu-cheng-xu.html","title":"安装、配置打印服务程序","keywords":"","body":"安装、配置打印服务程序 1、解压安装包PrinterDebug.rar 2、修改解压后文件夹里的配置文件DBSoft.PrintingServer.exe.config 配置说明： 3、运行打印服务程序DBSoft.PrintingServer.exe； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"yun-fu-wu-da-yin/chuang-jian-da-yin-shu-ju-biao.html":{"url":"yun-fu-wu-da-yin/chuang-jian-da-yin-shu-ju-biao.html","title":"创建打印数据表","keywords":"","body":"创建打印数据表 1、创建打印数据表KM_ProcessTaskPrint（指定名称）; 2、KM_ProcessTaskPrint表结构 { \"_id\" :\"唯一标志\", \"PrinterName\" : \"打印机名称\" , \"Co_id\" : \"公司关键字\", \"De_id\" : \"门店关键字\", \"machine\" : \"机器码\", \"PrintContent\" : '[{\\\"T\\\":\\\"0\\\",\\\"FN\\\":\\\"宋体\\\",\\\"FS\\\":\\\"14\\\",\\\"TA\\\":\\\"0\\\",\\\"C\\\":\\\"black\\\",\\\"D\\\":\\\"107 13596203347 006 p1\\\"},{\\\"T\\\":\\\"1\\\",\\\"W\\\":\\\"280\\\",\\\"F\\\":\\\"black\\\"},{\\\"T\\\":\\\"0\\\",\\\"FN\\\":\\\"宋体\\\",\\\"FS\\\":\\\"18\\\",\\\"TA\\\":\\\"0\\\",\\\"C\\\":\\\"black\\\",\\\"D\\\":\\\"东北麻辣小龙虾 5\\\"},{\\\"T\\\":\\\"0\\\",\\\"FN\\\":\\\"宋体\\\",\\\"FS\\\":\\\"12\\\",\\\"TA\\\":\\\"0\\\",\\\"C\\\":\\\"black\\\",\\\"D\\\":\\\"10-11 08:56 无 后厨厨房加工区\\\"}]' } 3、打印内容PrintContent：JSON字符串说明 T：打印内容类型，字符串；0-文字，1-线，2-条码，3-二维码，4-图片； FN：字体名，字符串；如：宋体； FS：字体大小，字符串；如：14； TA：文字对齐方式，字符串；0-左对齐，1-居中； C：文字字体颜色，表示颜色值的字符串；如：black； D：打印内容、数据，字符串；如：麻辣小龙虾； BS:二维码的放缩比，整数值3； BRV:二维码放缩比，整数值15； Uri:打印图片时的图片资源地址； X：打印图片时，图片的x坐标； BL：是否换行，0-不换行；1-换行； H：图片高度，字符串；如：“400”； W：图片宽度，字符串；如：“400”； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"yun-fu-wu-da-yin/chuang-jian-da-yin-fu-wu-cun-chu-guo-cheng.html":{"url":"yun-fu-wu-da-yin/chuang-jian-da-yin-fu-wu-cun-chu-guo-cheng.html","title":"创建打印服务存储过程","keywords":"","body":"创建打印服务存储过程 注：存储过程名字配置到打印服务的配置文件中，打印服务启动后，打印服务自动调用； 打印服务调用打印存储过程时，传递4个参数，按顺序分别是： co_id：公司关键字 de_id：门店关键字 machine： 机器码 DeviceId： 设备号 在实际应用中，根据业务逻辑决定是否使用参数； 示例： SP_KM_TicketPrintService = function(co_id,de_id,machine,DeviceId){} Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 15:32:44 "},"ruan-jian-xia-zai-an-zhuang.html":{"url":"ruan-jian-xia-zai-an-zhuang.html","title":"软件下载安装","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-01-28 13:35:44 "},"ruan-jian-xia-zai-an-zhuang/dian-811128-pc-duan.html":{"url":"ruan-jian-xia-zai-an-zhuang/dian-811128-pc-duan.html","title":"电脑(PC)端","keywords":"","body":" Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"ruan-jian-xia-zai-an-zhuang/dian-811128-pc-duan/shen-lan-ruan-jian-yan-tai-zhi-neng-yun-kai-fa-ping-tai.html":{"url":"ruan-jian-xia-zai-an-zhuang/dian-811128-pc-duan/shen-lan-ruan-jian-yan-tai-zhi-neng-yun-kai-fa-ping-tai.html","title":"深蓝软件砚台智能云开发平台","keywords":"","body":"深蓝软件砚台智能云开发平台 1、在浏览器地址栏中输入：https://app.dbazure.cn/vde，点击【安装】按钮。如图所示： 2、更改文件名和下载路径，点击【下载】按钮。 3、点击【打开】按钮。点击【安装】按钮。完成下载安装。 4、安装后桌面快捷图标 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"ruan-jian-xia-zai-an-zhuang/dian-811128-pc-duan/shen-lan-ruan-jian-yan-tai-zhi-neng-yun.html":{"url":"ruan-jian-xia-zai-an-zhuang/dian-811128-pc-duan/shen-lan-ruan-jian-yan-tai-zhi-neng-yun.html","title":"深蓝软件砚台智能云","keywords":"","body":"深蓝软件砚台智能云 1、在浏览器地址栏中输入：https://app.dbazure.cn，点击【安装】按钮。如图所示： 2、安装后桌面快捷图标 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"ruan-jian-xia-zai-an-zhuang/dian-811128-pc-duan/shen-lan-pdf-cha-kan-qi.html":{"url":"ruan-jian-xia-zai-an-zhuang/dian-811128-pc-duan/shen-lan-pdf-cha-kan-qi.html","title":"深蓝PDF查看器","keywords":"","body":"深蓝PDF查看器 在浏览器地址栏中输入：https://inkstone.dbazure.cn/pdfv/，点击安装，如下图所示： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"ruan-jian-xia-zai-an-zhuang/yi-dong-she-590728-app-duan.html":{"url":"ruan-jian-xia-zai-an-zhuang/yi-dong-she-590728-app-duan.html","title":"移动设备(APP)端","keywords":"","body":"移动设备安装深蓝砚台 手机自带应用商店，搜索‘深蓝砚台’，然后下载安装； Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-19 09:57:05 "},"xiang-mu-fa-bu.html":{"url":"xiang-mu-fa-bu.html","title":"项目发布","keywords":"","body":"项目发布 1、创建项目 下载并安装软件“深蓝软件砚台智能云开发平台” 后双击图标打开，选择创建好的应用。在“应用资源管理器”下方点击鼠标右键，选择“添加项目”，创建新的项目。 在弹出的“新建资源项目”界面中选择相应的项目类型，并命名一个和其他项目名字不同名的“资源名称”，点击“确定”按钮创建成功。 项目类型 通用UI表单 说明：通用web表单，适用于PC及大尺寸设备； 移动UI表单 说明：适用于智能电话及小尺寸设备 UI流程 作用：客户端处理流程，定义方法； 创建项目完毕，即可对项目进行设计、功能实现等业务逻辑的处理。处理完毕，即可发布项目。 2、发布项目 在需要发布的项目上，点击鼠标右键，弹出的选择菜单选择“属性”，弹出“应用资源属性”界面。在“应用资源属性”界面复制“资源路径”里的路径，点击“发布资源”按钮发布资源。发布成功后，关闭此页面。 下载并安装软件“深蓝软件砚台智能云” 双击软件图标打开。找到创建好的应用点击进入应用。点击应用界面中的 “系统设置”，打开“安全管理控制台”。点击“系统功能组件”选项，选择项目运行的客户端。 点击“添加功能组件”按钮，添加新的功能组件。在右侧的界面中填写相应的信息，点击“保存”按钮即可保存项目。 功能组件设置说明 标题 类型：字符串； 说明：功能组件显示的名称； 功能描述 类型：字符串； 说明：对此功能组件的描述信息； 资源关键字 类型：数值； 说明：在开发平台复制取到的“资源路径”的值； 加载方式 类型：（下拉选框）； 说明：可选值：堆栈视图导航（App）、弹出对话窗口（PC）、选项卡（PC）； 所需权限 类型：（单选框）； 说明：可选值：只读、读写、删除、完全控制； 添加功能组件 类型：（按钮）； 说明：添加新的功能组件； 图片 类型：（图片上传控件）； 说明：通过“图片上传控件”设置图片，显示在功能组件的相应位置； 保存 类型：（按钮）； 说明：保存功能组件信息； 删除组件 类型：（按钮）； 说明：删除选择的功能组件； 保存功能组件后，选择“安全管理控制台”中“用户信息”，在“用户管理”界面，选择用户，点击“设置权限”。 点击“设置权限”后，弹出“权限分配设置”界面，在相应的选项下找到需要发布的功能组件，选中功能组件，设置相应的“设置访问方式”， 点击“关闭”按钮后即完成了功能组件发布的全部过程。打开“深蓝软件砚台智能云” （PC端）、“砚台” （App端）进入相应的应用即可使用、测试发布的功能组件。 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 13:56:26 "},"pcxi-tong-an-quan-kong-zhi-tai-pei-zhi.html":{"url":"pcxi-tong-an-quan-kong-zhi-tai-pei-zhi.html","title":"PC系统安全控制台配置","keywords":"","body":"PC系统安全控制台配置 1、应用启动项里配置应用所在服务器、数据库 app.CurrentApp.EnvironVariables.ServiceUrl = “应用配置的数据库所在服务器地址” app.EnvironVariables.SecurityDB=\"应用存储数据的数据库名\"; 2、复制存储过程到上面配置的数据库里（存储过程代码见文件PC系统安全控制台存储过程） 3、在执行加载系统安全控制台功能时调用方法DBFX.Security.LoadConsole() 4、界面就会被加载显示 Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 13:09:35 "},"pcxi-tong-an-quan-kong-zhi-tai-cun-chu-guo-cheng.html":{"url":"pcxi-tong-an-quan-kong-zhi-tai-cun-chu-guo-cheng.html","title":"PC系统安全控制台存储过程","keywords":"","body":"PC系统安全控制台存储过程 1、SP_Sec_AddUser2Group function (appid,co_id,u,ug) { u=JSON.parse(u); ug=JSON.parse(ug); var u2g=db.Sec_User2Groups.findOne({UId:u._id,GId:ug._id}); if(u2g==null) { u2g={_id:new ObjectId().str,AppId:appid,Co_id:co_id,UId:u._id,UserName:u.UserName,GId:ug._id,GroupName:ug.GroupName,GroupDesc:ug.GroupDesc}; db.Sec_User2Groups.insert(u2g); } return u2g; } 2、SP_Sec_AddUserGroup function (ugdata) { var ugdoc=JSON.parse(ugdata); if(ugdoc._id!==undefined) { db.Sec_UserGroups.update({_id:ugdoc._id},{$set:{GroupName:ugdoc.GroupName,GroupDesc:ugdoc.GroupDesc}}); } else { ugdoc._id=new ObjectId().str; db.Sec_UserGroups.insert(ugdoc); } ugdoc.ObjectTitle=ugdoc.GroupName; return ugdoc; } 3、SP_Sec_DelComponent function (cid) { db.Sec_Components.deleteOne({_id:cid}); db.Sec_Permissions.deleteMany({ResId:cid},false,true); return 0; } 4、SP_Sec_DelUserGroup function (ugid) { db.Sec\\_UserGroups.deleteOne\\({\\_id:ugid}\\); return 0; } 5、SP_Sec_GetU2OPermission function (uid,rid,spflag) { //uid 用户标识 //rid 对象标识 //spflag //安全策略规则 var pv=-1; pv=db.Sec_Permissions.findOne({ObjId:uid,ResId:rid}); if(pv==null){ //获取用户得安全组 var ugs=db.Sec_User2Groups.find({UId:uid}).toArray(); var pvs=db.Sec_Permissions.find({ObjId:{$in:ugs},ResId:rid}).sort({Priority:1}).limit(1).toArray(); if(pvs.length==0) pv=-1; else pv=pvs[0].SecValue; } else pv=pv.SecValue; return pv; } 6、SP_Sec_LoadComs2Obj function (appid,pid,oid,flag,Co_id) { var coms=new Array(); if(flag==undefined) flag=0; var resitems=[]; if(pid==\"\") { if(Co_id==\"111\") { var Components_id=\"5a8121c6a5cf1b381cf3a079\" var coms=db.Sec_Components.find({AppId:appid,PId:pid}).toArray(); //var Components_id= } else { var Components_id=\"5a8121c6a5cf1b381cf3a079\" var coms=db.Sec_Components.find({AppId:appid,PId:Components_id}).toArray(); } //var coms=db.Sec_Components.find({AppId:appid,PId:pid}).toArray(); resitems=coms; //resitems=[] } else { coms=db.Sec_Components.find({AppId:appid,PId:pid}).toArray(); resitems=coms; } if(flag==1) { resitems.forEach(function(item) { item.SecValue=SP_Sec_GetU2OPermission(oid,item._id,0); if(item.SecValue!=-1) item.SecFlag=true; else item.SecFlag=false; }); } return coms; } 7、SP_Sec_LoadConsole function (appid) { var secPolicies={ StandaloneSignOn:false, PwdComplex:false, PwdDisableDate:false, PwdVDays:0, EnabledDeviceId:false, EnabledIPAddress:false, EnabledNFC:false}; var secroot=[{Text:\"系统安全控制台\",ImageUrl:\"themes/%currenttheme%/images/securityconsole/console.png\",Items:[ {Text:\"用户信息\",ImageUrl:\"themes/%currenttheme%/images/securityconsole/user.png\",PageResourceUri:\"apps/3b5a0533153c4a0fa5f0a35305123423/952c8f17bb9343c9bb56eee32b4a7de8.scrn\",NType:0}, {Text:\"用户组\",ImageUrl:\"themes/%currenttheme%/images/securityconsole/usergroup.png\",PageResourceUri:\"apps/3b5a0533153c4a0fa5f0a35305123423/81015f9fe97247a081283906592c171c.scrn\",NType:0}, {Text:\"系统功能组件\",ImageUrl:\"themes/%currenttheme%/images/securityconsole/components.png\",PageResourceUri:\"apps/3b5a0533153c4a0fa5f0a35305123423/59f85d417e48630557f0b134.scrn\",NType:2,_id:\"\",AppId:appid,PId:\"\"}], PageResourceUri:\"apps/3b5a0533153c4a0fa5f0a35305123423/d2601a8b76c543cd8c479f383eeaa348.scrn\", Policies:secPolicies,NType:0 }]; return secroot; } 8、SP_Sec_LoadUser2Groups function (appid,co_id,uid) { var u2gs=db.Sec_User2Groups.find({AppId:appid,Co_id:co_id,UId:uid}).toArray(); return u2gs; } 9、SP_Sec_LoadUserGroups function () { // write your code here } 10、SP_Sec_LoadUserPermissions function (uid,co_id) { //用户权限列表 var upvs=db.Sec_Permissions.find({ObjId:uid},{ResId:1,SecValue:1,Priority:1}).toArray(); //用户组权限列表 var ugs=db.Sec_User2Groups.find({UId:uid},{_id:0,GId:1}).toArray(); var gids = []; ugs.forEach (function(item) { gids.push(item.GId); }); var ugpvs=db.Sec_Permissions.find({ObjId:{$in:gids}},{ResId:1,SecValue:1,Priority:1}).sort({ResId:1,Priority:1}).toArray(); var pvs={}; upvs.forEach(function(pv) { var k=\"p\"+pv.ResId.replace(/-/i,\"\"); pvs[k]={SecVal:pv.SecValue,P:pv.Priority}; }); ugpvs.forEach(function(pv) { var k=\"p\"+pv.ResId.replace(/-/i,\"\"); var tpv=pvs[k]; if(tpv!=undefined && tpv.Priority>pv.Priority) {} else { pvs[k]={SecVal:pv.SecValue,P:pv.Priority}; } }); return pvs; } 11、SP_Sec_LoadUsers function () { var users=db.Sec_AppUsers.find({}).toArray(); return users } 12、SP_Sec_QueryGroups function (keyword,Co_id) { var ugs=db.Sec_UserGroups.find({GroupName:{$regex:keyword, $options:'i'},Co_id:Co_id}).toArray(); return ugs; } 13、SP_Sec_QueryUsers function (appid,co_id,keyword) { var users=db.Sec_AppUsers.find({Co_id:co_id,UserName:{$regex:keyword, $options:'i'}}).toArray(); return users; } 14、SP_Sec_RemoveUser2Group function (id) { db.Sec_User2Groups.deleteOne({_id:id}); return 0; } 15、SP_Sec_SaveComponent function(doc) { var cdoc=JSON.parse(doc); if(cdoc._id==undefined) { cdoc._id=new ObjectId().str; db.Sec_Components.insert(cdoc); } else { db.Sec_Components.update({_id:cdoc._id},{$set:{AppId:cdoc.AppId,PId:cdoc.PId,Text:cdoc.Text,Description:cdoc.Description,ImageUrl:cdoc.ImageUrl,ResourceUri:cdoc.ResourceUri,Mode:cdoc.Mode,SecTag:cdoc.SecTag,Co_id:cdoc.Co_id}},false,true); } return cdoc; } 16、SP_Sec_SetPermission function(appid,co_id,objid,resid,priority,secval) { var r=0; //删除权限定义 if(secval==-1) { db.Sec_Permissions.deleteOne({ObjId:objid,ResId:resid}); } else { var u=db.Sec_Permissions.update({ObjId:objid,ResId:resid},{$set:{SecValue:secval}},false,true); if(u.nMatched==0){ var pdoc={ObjId:objid,ResId:resid,Priority:priority,SecValue:secval} pdoc._id=new ObjectId().str; db.Sec_Permissions.insert(pdoc); } } return r; } Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 13:17:12 "},"wei-xin-gong-zhong-hao-da-kai-ying-yong-jie-mian.html":{"url":"wei-xin-gong-zhong-hao-da-kai-ying-yong-jie-mian.html","title":"微信公众号打开应用界面","keywords":"","body":"微信公众号打开应用页面 应用设置 1、数据库中的应用信息添加字段：Params-对象类型 （测试库应用表路径：DB_AzureBS/GLI_Applications） 2、Params格式： 示例： { \"AppId\" : \"e1334061f1954b10b25f1deee1c26725\", \"Co_id\" : \"\", \"Co_Name\" : \"深蓝应用开发练习\", \"Workspace\" : { \"ResourceUri\" : \"apps/e1334061f1954b10b25f1deee1c26725/ae36271a285345f59b1c31acee53c26e.scrn\", \"Text\" : \"深蓝应用开发练习\" }, \"WxConfig\" : { \"WxAppId\" : \"wx724eb6e103686588\", \"SecretKey\" : \"c414de4feaab0e4a7b609c8f5a7088ce\", \"WPId\" : \"gh_7eac7b1133e0\", \"AccessToken\" : \"\", \"TokenTime\" : ISODate(\"2018-03-19T06:26:05.847Z\"), \"JSTicket\" : \"\", \"JSTicketTime\" : ISODate(\"2018-03-19T06:26:06.210Z\"), \"HomeUri\" : \"apps/e1334061f1954b10b25f1deee1c26725/ae36271a285345f59b1c31acee53c26e.scrn\" } } 3、拼接页面地址： 拼接规则： https://open.weixin.qq.com/connect/oauth2/authorize?appid=微信公众号ID&redirect_uri=回调地址&response_type=code&scope=snsapi_userinfo&state=应用AppID-页面资源路径.scrn-额外参数拼接#wechat_redirect 额外参数拼接： 参数名=参数值，每对之间用’-’分隔；参数的获取：全局属性对象app.EnvironVariables.App_Params.ExParams(只有在微信公众号加载界面资源时才有值)；所有拼接的参数对，会以键值对的形式存储在这个对象上； 测试版示例： https://open.weixin.qq.com/connect/oauth2/authorizeappid=wx724eb6e103686588&redirect\\_uri=https://inkstone.dbazure.cn/defaultwx.aspx&response\\_type=code&scope=snsapi\\_userinfo&state=e1334061f1954b10b25f1deee1c26725-b17eb8220db64232a7fc7b8a3c268f28.scrn-name=jack-age=18\\#wechat\\_redirect app.EnvironVariables.App_Params.ExParams的值：{name: \"jack\",age: \"18\"} 正式版示例： https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx724eb6e103686588&redirect\\_uri=https://wechat.dbazure.cn/&response\\_type=code&scope=snsapi\\_userinfo&state=e1334061f1954b10b25f1deee1c26725-b17eb8220db64232a7fc7b8a3c268f28.scrn\\#wechat\\_redirect 参数说明： Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 13:02:27 "},"wei-xin-liu-lan-qi-si-you-jie-kou.html":{"url":"wei-xin-liu-lan-qi-si-you-jie-kou.html","title":"微信浏览器私有接口","keywords":"","body":"微信浏览器私有接口 微信JS-SDK说明文档: https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421141115 常用方法 关闭当前网页窗口接口 wx.closeWindow() 显示所有功能按钮接口 wx.showAllNonBaseMenuItem() Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 12:54:19 "},"yan-tai-app-shou-ye-sao-miao-er-wei-ma-jia-zai-jie-mian.html":{"url":"yan-tai-app-shou-ye-sao-miao-er-wei-ma-jia-zai-jie-mian.html","title":"砚台APP首页扫描二维码加载界面","keywords":"","body":"砚台App首页扫描二维码加载界面 1、二维码内容拼接格式： 示例： //说明：CodePrefix ---前缀，字符串，符合Javascript变量命名规范，名称唯一，不能重复； //://---固定写法； //{\\\"appid\\\":\\\"12131\\\",\\\"name\\\":\\\"ajfkhasdf\\\"}---需要传递的数据，JSON格式字符串；(引号需要转义！) CodePrefix://{\\\"appid\\\":\\\"12131\\\",\\\"name\\\":\\\"ajfkhasdf\\\"} 2、开发平台应用中创建‘UI流程’（公共方法），接收一个参数，参数值即为二维码中传递的数据，字符串类型；然后执行其他的操作，例如‘加载UI’； 3、在MongoDB数据库DB_Azure里表GLI_AppCodeTypes中插入一条数据，表结构如下： id 字符串 主键 CodePrefix 字符串 示例：payPage AppId 字符串 _应用__id Callback 字符串 需要调用的公共方法名称 示例：app.DynamicModules.Me7b092f17a994309a4615041dea2bea4 Flag 数值 0 Momo 字符串 备注信息; Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-23 12:50:56 "},"fu-biao.html":{"url":"fu-biao.html","title":"附表","keywords":"","body":"Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-24 14:46:21 "},"fu-biao/gao-de-di-tu-ff1a-guo-jia-yu-di-qu-soc.html":{"url":"fu-biao/gao-de-di-tu-ff1a-guo-jia-yu-di-qu-soc.html","title":"高德地图：国家与地区SOC","keywords":"","body":"高德地图：国家与地区SOC Copyright © 长春市深蓝软件有限责任公司 2021 all right reserved，powered by Gitbook该文件修订时间： 2021-02-24 14:46:55 "}}